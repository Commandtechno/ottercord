[
  {
    "name": "Get Current User",
    "method": "GET",
    "path": "/users/@me",
    "params": [],
    "query": [],
    "response": {
      "reference": true,
      "value": "user-object",
      "array": false
    },
    "description": "Returns the user object of the requester's account. For OAuth2, this requires the identify scope, which will return the object without an email, and optionally the email scope, which returns the object with an email."
  },
  {
    "name": "Get User",
    "method": "GET",
    "path": "/users/{user.id}",
    "params": [
      {
        "name": "user.id",
        "link": "DOCS_RESOURCES_USER/user-object"
      }
    ],
    "query": [],
    "response": {
      "reference": true,
      "value": "user-object",
      "array": false
    },
    "description": "Returns a user object for a given user ID."
  },
  {
    "name": "Modify Current User",
    "method": "PATCH",
    "path": "/users/@me",
    "params": [],
    "query": [],
    "response": {
      "reference": true,
      "value": "user-object",
      "array": false
    },
    "description": "Modify the requester's user account settings. Returns a user object on success.",
    "body": {
      "json": true,
      "form": false,
      "params": [
        {
          "type": {
            "reference": false,
            "value": "string",
            "array": false
          },
          "name": "username",
          "description": "user's username, if changed may cause the user's discriminator to be randomized.",
          "required": false
        },
        {
          "type": {
            "reference": false,
            "value": "image data",
            "array": false
          },
          "name": "avatar",
          "description": "if passed, modifies the user's avatar",
          "required": false
        }
      ]
    }
  },
  {
    "name": "Get Current User Guilds",
    "method": "GET",
    "path": "/users/@me/guilds",
    "params": [],
    "query": [
      {
        "type": "snowflake",
        "name": "before",
        "description": "get guilds before this guild ID",
        "required": false
      },
      {
        "type": "snowflake",
        "name": "after",
        "description": "get guilds after this guild ID",
        "required": false
      },
      {
        "type": "integer",
        "name": "limit",
        "description": "max number of guilds to return",
        "required": false
      }
    ],
    "response": {
      "reference": true,
      "value": "guild-object",
      "array": false
    },
    "description": "Returns a list of partial guild objects the current user is a member of. Requires the guilds OAuth2 scope."
  },
  {
    "name": "Get Current User Guild Member",
    "method": "GET",
    "path": "/users/@me/guilds/{guild.id}/member",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "query": [],
    "response": {
      "reference": true,
      "value": "guild-member-object",
      "array": false
    },
    "description": "Returns a guild member object for the current user. Requires the guilds.members.read OAuth2 scope."
  },
  {
    "name": "Leave Guild",
    "method": "DELETE",
    "path": "/users/@me/guilds/{guild.id}",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "query": [],
    "response": {
      "reference": false,
      "value": "Leave a guild. Returns a 204 empty response on success.",
      "array": false
    },
    "description": "Leave a guild. Returns a 204 empty response on success."
  },
  {
    "name": "Create DM",
    "method": "POST",
    "path": "/users/@me/channels",
    "params": [],
    "query": [],
    "response": {
      "reference": true,
      "value": "channel-object",
      "array": false
    },
    "description": "Create a new DM channel with a user. Returns a DM channel object.",
    "body": {
      "json": true,
      "form": false,
      "params": [
        {
          "type": {
            "reference": false,
            "value": "snowflake",
            "array": false
          },
          "name": "recipient_id",
          "description": "the recipient to open a DM channel with",
          "required": false
        }
      ]
    }
  },
  {
    "name": "Create Group DM",
    "method": "POST",
    "path": "/users/@me/channels",
    "params": [],
    "query": [],
    "response": {
      "reference": true,
      "value": "channel-object",
      "array": false
    },
    "description": "Create a new group DM channel with multiple users. Returns a DM channel object. This endpoint was intended to be used with the now-deprecated GameBridge SDK. DMs created with this endpoint will not be shown in the Discord client",
    "body": {
      "json": true,
      "form": false,
      "params": [
        {
          "type": {
            "reference": false,
            "value": "array of strings",
            "array": true
          },
          "name": "access_tokens",
          "description": "access tokens of users that have granted your app the `gdm.join` scope",
          "required": false
        },
        {
          "type": {
            "reference": false,
            "value": "dict",
            "array": false
          },
          "name": "nicks",
          "description": "a dictionary of user ids to their respective nicknames",
          "required": false
        }
      ]
    }
  },
  {
    "name": "Get User Connections",
    "method": "GET",
    "path": "/users/@me/connections",
    "params": [],
    "query": [],
    "response": {
      "reference": true,
      "value": "connection-object",
      "array": false
    },
    "description": "Returns a list of connection objects. Requires the connections OAuth2 scope."
  }
]