[
  {
    "tree": [
      "channel-object-example-guild-news-channel",
      "channel-object-example-guild-news-channel"
    ],
    "name": "Example Guild News Channel",
    "language": "json",
    "content": "{\n  \"id\": \"41771983423143937\",\n  \"guild_id\": \"41771983423143937\",\n  \"name\": \"important-news\",\n  \"type\": 5,\n  \"position\": 6,\n  \"permission_overwrites\": [],\n  \"nsfw\": true,\n  \"topic\": \"Rumors about Half Life 3\",\n  \"last_message_id\": \"155117677105512449\",\n  \"parent_id\": \"399942396007890945\",\n  \"default_auto_archive_duration\": 60\n}"
  },
  {
    "tree": [],
    "name": "Example Guild Voice Channel",
    "language": "json",
    "content": "{\n  \"id\": \"155101607195836416\",\n  \"guild_id\": \"41771983423143937\",\n  \"name\": \"ROCKET CHEESE\",\n  \"type\": 2,\n  \"nsfw\": false,\n  \"position\": 5,\n  \"permission_overwrites\": [],\n  \"bitrate\": 64000,\n  \"user_limit\": 0,\n  \"parent_id\": null,\n  \"rtc_region\": null\n}"
  },
  {
    "tree": [],
    "name": "Example DM Channel",
    "language": "json",
    "content": "{\n  \"last_message_id\": \"3343820033257021450\",\n  \"type\": 1,\n  \"id\": \"319674150115610528\",\n  \"recipients\": [\n    {\n      \"username\": \"test\",\n      \"discriminator\": \"9999\",\n      \"id\": \"82198898841029460\",\n      \"avatar\": \"33ecab261d4681afa4d85a04691c4a01\"\n    }\n  ]\n}"
  },
  {
    "tree": [],
    "name": "Example Group DM Channel",
    "language": "json",
    "content": "{\n  \"name\": \"Some test channel\",\n  \"icon\": null,\n  \"recipients\": [\n    {\n      \"username\": \"test\",\n      \"discriminator\": \"9999\",\n      \"id\": \"82198898841029460\",\n      \"avatar\": \"33ecab261d4681afa4d85a04691c4a01\"\n    },\n    {\n      \"username\": \"test2\",\n      \"discriminator\": \"9999\",\n      \"id\": \"82198810841029460\",\n      \"avatar\": \"33ecab261d4681afa4d85a10691c4a01\"\n    }\n  ],\n  \"last_message_id\": \"3343820033257021450\",\n  \"type\": 3,\n  \"id\": \"319674150115710528\",\n  \"owner_id\": \"82198810841029460\"\n}"
  },
  {
    "tree": [],
    "name": "Example Channel Category",
    "language": "json",
    "content": "{\n  \"permission_overwrites\": [],\n  \"name\": \"Test\",\n  \"parent_id\": null,\n  \"nsfw\": false,\n  \"position\": 0,\n  \"guild_id\": \"290926798629997250\",\n  \"type\": 4,\n  \"id\": \"399942396007890945\"\n}"
  },
  {
    "tree": [],
    "name": "Example Store Channel",
    "language": "json",
    "content": "{\n  \"id\": \"41771983423143937\",\n  \"guild_id\": \"41771983423143937\",\n  \"name\": \"buy dota-2\",\n  \"type\": 6,\n  \"position\": 0,\n  \"permission_overwrites\": [],\n  \"nsfw\": false,\n  \"parent_id\": null\n}"
  },
  {
    "tree": [],
    "name": "Example Thread Channel",
    "language": "json",
    "content": "{\n  \"id\": \"41771983423143937\",\n  \"guild_id\": \"41771983423143937\",\n  \"parent_id\": \"41771983423143937\",\n  \"owner_id\": \"41771983423143937\",\n  \"name\": \"don't buy dota-2\",\n  \"type\": 11,\n  \"last_message_id\": \"155117677105512449\",\n  \"message_count\": 1,\n  \"member_count\": 5,\n  \"rate_limit_per_user\": 2,\n  \"thread_metadata\": {\n    \"archived\": false,\n    \"auto_archive_duration\": 1440,\n    \"archive_timestamp\": \"2021-04-12T23:40:39.855793+00:00\",\n    \"locked\": false\n  }\n}"
  },
  {
    "tree": [
      "message-object-example-crossposted-message",
      "message-object-example-crossposted-message"
    ],
    "name": "Example Crossposted Message",
    "language": "json",
    "content": "{\n  \"reactions\": [\n    {\n      \"count\": 1,\n      \"me\": false,\n      \"emoji\": {\n        \"id\": null,\n        \"name\": \"ðŸ”¥\"\n      }\n    }\n  ],\n  \"attachments\": [],\n  \"tts\": false,\n  \"embeds\": [],\n  \"timestamp\": \"2017-07-11T17:27:07.299000+00:00\",\n  \"mention_everyone\": false,\n  \"id\": \"334385199974967042\",\n  \"pinned\": false,\n  \"edited_timestamp\": null,\n  \"author\": {\n    \"username\": \"Mason\",\n    \"discriminator\": \"9999\",\n    \"id\": \"53908099506183680\",\n    \"avatar\": \"a_bab14f271d565501444b2ca3be944b25\"\n  },\n  \"mention_roles\": [],\n  \"mention_channels\": [\n    {\n      \"id\": \"278325129692446722\",\n      \"guild_id\": \"278325129692446720\",\n      \"name\": \"big-news\",\n      \"type\": 5\n    }\n  ],\n  \"content\": \"Big news! In this <#278325129692446722> channel!\",\n  \"channel_id\": \"290926798999357250\",\n  \"mentions\": [],\n  \"type\": 0,\n  \"flags\": 2,\n  \"message_reference\": {\n    \"channel_id\": \"278325129692446722\",\n    \"guild_id\": \"278325129692446720\",\n    \"message_id\": \"306588351130107906\"\n  }\n}"
  },
  {
    "tree": [
      "emoji-object-emoji-example",
      "emoji-object-gateway-reaction-standard-emoji-example",
      "emoji-object-gateway-reaction-standard-emoji-example"
    ],
    "name": "Gateway Reaction Standard Emoji Example",
    "language": "json",
    "content": "{\n  \"id\": null,\n  \"name\": \"ðŸ”¥\"\n}"
  },
  {
    "tree": [],
    "name": "Gateway Reaction Custom Emoji Examples",
    "language": "json",
    "content": "{\n  \"id\": \"41771983429993937\",\n  \"name\": null\n}"
  },
  {
    "tree": [
      "unavailable-guild-object",
      "unavailable-guild-object",
      "unavailable-guild-object",
      "unavailable-guild-object",
      "unavailable-guild-object-example-unavailable-guild",
      "unavailable-guild-object-example-unavailable-guild"
    ],
    "name": "Example Unavailable Guild",
    "language": "json",
    "content": "{\n  \"id\": \"41771983423143937\",\n  \"unavailable\": true\n}"
  },
  {
    "tree": [
      "create-guild-example-partial-channel-object",
      "create-guild-example-category-channel",
      "create-guild-example-category-channel"
    ],
    "name": "Example Category Channel",
    "language": "json",
    "content": "{\n  \"id\": \"2909267986263572999\",\n  \"name\": \"Mason's Test Server\",\n  \"icon\": \"389030ec9db118cb5b85a732333b7c98\",\n  \"description\": null,\n  \"splash\": \"75610b05a0dd09ec2c3c7df9f6975ea0\",\n  \"discovery_splash\": null,\n  \"approximate_member_count\": 2,\n  \"approximate_presence_count\": 2,\n  \"features\": [\n    \"INVITE_SPLASH\",\n    \"VANITY_URL\",\n    \"COMMERCE\",\n    \"BANNER\",\n    \"NEWS\",\n    \"VERIFIED\",\n    \"VIP_REGIONS\"\n  ],\n  \"emojis\": [\n    {\n      \"name\": \"ultrafastparrot\",\n      \"roles\": [],\n      \"id\": \"393564762228785161\",\n      \"require_colons\": true,\n      \"managed\": false,\n      \"animated\": true,\n      \"available\": true\n    }\n  ],\n  \"banner\": \"5c3cb8d1bc159937fffe7e641ec96ca7\",\n  \"owner_id\": \"53908232506183680\",\n  \"application_id\": null,\n  \"region\": null,\n  \"afk_channel_id\": null,\n  \"afk_timeout\": 300,\n  \"system_channel_id\": null,\n  \"widget_enabled\": true,\n  \"widget_channel_id\": \"639513352485470208\",\n  \"verification_level\": 0,\n  \"roles\": [\n    {\n      \"id\": \"2909267986263572999\",\n      \"name\": \"@everyone\",\n      \"permissions\": \"49794752\",\n      \"position\": 0,\n      \"color\": 0,\n      \"hoist\": false,\n      \"managed\": false,\n      \"mentionable\": false\n    }\n  ],\n  \"default_message_notifications\": 1,\n  \"mfa_level\": 0,\n  \"explicit_content_filter\": 0,\n  \"max_presences\": null,\n  \"max_members\": 250000,\n  \"max_video_channel_users\": 25,\n  \"vanity_url_code\": \"no\",\n  \"premium_tier\": 0,\n  \"premium_subscription_count\": 0,\n  \"system_channel_flags\": 0,\n  \"preferred_locale\": \"en-US\",\n  \"rules_channel_id\": null,\n  \"public_updates_channel_id\": null\n}"
  },
  {
    "tree": [
      "get-guild-member",
      "get-guild-member",
      "get-guild-member",
      "list-guild-members",
      "list-guild-members",
      "list-guild-members",
      "list-guild-members",
      "list-guild-members-query-string-params",
      "search-guild-members",
      "search-guild-members",
      "search-guild-members",
      "search-guild-members",
      "search-guild-members-query-string-params",
      "add-guild-member",
      "add-guild-member",
      "add-guild-member",
      "add-guild-member",
      "add-guild-member-json-params",
      "modify-guild-member",
      "modify-guild-member",
      "modify-guild-member",
      "modify-guild-member",
      "modify-guild-member-json-params",
      "modify-current-member",
      "modify-current-member",
      "modify-current-member",
      "modify-current-member",
      "modify-current-member-json-params",
      "modify-current-user-nick",
      "modify-current-user-nick",
      "modify-current-user-nick",
      "modify-current-user-nick",
      "modify-current-user-nick-json-params",
      "add-guild-member-role",
      "add-guild-member-role",
      "add-guild-member-role",
      "add-guild-member-role",
      "remove-guild-member-role",
      "remove-guild-member-role",
      "remove-guild-member-role",
      "remove-guild-member-role",
      "remove-guild-member",
      "remove-guild-member",
      "remove-guild-member",
      "remove-guild-member",
      "get-guild-bans",
      "get-guild-bans",
      "get-guild-bans",
      "get-guild-bans",
      "get-guild-ban",
      "get-guild-ban",
      "get-guild-ban",
      "get-guild-ban",
      "create-guild-ban",
      "create-guild-ban",
      "create-guild-ban",
      "create-guild-ban",
      "create-guild-ban-json-params",
      "remove-guild-ban",
      "remove-guild-ban",
      "remove-guild-ban",
      "remove-guild-ban",
      "get-guild-roles",
      "get-guild-roles",
      "get-guild-roles",
      "get-guild-roles",
      "create-guild-role",
      "create-guild-role",
      "create-guild-role",
      "create-guild-role",
      "create-guild-role-json-params",
      "modify-guild-role-positions",
      "modify-guild-role-positions",
      "modify-guild-role-positions",
      "modify-guild-role-positions",
      "modify-guild-role-positions-json-params",
      "modify-guild-role",
      "modify-guild-role",
      "modify-guild-role",
      "modify-guild-role",
      "modify-guild-role-json-params",
      "delete-guild-role",
      "delete-guild-role",
      "delete-guild-role",
      "delete-guild-role",
      "get-guild-prune-count",
      "get-guild-prune-count",
      "get-guild-prune-count",
      "get-guild-prune-count",
      "get-guild-prune-count-query-string-params",
      "begin-guild-prune",
      "begin-guild-prune",
      "begin-guild-prune",
      "begin-guild-prune",
      "begin-guild-prune-json-params",
      "get-guild-voice-regions",
      "get-guild-voice-regions",
      "get-guild-voice-regions",
      "get-guild-voice-regions",
      "get-guild-invites",
      "get-guild-invites",
      "get-guild-invites",
      "get-guild-invites",
      "get-guild-integrations",
      "get-guild-integrations",
      "get-guild-integrations",
      "get-guild-integrations",
      "delete-guild-integration",
      "delete-guild-integration",
      "delete-guild-integration",
      "delete-guild-integration",
      "get-guild-widget-settings",
      "get-guild-widget-settings",
      "get-guild-widget-settings",
      "get-guild-widget-settings",
      "modify-guild-widget",
      "modify-guild-widget",
      "modify-guild-widget",
      "modify-guild-widget",
      "get-guild-widget",
      "get-guild-widget",
      "get-guild-widget",
      "get-guild-widget",
      "get-guild-vanity-url",
      "get-guild-vanity-url",
      "get-guild-vanity-url",
      "get-guild-vanity-url",
      "get-guild-vanity-url-example-partial-invite-object",
      "get-guild-vanity-url-example-partial-invite-object"
    ],
    "name": "Example Partial Invite Object",
    "language": "json",
    "content": "{\n  \"code\": \"abc\",\n  \"uses\": 12\n}"
  },
  {
    "tree": [
      "get-current-user",
      "get-current-user",
      "get-current-user",
      "get-current-user",
      "get-user",
      "get-user",
      "get-user",
      "get-user",
      "modify-current-user",
      "modify-current-user",
      "modify-current-user",
      "modify-current-user",
      "modify-current-user-json-params",
      "get-current-user-guilds",
      "get-current-user-guilds",
      "get-current-user-guilds",
      "get-current-user-guilds",
      "get-current-user-guilds-example-partial-guild",
      "get-current-user-guilds-example-partial-guild"
    ],
    "name": "Example Partial Guild",
    "language": "json",
    "content": "{\n  \"id\": \"80351110224678912\",\n  \"name\": \"1337 Krew\",\n  \"icon\": \"8342729096ea3675442027381ff50dfe\",\n  \"owner\": true,\n  \"permissions\": \"36953089\",\n  \"features\": [\"COMMUNITY\", \"NEWS\"]\n}"
  },
  {
    "tree": [
      "webhook-object-example-channel-follower-webhook",
      "webhook-object-example-channel-follower-webhook"
    ],
    "name": "Example Channel Follower Webhook",
    "language": "json",
    "content": "{\n  \"type\": 2,\n  \"id\": \"752831914402115456\",\n  \"name\": \"Guildy name\",\n  \"avatar\": \"bb71f469c158984e265093a81b3397fb\",\n  \"channel_id\": \"561885260615255432\",\n  \"guild_id\": \"56188498421443265\",\n  \"application_id\": null,\n  \"source_guild\": {\n    \"id\": \"56188498421476534\",\n    \"name\": \"Guildy name\",\n    \"icon\": \"bb71f469c158984e265093a81b3397fb\"\n  },\n  \"source_channel\": {\n    \"id\": \"5618852344134324\",\n    \"name\": \"announcements\"\n  },\n  \"user\": {\n    \"username\": \"test\",\n    \"discriminator\": \"7479\",\n    \"id\": \"190320984123768832\",\n    \"avatar\": \"b004ec1740a63ca06ae2e14c5cee11f3\",\n    \"public_flags\": 131328\n  }\n}"
  },
  {
    "tree": [],
    "name": "Example Application Webhook",
    "language": "json",
    "content": "{\n  \"type\": 3,\n  \"id\": \"658822586720976555\",\n  \"name\": \"Clyde\",\n  \"avatar\": \"689161dc90ac261d00f1608694ac6bfd\",\n  \"channel_id\": null,\n  \"guild_id\": null,\n  \"application_id\": \"658822586720976555\"\n}"
  },
  {
    "tree": [
      "connecting-websocket",
      "connecting-websocket"
    ],
    "name": "WebSocket",
    "language": "",
    "content": "ws://127.0.0.1:PORT?v=1&client_id=YOUR_CLIENT_ID&encoding=json"
  },
  {
    "tree": [],
    "name": "Microphone Id Example",
    "language": "cpp",
    "content": "id = waveInMessage((HWAVEIN)IntToPtr(index),\n                      DRV_QUERYFUNCTIONINSTANCEID,\n                      (DWORD_PTR)pstrEndpointId,\n                      cbEndpointId);"
  },
  {
    "tree": [],
    "name": "Speaker Id Example",
    "language": "cpp",
    "content": "id = waveOutMessage((HWAVEIN)IntToPtr(index),\n                      DRV_QUERYFUNCTIONINSTANCEID,\n                      (DWORD_PTR)pstrEndpointId,\n                      cbEndpointId);"
  },
  {
    "tree": [],
    "name": "HTTP Request Example",
    "language": "",
    "content": "curl -X POST -H 'Content-Type: application/json' -d '\n{\n  \"nonce\": \"9b4e9711-97f3-4f35-b047-32c82a51978e\",\n  \"cmd\": \"SET_CERTIFIED_DEVICES\",\n  \"args\": {\n    \"devices\": [\n      {\n        \"type\": \"audioinput\",\n        \"id\": \"{0.0.1.00000000}.{6cff2b76-44a8-46b9-b528-262ad8609d9f}\",\n        \"vendor\": {\n          \"name\": \"SteelSeries\",\n          \"url\": \"https://steelseries.com\"\n        },\n        \"model\": {\n          \"name\": \"Arctis 7\",\n          \"url\": \"https://steelseries.com/gaming-headsets/arctis-7\"\n        },\n        \"related\": [\"{0.0.1.00000000}.{6cff2b76-44a8-46b9-b528-262ad8609d9f}\"],\n        \"echo_cancellation\": true,\n        \"noise_suppression\": true,\n        \"automatic_gain_control\": true,\n        \"hardware_mute\": false\n      }\n    ]\n  }\n}\n' http://127.0.0.1:PORT/rpc?v=1&client_id=YOUR_CLIENT_ID"
  },
  {
    "tree": [],
    "name": "HTTP Response Example",
    "language": "json",
    "content": "{\n  \"cmd\": \"SET_CERTIFIED_DEVICES\",\n  \"data\": null,\n  \"evt\": null,\n  \"nonce\": \"9b4e9711-97f3-4f35-b047-32c82a51978e\"\n}"
  },
  {
    "tree": [],
    "name": "RPC Command Example",
    "language": "json",
    "content": "{\n  \"nonce\": \"9b4e9711-97f3-4f35-b047-32c82a51978e\",\n  \"cmd\": \"SET_CERTIFIED_DEVICES\",\n  \"args\": {\n    \"devices\": [\n      {\n        \"type\": \"audioinput\",\n        \"id\": \"{0.0.1.00000000}.{6cff2b76-44a8-46b9-b528-262ad8609d9f}\",\n        \"vendor\": {\n          \"name\": \"SteelSeries\",\n          \"url\": \"https://steelseries.com\"\n        },\n        \"model\": {\n          \"name\": \"Arctis 7\",\n          \"url\": \"https://steelseries.com/gaming-headsets/arctis-7\"\n        },\n        \"related\": [\"{0.0.1.00000000}.{6cff2b76-44a8-46b9-b528-262ad8609d9f}\"],\n        \"echo_cancellation\": true,\n        \"noise_suppression\": true,\n        \"automatic_gain_control\": true,\n        \"hardware_mute\": false\n      }\n    ]\n  }\n}"
  },
  {
    "tree": [],
    "name": "RPC Response Example",
    "language": "json",
    "content": "{\n  \"nonce\": \"9b4e9711-97f3-4f35-b047-32c82a51978e\",\n  \"cmd\": \"SET_CERTIFIED_DEVICES\",\n  \"data\": null,\n  \"evt\": null\n}"
  },
  {
    "tree": [
      "receiving-payloads",
      "receiving-payloads",
      "receiving-payloads",
      "receiving-payloads",
      "encoding-and-compression",
      "encoding-and-compression",
      "encoding-and-compression",
      "encoding-and-compression",
      "etf-json",
      "etf-json",
      "etf-json",
      "etf-json",
      "etf-json-using-etf",
      "etf-json-using-etf",
      "etf-json-using-etf",
      "etf-json-using-etf",
      "payload-compression",
      "payload-compression",
      "payload-compression",
      "payload-compression",
      "transport-compression",
      "transport-compression",
      "transport-compression",
      "transport-compression",
      "transport-compression-transport-compression-example",
      "transport-compression-transport-compression-example"
    ],
    "name": "Transport Compression Example",
    "language": "python",
    "content": "# Z_SYNC_FLUSH suffix\nZLIB_SUFFIX = b'\\x00\\x00\\xff\\xff'\n# initialize a buffer to store chunks\nbuffer = bytearray()\n# create a zlib inflation context to run chunks through\ninflator = zlib.decompressobj()\n\n# ...\ndef on_websocket_message(msg):\n  # always push the message data to your cache\n  buffer.extend(msg)\n\n  # check if the last four bytes are equal to ZLIB_SUFFIX\n  if len(msg) < 4 or msg[-4:] != ZLIB_SUFFIX:\n    return\n\n  # if the message *does* end with ZLIB_SUFFIX,\n  # get the full message by decompressing the buffers\n  # NOTE: the message is utf-8 encoded.\n  msg = inflator.decompress(buffer)\n  buffer = bytearray()\n\n  # here you can treat `msg` as either JSON or ETF encoded,\n  # depending on your `encoding` param"
  },
  {
    "tree": [
      "connecting-example-gateway-hello",
      "heartbeating",
      "heartbeating",
      "heartbeating",
      "heartbeating",
      "heartbeating-example-gateway-heartbeat-ack",
      "heartbeating-example-gateway-heartbeat-ack"
    ],
    "name": "Example Gateway Heartbeat ACK",
    "language": "json",
    "content": "{\n  \"op\": 11\n}"
  },
  {
    "tree": [],
    "name": "Example Gateway Identify",
    "language": "json",
    "content": "{\n  \"op\": 2,\n  \"d\": {\n    \"token\": \"my_token\",\n    \"intents\": 513,\n    \"properties\": {\n      \"$os\": \"linux\",\n      \"$browser\": \"my_library\",\n      \"$device\": \"my_library\"\n    }\n  }\n}"
  },
  {
    "tree": [],
    "name": "Example Gateway Resume",
    "language": "",
    "content": "GUILDS (1 << 0)\n  - GUILD_CREATE\n  - GUILD_UPDATE\n  - GUILD_DELETE\n  - GUILD_ROLE_CREATE\n  - GUILD_ROLE_UPDATE\n  - GUILD_ROLE_DELETE\n  - CHANNEL_CREATE\n  - CHANNEL_UPDATE\n  - CHANNEL_DELETE\n  - CHANNEL_PINS_UPDATE\n  - THREAD_CREATE\n  - THREAD_UPDATE\n  - THREAD_DELETE\n  - THREAD_LIST_SYNC\n  - THREAD_MEMBER_UPDATE\n  - THREAD_MEMBERS_UPDATE *\n  - STAGE_INSTANCE_CREATE\n  - STAGE_INSTANCE_UPDATE\n  - STAGE_INSTANCE_DELETE\n\nGUILD_MEMBERS (1 << 1)\n  - GUILD_MEMBER_ADD\n  - GUILD_MEMBER_UPDATE\n  - GUILD_MEMBER_REMOVE\n  - THREAD_MEMBERS_UPDATE *\n\nGUILD_BANS (1 << 2)\n  - GUILD_BAN_ADD\n  - GUILD_BAN_REMOVE\n\nGUILD_EMOJIS_AND_STICKERS (1 << 3)\n  - GUILD_EMOJIS_UPDATE\n  - GUILD_STICKERS_UPDATE\n\nGUILD_INTEGRATIONS (1 << 4)\n  - GUILD_INTEGRATIONS_UPDATE\n  - INTEGRATION_CREATE\n  - INTEGRATION_UPDATE\n  - INTEGRATION_DELETE\n\nGUILD_WEBHOOKS (1 << 5)\n  - WEBHOOKS_UPDATE\n\nGUILD_INVITES (1 << 6)\n  - INVITE_CREATE\n  - INVITE_DELETE\n\nGUILD_VOICE_STATES (1 << 7)\n  - VOICE_STATE_UPDATE\n\nGUILD_PRESENCES (1 << 8)\n  - PRESENCE_UPDATE\n\nGUILD_MESSAGES (1 << 9)\n  - MESSAGE_CREATE\n  - MESSAGE_UPDATE\n  - MESSAGE_DELETE\n  - MESSAGE_DELETE_BULK\n\nGUILD_MESSAGE_REACTIONS (1 << 10)\n  - MESSAGE_REACTION_ADD\n  - MESSAGE_REACTION_REMOVE\n  - MESSAGE_REACTION_REMOVE_ALL\n  - MESSAGE_REACTION_REMOVE_EMOJI\n\nGUILD_MESSAGE_TYPING (1 << 11)\n  - TYPING_START\n\nDIRECT_MESSAGES (1 << 12)\n  - MESSAGE_CREATE\n  - MESSAGE_UPDATE\n  - MESSAGE_DELETE\n  - CHANNEL_PINS_UPDATE\n\nDIRECT_MESSAGE_REACTIONS (1 << 13)\n  - MESSAGE_REACTION_ADD\n  - MESSAGE_REACTION_REMOVE\n  - MESSAGE_REACTION_REMOVE_ALL\n  - MESSAGE_REACTION_REMOVE_EMOJI\n\nDIRECT_MESSAGE_TYPING (1 << 14)\n  - TYPING_START\n\nGUILD_SCHEDULED_EVENTS (1 << 16)\n  - GUILD_SCHEDULED_EVENT_CREATE\n  - GUILD_SCHEDULED_EVENT_UPDATE\n  - GUILD_SCHEDULED_EVENT_DELETE\n  - GUILD_SCHEDULED_EVENT_USER_ADD\n  - GUILD_SCHEDULED_EVENT_USER_REMOVE"
  },
  {
    "tree": [],
    "name": "Sharding Formula",
    "language": "python",
    "content": "shard_id = (guild_id >> 22) % num_shards"
  },
  {
    "tree": [],
    "name": "Max Concurrency",
    "language": "",
    "content": "shard_id: 0, rate limit key (0 % 16): 0\nshard_id: 1, rate limit key (1 % 16): 1\nshard_id: 2, rate limit key (2 % 16): 2\nshard_id: 3, rate limit key (3 % 16): 3\nshard_id: 4, rate limit key (4 % 16): 4\nshard_id: 5, rate limit key (5 % 16): 5\nshard_id: 6, rate limit key (6 % 16): 6\nshard_id: 7, rate limit key (7 % 16): 7\nshard_id: 8, rate limit key (8 % 16): 8\nshard_id: 9, rate limit key (9 % 16): 9\nshard_id: 10, rate limit key (10 % 16): 10\nshard_id: 11, rate limit key (11 % 16): 11\nshard_id: 12, rate limit key (12 % 16): 12\nshard_id: 13, rate limit key (13 % 16): 13\nshard_id: 14, rate limit key (14 % 16): 14\nshard_id: 15, rate limit key (15 % 16): 15\nshard_id: 16, rate limit key (16 % 16): 0\nshard_id: 17, rate limit key (17 % 16): 1\nshard_id: 18, rate limit key (18 % 16): 2\nshard_id: 19, rate limit key (19 % 16): 3\nshard_id: 20, rate limit key (20 % 16): 4\nshard_id: 21, rate limit key (21 % 16): 5\nshard_id: 22, rate limit key (22 % 16): 6\nshard_id: 23, rate limit key (23 % 16): 7\nshard_id: 24, rate limit key (24 % 16): 8\nshard_id: 25, rate limit key (25 % 16): 9\nshard_id: 26, rate limit key (26 % 16): 10\nshard_id: 27, rate limit key (27 % 16): 11\nshard_id: 28, rate limit key (28 % 16): 12\nshard_id: 29, rate limit key (29 % 16): 13\nshard_id: 30, rate limit key (30 % 16): 14\nshard_id: 31, rate limit key (31 % 16): 15"
  },
  {
    "tree": [
      "resume-example-resume",
      "heartbeat",
      "heartbeat",
      "heartbeat",
      "heartbeat",
      "heartbeat-example-heartbeat",
      "heartbeat-example-heartbeat"
    ],
    "name": "Example Heartbeat",
    "language": "",
    "content": "{\n    \"op\": 1,\n    \"d\": 251\n}"
  },
  {
    "tree": [
      "resumed",
      "reconnect",
      "reconnect",
      "reconnect",
      "reconnect",
      "reconnect-example-gateway-reconnect",
      "reconnect-example-gateway-reconnect"
    ],
    "name": "Example Gateway Reconnect",
    "language": "json",
    "content": "{\n  \"op\": 7,\n  \"d\": null\n}"
  },
  {
    "tree": [],
    "name": "Example Gateway Invalid Session",
    "language": "json",
    "content": "{\n  \"op\": 9,\n  \"d\": false\n}"
  },
  {
    "tree": [
      "activity-object-example-activity-with-rich-presence",
      "activity-object-example-activity-with-rich-presence"
    ],
    "name": "Example Activity with Rich Presence",
    "language": "json",
    "content": "{\n  \"name\": \"Rocket League\",\n  \"type\": 0,\n  \"application_id\": \"379286085710381999\",\n  \"state\": \"In a Match\",\n  \"details\": \"Ranked Duos: 2-1\",\n  \"timestamps\": {\n    \"start\": 15112000660000\n  },\n  \"party\": {\n    \"id\": \"9dd6594e-81b3-49f6-a6b5-a679e6a060d3\",\n    \"size\": [2, 2]\n  },\n  \"assets\": {\n    \"large_image\": \"351371005538729000\",\n    \"large_text\": \"DFH Stadium\",\n    \"small_image\": \"351371005538729111\",\n    \"small_text\": \"Silver III\"\n  },\n  \"secrets\": {\n    \"join\": \"025ed05c71f639de8bfaa0d679d7c94b2fdce12f\",\n    \"spectate\": \"e7eb30d2ee025ed05c71ea495f770b76454ee4e0\",\n    \"match\": \"4b2fdce12f639de8bfa7e3591b71a0d679d7c93f\"\n  }\n}"
  },
  {
    "tree": [
      "authorization-code-grant-redirect-url-example",
      "authorization-code-grant-redirect-url-example"
    ],
    "name": "Redirect URL Example",
    "language": "",
    "content": "https://nicememe.website/?code=NhhvTDYsFcdgNLnnLijcl7Ku7bEEeee&state=15773059ghq9183habn"
  },
  {
    "tree": [],
    "name": "Access Token Exchange Example",
    "language": "python",
    "content": "import requests\n\nAPI_ENDPOINT = 'https://discord.com/api/v8'\nCLIENT_ID = '332269999912132097'\nCLIENT_SECRET = '937it3ow87i4ery69876wqire'\nREDIRECT_URI = 'https://nicememe.website'\n\ndef exchange_code(code):\n  data = {\n    'client_id': CLIENT_ID,\n    'client_secret': CLIENT_SECRET,\n    'grant_type': 'authorization_code',\n    'code': code,\n    'redirect_uri': REDIRECT_URI\n  }\n  headers = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n  r = requests.post('%s/oauth2/token' % API_ENDPOINT, data=data, headers=headers)\n  r.raise_for_status()\n  return r.json()"
  },
  {
    "tree": [],
    "name": "Access Token Response",
    "language": "json",
    "content": "{\n  \"access_token\": \"6qrZcUqja7812RVdnEKjpzOL4CvHBFG\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": 604800,\n  \"refresh_token\": \"D43f5y0ahjqew82jZ4NViEr2YafMKhue\",\n  \"scope\": \"identify\"\n}"
  },
  {
    "tree": [],
    "name": "Refresh Token Exchange Example",
    "language": "python",
    "content": "import requests\n\nAPI_ENDPOINT = 'https://discord.com/api/v8'\nCLIENT_ID = '332269999912132097'\nCLIENT_SECRET = '937it3ow87i4ery69876wqire'\nREDIRECT_URI = 'https://nicememe.website'\n\ndef refresh_token(refresh_token):\n  data = {\n    'client_id': CLIENT_ID,\n    'client_secret': CLIENT_SECRET,\n    'grant_type': 'refresh_token',\n    'refresh_token': refresh_token\n  }\n  headers = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n  r = requests.post('%s/oauth2/token' % API_ENDPOINT, data=data, headers=headers)\n  r.raise_for_status()\n  return r.json()"
  },
  {
    "tree": [],
    "name": "Authorization URL Example",
    "language": "",
    "content": "https://discord.com/api/oauth2/authorize?response_type=token&client_id=290926444748734499&state=15773059ghq9183habn&scope=identify"
  },
  {
    "tree": [],
    "name": "Redirect URL Example",
    "language": "",
    "content": "https://findingfakeurlsisprettyhard.tv/#access_token=RTfP0OK99U3kbRtHOoKLmJbOn45PjL&token_type=Bearer&expires_in=604800&scope=identify&state=15773059ghq9183habn"
  },
  {
    "tree": [],
    "name": "Client Credentials Token Request Example",
    "language": "python",
    "content": "import base64\nimport requests\n\nAPI_ENDPOINT = 'https://discord.com/api/v8'\nCLIENT_ID = '332269999912132097'\nCLIENT_SECRET = '937it3ow87i4ery69876wqire'\n\ndef get_token():\n  data = {\n    'grant_type': 'client_credentials',\n    'scope': 'identify connections'\n  }\n  headers = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n  r = requests.post('%s/oauth2/token' % API_ENDPOINT, data=data, headers=headers, auth=(CLIENT_ID, CLIENT_SECRET))\n  r.raise_for_status()\n  return r.json()"
  },
  {
    "tree": [],
    "name": "Client Credentials Access Token Response",
    "language": "json",
    "content": "{\n  \"access_token\": \"6qrZcUqja7812RVdnEKjpzOL4CvHBFG\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": 604800,\n  \"scope\": \"identify connections\"\n}"
  },
  {
    "tree": [
      "advanced-bot-authorization",
      "advanced-bot-authorization",
      "advanced-bot-authorization",
      "advanced-bot-authorization",
      "advanced-bot-authorization-extended-bot-authorization-access-token-example",
      "advanced-bot-authorization-extended-bot-authorization-access-token-example"
    ],
    "name": "Extended Bot Authorization Access Token Example",
    "language": "json",
    "content": "{\n  \"token_type\": \"Bearer\",\n  \"guild\": {\n    \"mfa_level\": 0,\n    \"emojis\": [],\n    \"application_id\": null,\n    \"name\": \"SomeTest\",\n    \"roles\": [\n      {\n        \"hoist\": false,\n        \"name\": \"@everyone\",\n        \"mentionable\": false,\n        \"color\": 0,\n        \"position\": 0,\n        \"id\": \"290926798626357250\",\n        \"managed\": false,\n        \"permissions\": 49794241,\n        \"permissions_new\": \"49794241\"\n      }\n    ],\n    \"afk_timeout\": 300,\n    \"system_channel_id\": null,\n    \"widget_channel_id\": null,\n    \"region\": \"us-east\",\n    \"default_message_notifications\": 1,\n    \"explicit_content_filter\": 0,\n    \"splash\": null,\n    \"features\": [],\n    \"afk_channel_id\": null,\n    \"widget_enabled\": false,\n    \"verification_level\": 0,\n    \"owner_id\": \"53908232999183680\",\n    \"id\": \"2909267986347357250\",\n    \"icon\": null,\n    \"description\": null,\n    \"public_updates_channel_id\": null,\n    \"rules_channel_id\": null,\n    \"max_members\": 100000,\n    \"vanity_url_code\": null,\n    \"premium_subscription_count\": 0,\n    \"premium_tier\": 0,\n    \"preferred_locale\": \"en-US\",\n    \"system_channel_flags\": 0,\n    \"banner\": null,\n    \"max_presences\": null,\n    \"discovery_splash\": null,\n    \"max_video_channel_users\": 25\n  },\n  \"access_token\": \"zMndOe7jFLXGawdlxMOdNvXjjOce5X\",\n  \"scope\": \"bot\",\n  \"expires_in\": 604800,\n  \"refresh_token\": \"mgp8qnvBwJcmadwgCYKyYD5CAzGAX4\"\n}"
  },
  {
    "tree": [],
    "name": "URL Example",
    "language": "",
    "content": "https://discord.com/api/oauth2/authorize?response_type=code&client_id=157730590492196864&scope=webhook.incoming&state=15773059ghq9183habn&redirect_uri=https%3A%2F%2Fnicememe.website"
  },
  {
    "tree": [],
    "name": "Webhook Token Response Example",
    "language": "json",
    "content": "{\n  \"token_type\": \"Bearer\",\n  \"access_token\": \"GNaVzEtATqdh173tNHEXY9ZYAuhiYxvy\",\n  \"scope\": \"webhook.incoming\",\n  \"expires_in\": 604800,\n  \"refresh_token\": \"PvPL7ELyMDc1836457XCDh1Y8jPbRm\",\n  \"webhook\": {\n    \"application_id\": \"310954232226357250\",\n    \"name\": \"testwebhook\",\n    \"url\": \"https://discord.com/api/webhooks/347114750880120863/kKDdjXa1g9tKNs0-_yOwLyALC9gydEWP6gr9sHabuK1vuofjhQDDnlOclJeRIvYK-pj_\",\n    \"channel_id\": \"345626669224982402\",\n    \"token\": \"kKDdjXa1g9tKNs0-_yOwLyALC9gydEWP6gr9sHabuK1vuofjhQDDnlOclJeRIvYK-pj_\",\n    \"type\": 1,\n    \"avatar\": null,\n    \"guild_id\": \"290926792226357250\",\n    \"id\": \"347114750880120863\"\n  }\n}"
  },
  {
    "tree": [
      "permissions",
      "permissions",
      "permissions",
      "permissions",
      "permissions-bitwise-permission-flags",
      "permissions-bitwise-permission-flags"
    ],
    "name": "Bitwise Permission Flags",
    "language": "python",
    "content": "def compute_base_permissions(member, guild):\n    if guild.is_owner(member):\n        return ALL\n\n    role_everyone = guild.get_role(guild.id)  # get @everyone role\n    permissions = role_everyone.permissions\n\n    for role in member.roles:\n        permissions |= role.permissions\n\n    if permissions & ADMINISTRATOR == ADMINISTRATOR:\n        return ALL\n\n    return permissions\n\ndef compute_overwrites(base_permissions, member, channel):\n    # ADMINISTRATOR overrides any potential permission overwrites, so there is nothing to do here.\n    if base_permissions & ADMINISTRATOR == ADMINISTRATOR:\n        return ALL\n\n    permissions = base_permissions\n    overwrite_everyone = overwrites.get(channel.guild_id)  # Find (@everyone) role overwrite and apply it.\n    if overwrite_everyone:\n        permissions &= ~overwrite_everyone.deny\n        permissions |= overwrite_everyone.allow\n\n    # Apply role specific overwrites.\n    overwrites = channel.permission_overwrites\n    allow = NONE\n    deny = NONE\n    for role_id in member.roles:\n        overwrite_role = overwrites.get(role_id)\n        if overwrite_role:\n            allow |= overwrite_role.allow\n            deny |= overwrite_role.deny\n\n    permissions &= ~deny\n    permissions |= allow\n\n    # Apply member specific overwrite if it exist.\n    overwrite_member = overwrites.get(member.user_id)\n    if overwrite_member:\n        permissions &= ~overwrite_member.deny\n        permissions |= overwrite_member.allow\n\n    return permissions\n\ndef compute_permissions(member, channel):\n    base_permissions = compute_base_permissions(member, channel.guild)\n    return compute_overwrites(base_permissions, member, channel)"
  },
  {
    "tree": [
      "role-object-example-role",
      "permissions-for-timed-out-members",
      "permissions-for-timed-out-members",
      "permissions-for-timed-out-members",
      "permissions-for-timed-out-members",
      "rate-limits",
      "rate-limits",
      "rate-limits",
      "rate-limits",
      "header-format",
      "header-format",
      "header-format",
      "header-format",
      "header-format-rate-limit-header-examples",
      "header-format-rate-limit-header-examples"
    ],
    "name": "Rate Limit Header Examples",
    "language": "",
    "content": "X-RateLimit-Limit: 5\nX-RateLimit-Remaining: 0\nX-RateLimit-Reset: 1470173023\nX-RateLimit-Reset-After: 1\nX-RateLimit-Bucket: abcd1234"
  },
  {
    "tree": [
      "exceeding-a-rate-limit-example-exceeded-user-rate-limit-response",
      "exceeding-a-rate-limit-example-exceeded-resource-rate-limit-response",
      "exceeding-a-rate-limit-example-exceeded-resource-rate-limit-response"
    ],
    "name": "Example Exceeded Resource Rate Limit Response",
    "language": "",
    "content": "< HTTP/1.1 429 TOO MANY REQUESTS\n< Content-Type: application/json\n< Retry-After: 65\n< X-RateLimit-Limit: 10\n< X-RateLimit-Remaining: 9\n< X-RateLimit-Reset: 1470173023.123\n< X-RateLimit-Reset-After: 64.57\n< X-RateLimit-Bucket: abcd1234\n< X-RateLimit-Scope: shared\n{\n  \"message\": \"The resource is being rate limited.\",\n  \"retry_after\": 64.57,\n  \"global\": false\n}"
  },
  {
    "tree": [
      "authenticating-rpc-authenticate-example",
      "authenticating-rpc-authenticate-example"
    ],
    "name": "RPC Authenticate Example",
    "language": "json",
    "content": "{\n  \"nonce\": \"5bb10a43-1fdc-4391-9512-0c8f4aa203d4\",\n  \"args\": {\n    \"access_token\": \"CZhtkLDpNYXgPH9Ml6shqh2OwykChw\"\n  },\n  \"cmd\": \"AUTHENTICATE\"\n}"
  },
  {
    "tree": [
      "authorize-example-authorize-response-payload",
      "authorize-example-authorize-response-payload"
    ],
    "name": "Example Authorize Response Payload",
    "language": "json",
    "content": "{\n  \"cmd\": \"AUTHORIZE\",\n  \"data\": {\n    \"code\": \"O62Q9JzFe8BEOUzIfsAndOjNd2V4sJ\"\n  },\n  \"nonce\": \"f48f6176-4afb-4c03-b1b8-d960861f5216\"\n}"
  },
  {
    "tree": [
      "authenticate-example-authenticate-command-payload",
      "authenticate-example-authenticate-response-payload",
      "authenticate-example-authenticate-response-payload"
    ],
    "name": "Example Authenticate Response Payload",
    "language": "json",
    "content": "{\n  \"cmd\": \"AUTHENTICATE\",\n  \"data\": {\n    \"application\": {\n      \"description\": \"test app description\",\n      \"icon\": \"d6b51c21c48482d5b64aa4832d92fe14\",\n      \"id\": \"192741864418312192\",\n      \"rpc_origins\": [\"http://localhost:3344\"],\n      \"name\": \"test app\"\n    },\n    \"expires\": \"2017-06-29T19:09:52.361000+00:00\",\n    \"user\": {\n      \"username\": \"test user\",\n      \"discriminator\": \"7479\",\n      \"id\": \"190320984123768832\",\n      \"avatar\": \"b004ec1740a63ca06ae2e14c5cee11f3\"\n    },\n    \"scopes\": [\"rpc\", \"identify\"]\n  },\n  \"nonce\": \"5bb10a43-1fdc-4391-9512-0c8f4aa203d4\"\n}"
  },
  {
    "tree": [
      "get_guilds-example-get-guilds-command-payload",
      "get_guilds-example-get-guilds-response-payload",
      "get_guilds-example-get-guilds-response-payload"
    ],
    "name": "Example Get Guilds Response Payload",
    "language": "json",
    "content": "{\n  \"cmd\": \"GET_GUILDS\",\n  \"data\": {\n    \"guilds\": [\n      {\n        \"id\": \"199737254929760256\",\n        \"name\": \"test\"\n      }\n    ]\n  },\n  \"nonce\": \"e16fcbed-8bfa-4fd4-ba09-73b72e809833\"\n}"
  },
  {
    "tree": [
      "get_guild-example-get-guild-command-payload",
      "get_guild-example-get-guild-response-payload",
      "get_guild-example-get-guild-response-payload"
    ],
    "name": "Example Get Guild Response Payload",
    "language": "json",
    "content": "{\n  \"cmd\": \"GET_GUILD\",\n  \"data\": {\n    \"id\": \"199737254929760256\",\n    \"name\": \"test\",\n    \"icon_url\": null,\n    \"members\": []\n  },\n  \"nonce\": \"9524922c-3d32-413a-bdaa-0804f4332588\"\n}"
  },
  {
    "tree": [
      "get_channel-example-get-channel-command-payload",
      "get_channel-example-get-channel-response-payload",
      "get_channel-example-get-channel-response-payload"
    ],
    "name": "Example Get Channel Response Payload",
    "language": "json",
    "content": "{\n  \"cmd\": \"GET_CHANNEL\",\n  \"data\": {\n    \"id\": \"199737254929760257\",\n    \"name\": \"General\",\n    \"type\": 2,\n    \"bitrate\": 64000,\n    \"user_limit\": 0,\n    \"guild_id\": \"199737254929760256\",\n    \"position\": 0,\n    \"voice_states\": [\n      {\n        \"voice_state\": {\n          \"mute\": false,\n          \"deaf\": false,\n          \"self_mute\": false,\n          \"self_deaf\": false,\n          \"suppress\": false\n        },\n        \"user\": {\n          \"id\": \"190320984123768832\",\n          \"username\": \"test 2\",\n          \"discriminator\": \"7479\",\n          \"avatar\": \"b004ec1740a63ca06ae2e14c5cee11f3\",\n          \"bot\": false\n        },\n        \"nick\": \"test user 2\",\n        \"volume\": 110,\n        \"mute\": false,\n        \"pan\": {\n          \"left\": 1.0,\n          \"right\": 1.0\n        }\n      }\n    ]\n  },\n  \"nonce\": \"f682697e-d257-4a17-ac0a-7e4b84e66663\"\n}"
  },
  {
    "tree": [
      "get_channels-example-get-channels-command-payload",
      "get_channels-example-get-channels-response-payload",
      "get_channels-example-get-channels-response-payload"
    ],
    "name": "Example Get Channels Response Payload",
    "language": "json",
    "content": "{\n  \"cmd\": \"GET_CHANNELS\",\n  \"data\": {\n    \"channels\": [\n      {\n        \"id\": \"199737254929760256\",\n        \"name\": \"general\",\n        \"type\": 0\n      },\n      {\n        \"id\": \"199737254929760257\",\n        \"name\": \"General\",\n        \"type\": 2\n      }\n    ]\n  },\n  \"nonce\": \"0dee7bd4-8f62-4ecc-9e0f-1b1839a4fa93\"\n}"
  },
  {
    "tree": [
      "set_user_voice_settings-example-set-user-voice-settings-command-payload",
      "set_user_voice_settings-example-set-user-voice-settings-response-payload",
      "set_user_voice_settings-example-set-user-voice-settings-response-payload"
    ],
    "name": "Example Set User Voice Settings Response Payload",
    "language": "json",
    "content": "{\n  \"cmd\": \"SET_USER_VOICE_SETTINGS\",\n  \"data\": {\n    \"user_id\": \"192731515703001088\",\n    \"pan\": {\n      \"left\": 1.0,\n      \"right\": 1.0\n    },\n    \"volume\": 120,\n    \"mute\": false\n  },\n  \"nonce\": \"eafc8152-2248-4478-9827-8457b7900cb4\"\n}"
  },
  {
    "tree": [
      "select_voice_channel-example-select-voice-channel-command-payload",
      "select_voice_channel-example-select-voice-channel-response-payload",
      "select_voice_channel-example-select-voice-channel-response-payload"
    ],
    "name": "Example Select Voice Channel Response Payload",
    "language": "json",
    "content": "{\n  \"cmd\": \"SELECT_VOICE_CHANNEL\",\n  \"data\": {\n    \"id\": \"199737254929760257\",\n    \"name\": \"General\",\n    \"type\": 2,\n    \"bitrate\": 64000,\n    \"user_limit\": 0,\n    \"guild_id\": \"199737254929760256\",\n    \"position\": 0,\n    \"voice_states\": [\n      {\n        \"voice_state\": {\n          \"mute\": false,\n          \"deaf\": false,\n          \"self_mute\": false,\n          \"self_deaf\": false,\n          \"suppress\": false\n        },\n        \"user\": {\n          \"id\": \"190320984123768832\",\n          \"username\": \"test 2\",\n          \"discriminator\": \"7479\",\n          \"avatar\": \"b004ec1740a63ca06ae2e14c5cee11f3\",\n          \"bot\": false\n        },\n        \"nick\": \"test user 2\",\n        \"mute\": false,\n        \"volume\": 110,\n        \"pan\": {\n          \"left\": 1.0,\n          \"right\": 1.0\n        }\n      }\n    ]\n  },\n  \"nonce\": \"5d9df76d-6408-46a1-9368-33dca74fa423\"\n}"
  },
  {
    "tree": [
      "set_voice_settings-example-set-voice-settings-command-payload",
      "set_voice_settings-example-set-voice-settings-response-payload",
      "set_voice_settings-example-set-voice-settings-response-payload"
    ],
    "name": "Example Set Voice Settings Response Payload",
    "language": "json",
    "content": "{\n  \"cmd\": \"SET_VOICE_SETTINGS\",\n  \"data\": {\n    \"input\": {\n      \"available_devices\": [\n        {\n          \"id\": \"default\",\n          \"name\": \"Default\"\n        },\n        {\n          \"id\": \"Built-in Microphone\",\n          \"name\": \"Built-in Microphone\"\n        }\n      ],\n      \"device_id\": \"default\",\n      \"volume\": 90.5\n    },\n    \"output\": {\n      \"available_devices\": [\n        {\n          \"id\": \"default\",\n          \"name\": \"Default\"\n        },\n        {\n          \"id\": \"Built-in Output\",\n          \"name\": \"Built-in Output\"\n        }\n      ],\n      \"device_id\": \"default\",\n      \"volume\": 93.00000071525574\n    },\n    \"mode\": {\n      \"type\": \"VOICE_ACTIVITY\",\n      \"auto_threshold\": true,\n      \"threshold\": -46.92622950819673,\n      \"shortcut\": [{ \"type\": 0, \"code\": 12, \"name\": \"i\" }],\n      \"delay\": 98.36065573770492\n    },\n    \"automatic_gain_control\": false,\n    \"echo_cancellation\": false,\n    \"noise_suppression\": false,\n    \"qos\": false,\n    \"silence_warning\": false,\n    \"deaf\": false,\n    \"mute\": false\n  },\n  \"nonce\": \"3d64ed55-ef6e-4bd5-99c9-677533babc22\"\n}"
  },
  {
    "tree": [
      "subscribe-example-subscribe-command-payload",
      "subscribe-example-subscribe-response-payload",
      "subscribe-example-subscribe-response-payload"
    ],
    "name": "Example Subscribe Response Payload",
    "language": "json",
    "content": "{\n  \"cmd\": \"SUBSCRIBE\",\n  \"data\": {\n    \"evt\": \"GUILD_STATUS\"\n  },\n  \"nonce\": \"be9a6de3-31d0-4767-a8e9-4818c5690015\"\n}"
  },
  {
    "tree": [
      "unsubscribe-example-unsubscribe-command-payload",
      "unsubscribe-example-unsubscribe-response-payload",
      "unsubscribe-example-unsubscribe-response-payload"
    ],
    "name": "Example Unsubscribe Response Payload",
    "language": "json",
    "content": "{\n  \"cmd\": \"UNSUBSCRIBE\",\n  \"data\": {\n    \"evt\": \"GUILD_STATUS\"\n  },\n  \"nonce\": \"647d814a-4cf8-4fbb-948f-898aad24f55b\"\n}"
  },
  {
    "tree": [
      "set_certified_devices-example-set-certified-devices-response-payload",
      "set_certified_devices-example-set-certified-devices-response-payload"
    ],
    "name": "Example Set Certified Devices Response Payload",
    "language": "json",
    "content": "{\n  \"nonce\": \"9b4e9711-97f3-4f35-b047-32c82a51978e\",\n  \"cmd\": \"SET_CERTIFIED_DEVICES\",\n  \"data\": null,\n  \"evt\": null\n}"
  },
  {
    "tree": [
      "voice_channel_select-example-voice-channel-select-dispatch-payload",
      "voice_settings_update",
      "voice_settings_update",
      "voice_settings_update",
      "voice_settings_update",
      "voice_settings_update-voice-settings-argument-structure",
      "voice_settings_update-voice-settings-argument-structure",
      "voice_settings_update-voice-settings-argument-structure",
      "voice_settings_update-voice-settings-argument-structure",
      "voice_settings_update-example-voice-settings-dispatch-payload",
      "voice_settings_update-example-voice-settings-dispatch-payload"
    ],
    "name": "Example Voice Settings Dispatch Payload",
    "language": "json",
    "content": "{\n  \"cmd\": \"DISPATCH\",\n  \"data\": {\n    \"input\": {\n      \"available_devices\": [\n        {\n          \"id\": \"default\",\n          \"name\": \"Default\"\n        },\n        {\n          \"id\": \"Built-in Microphone\",\n          \"name\": \"Built-in Microphone\"\n        }\n      ],\n      \"device_id\": \"default\",\n      \"volume\": 49.803921580314636\n    },\n    \"output\": {\n      \"available_devices\": [\n        {\n          \"id\": \"default\",\n          \"name\": \"Default\"\n        },\n        {\n          \"id\": \"Built-in Output\",\n          \"name\": \"Built-in Output\"\n        }\n      ],\n      \"device_id\": \"default\",\n      \"volume\": 93.00000071525574\n    },\n    \"mode\": {\n      \"type\": \"VOICE_ACTIVITY\",\n      \"auto_threshold\": true,\n      \"threshold\": -46.92622950819673,\n      \"shortcut\": [{ \"type\": 0, \"code\": 12, \"name\": \"i\" }],\n      \"delay\": 98.36065573770492\n    },\n    \"automatic_gain_control\": false,\n    \"echo_cancellation\": false,\n    \"noise_suppression\": false,\n    \"qos\": false,\n    \"silence_warning\": false\n  },\n  \"evt\": \"VOICE_SETTINGS_UPDATE\"\n}"
  },
  {
    "tree": [
      "retrieving-voice-server-information-example-voice-server-update-payload",
      "retrieving-voice-server-information-example-voice-server-update-payload"
    ],
    "name": "Example Voice Server Update Payload",
    "language": "json",
    "content": "{\n  \"t\": \"VOICE_SERVER_UPDATE\",\n  \"s\": 2,\n  \"op\": 0,\n  \"d\": {\n    \"token\": \"my_token\",\n    \"guild_id\": \"41771983423143937\",\n    \"endpoint\": \"smart.loyal.discord.gg\"\n  }\n}"
  },
  {
    "tree": [],
    "name": "Example Voice Identify Payload",
    "language": "json",
    "content": "{\n  \"op\": 0,\n  \"d\": {\n    \"server_id\": \"41771983423143937\",\n    \"user_id\": \"104694319306248192\",\n    \"session_id\": \"my_session_id\",\n    \"token\": \"my_token\"\n  }\n}"
  },
  {
    "tree": [],
    "name": "Example Voice Ready Payload",
    "language": "json",
    "content": "{\n    \"op\": 2,\n    \"d\": {\n        \"ssrc\": 1,\n        \"ip\": \"127.0.0.1\",\n        \"port\": 1234,\n        \"modes\": [\"xsalsa20_poly1305\", \"xsalsa20_poly1305_suffix\", \"xsalsa20_poly1305_lite\"],\n        \"heartbeat_interval\": 1\n    }\n}"
  },
  {
    "tree": [],
    "name": "Example Hello Payload below V3",
    "language": "json",
    "content": "{\n  \"heartbeat_interval\": 41250\n}"
  },
  {
    "tree": [],
    "name": "Example Hello Payload since V3",
    "language": "json",
    "content": "{\n  \"op\": 8,\n  \"d\": {\n    \"heartbeat_interval\": 41250\n  }\n}"
  },
  {
    "tree": [],
    "name": "Example Heartbeat Payload",
    "language": "json",
    "content": "{\n  \"op\": 3,\n  \"d\": 1501184119561\n}"
  },
  {
    "tree": [],
    "name": "Example Heartbeat ACK Payload",
    "language": "json",
    "content": "{\n  \"op\": 6,\n  \"d\": 1501184119561\n}"
  },
  {
    "tree": [],
    "name": "Example Select Protocol Payload",
    "language": "json",
    "content": "{\n    \"op\": 1,\n    \"d\": {\n        \"protocol\": \"udp\",\n        \"data\": {\n            \"address\": \"127.0.0.1\",\n            \"port\": 1337,\n            \"mode\": \"xsalsa20_poly1305_lite\"\n        }\n    }\n}"
  },
  {
    "tree": [
      "speaking-example-speaking-payload",
      "voice-data-interpolation",
      "voice-data-interpolation",
      "voice-data-interpolation",
      "voice-data-interpolation",
      "resuming-voice-connection",
      "resuming-voice-connection",
      "resuming-voice-connection",
      "resuming-voice-connection",
      "resuming-voice-connection-example-resume-connection-payload",
      "resuming-voice-connection-example-resume-connection-payload"
    ],
    "name": "Example Resume Connection Payload",
    "language": "json",
    "content": "{\n  \"op\": 7,\n  \"d\": {\n    \"server_id\": \"41771983423143937\",\n    \"session_id\": \"my_session_id\",\n    \"token\": \"my_token\"\n  }\n}"
  }
]