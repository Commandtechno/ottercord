[
  {
    "tree": [],
    "name": "Get Channel",
    "description": "Update a channel's settings. Returns a channel on success, and a 400 BAD REQUEST on invalid parameters. All JSON parameters are optional.",
    "method": "GET",
    "path": "/channels/{channel.id}",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "channel-object"
    }
  },
  {
    "tree": [],
    "name": "Delete/Close Channel",
    "description": "Returns the messages for a channel. If operating on a guild channel, this endpoint requires the VIEW_CHANNEL permission to be present on the current user. If the current user is missing the 'READ_MESSAGE_HISTORY' permission in the channel then this will return no messages (since they cannot read the message history). Returns an array of message objects on success.",
    "method": "DELETE",
    "path": "/channels/{channel.id}",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      }
    ],
    "response": {
      "array": true,
      "partial": false,
      "type": "reference",
      "link": "message-object"
    }
  },
  {
    "tree": [],
    "name": "Get Channel Messages",
    "description": "Returns a specific message in the channel. If operating on a guild channel, this endpoint requires the 'READ_MESSAGE_HISTORY' permission to be present on the current user. Returns a message object on success.",
    "method": "GET",
    "path": "/channels/{channel.id}/messages",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      }
    ],
    "query": {
      "array": false,
      "partial": false,
      "type": "structure",
      "props": [
        {
          "name": "around",
          "description": "get messages around this message ID",
          "optional": true,
          "nullable": false,
          "deprecated": false,
          "type": {
            "array": false,
            "partial": false,
            "type": "value",
            "value": "snowflake"
          }
        },
        {
          "name": "before",
          "description": "get messages before this message ID",
          "optional": true,
          "nullable": false,
          "deprecated": false,
          "type": {
            "array": false,
            "partial": false,
            "type": "value",
            "value": "snowflake"
          }
        },
        {
          "name": "after",
          "description": "get messages after this message ID",
          "optional": true,
          "nullable": false,
          "deprecated": false,
          "type": {
            "array": false,
            "partial": false,
            "type": "value",
            "value": "snowflake"
          }
        },
        {
          "name": "limit",
          "description": "max number of messages to return (1-100)",
          "optional": true,
          "nullable": false,
          "deprecated": false,
          "type": {
            "array": false,
            "partial": false,
            "type": "value",
            "value": "integer"
          }
        }
      ]
    }
  },
  {
    "tree": [],
    "name": "Get Channel Message",
    "method": "GET",
    "path": "/channels/{channel.id}/messages/{message.id}",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      },
      {
        "name": "message.id",
        "link": "DOCS_RESOURCES_CHANNEL/message-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Crosspost Message",
    "description": "Returns a message object.",
    "method": "POST",
    "path": "/channels/{channel.id}/messages/{message.id}/crosspost",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      },
      {
        "name": "message.id",
        "link": "DOCS_RESOURCES_CHANNEL/message-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "message-object"
    }
  },
  {
    "tree": [],
    "name": "Create Reaction",
    "description": "Delete a reaction the current user has made for the message. Returns a 204 empty response on success. The emoji must be URL Encoded or the request will fail with 10014: Unknown Emoji. To use custom emoji, you must encode it in the format name:id with the emoji name and emoji id.",
    "method": "PUT",
    "path": "/channels/{channel.id}/messages/{message.id}/reactions/{emoji}/@me",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      },
      {
        "name": "message.id",
        "link": "DOCS_RESOURCES_CHANNEL/message-object"
      },
      {
        "name": "emoji",
        "link": "DOCS_RESOURCES_EMOJI/emoji-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Delete Own Reaction",
    "description": "Deletes another user's reaction. This endpoint requires the 'MANAGE_MESSAGES' permission to be present on the current user. Returns a 204 empty response on success. The emoji must be URL Encoded or the request will fail with 10014: Unknown Emoji. To use custom emoji, you must encode it in the format name:id with the emoji name and emoji id.",
    "method": "DELETE",
    "path": "/channels/{channel.id}/messages/{message.id}/reactions/{emoji}/@me",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      },
      {
        "name": "message.id",
        "link": "DOCS_RESOURCES_CHANNEL/message-object"
      },
      {
        "name": "emoji",
        "link": "DOCS_RESOURCES_EMOJI/emoji-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Delete User Reaction",
    "description": "Get a list of users that reacted with this emoji. Returns an array of user objects on success. The emoji must be URL Encoded or the request will fail with 10014: Unknown Emoji. To use custom emoji, you must encode it in the format name:id with the emoji name and emoji id.",
    "method": "DELETE",
    "path": "/channels/{channel.id}/messages/{message.id}/reactions/{emoji}/{user.id}",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      },
      {
        "name": "message.id",
        "link": "DOCS_RESOURCES_CHANNEL/message-object"
      },
      {
        "name": "emoji",
        "link": "DOCS_RESOURCES_EMOJI/emoji-object"
      },
      {
        "name": "user.id",
        "link": "DOCS_RESOURCES_USER/user-object"
      }
    ],
    "response": {
      "array": true,
      "partial": false,
      "type": "reference",
      "link": "user-object"
    }
  },
  {
    "tree": [],
    "name": "Get Reactions",
    "description": "Deletes all reactions on a message. This endpoint requires the 'MANAGE_MESSAGES' permission to be present on the current user. Fires a Message Reaction Remove All Gateway event.",
    "method": "GET",
    "path": "/channels/{channel.id}/messages/{message.id}/reactions/{emoji}",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      },
      {
        "name": "message.id",
        "link": "DOCS_RESOURCES_CHANNEL/message-object"
      },
      {
        "name": "emoji",
        "link": "DOCS_RESOURCES_EMOJI/emoji-object"
      }
    ],
    "query": {
      "array": false,
      "partial": false,
      "type": "structure",
      "props": [
        {
          "name": "after",
          "description": "get users after this user ID",
          "optional": true,
          "nullable": false,
          "deprecated": false,
          "type": {
            "array": false,
            "partial": false,
            "type": "value",
            "value": "snowflake"
          }
        },
        {
          "name": "limit",
          "description": "max number of users to return (1-100)",
          "optional": true,
          "nullable": false,
          "deprecated": false,
          "type": {
            "array": false,
            "partial": false,
            "type": "value",
            "value": "integer"
          }
        }
      ]
    }
  },
  {
    "tree": [],
    "name": "Delete All Reactions",
    "description": "Deletes all the reactions for a given emoji on a message. This endpoint requires the MANAGE_MESSAGES permission to be present on the current user. Fires a Message Reaction Remove Emoji Gateway event. The emoji must be URL Encoded or the request will fail with 10014: Unknown Emoji. To use custom emoji, you must encode it in the format name:id with the emoji name and emoji id.",
    "method": "DELETE",
    "path": "/channels/{channel.id}/messages/{message.id}/reactions",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      },
      {
        "name": "message.id",
        "link": "DOCS_RESOURCES_CHANNEL/message-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Delete All Reactions for Emoji",
    "description": "Edit a previously sent message. The fields content, embeds, and flags can be edited by the original message author. Other users can only edit flags and only if they have the MANAGE_MESSAGES permission in the corresponding channel. When specifying flags, ensure to include all previously set flags/bits in addition to ones that you are modifying. Only flags documented in the table below may be modified by users (unsupported flag changes are currently ignored without error).",
    "method": "DELETE",
    "path": "/channels/{channel.id}/messages/{message.id}/reactions/{emoji}",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      },
      {
        "name": "message.id",
        "link": "DOCS_RESOURCES_CHANNEL/message-object"
      },
      {
        "name": "emoji",
        "link": "DOCS_RESOURCES_EMOJI/emoji-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Edit Message",
    "description": "When the content field is edited, the mentions array in the message object will be reconstructed from scratch based on the new content. The allowed_mentions field of the edit request controls how this happens. If there is no explicit allowed_mentions in the edit request, the content will be parsed with default allowances, that is, without regard to whether or not an allowed_mentions was present in the request that originally created the message.",
    "method": "PATCH",
    "path": "/channels/{channel.id}/messages/{message.id}",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      },
      {
        "name": "message.id",
        "link": "DOCS_RESOURCES_CHANNEL/message-object"
      }
    ],
    "request": {
      "json": true,
      "form": true,
      "type": {
        "array": false,
        "partial": true,
        "type": "structure",
        "props": [
          {
            "name": "content",
            "description": "the message contents (up to 2000 characters)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "embeds",
            "description": "embedded rich content (up to 6000 characters)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": true,
              "partial": false,
              "type": "reference",
              "link": "embed-object"
            }
          },
          {
            "name": "embed",
            "description": "embedded rich content, deprecated in favor of embeds",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "embed-object"
            }
          },
          {
            "name": "flags",
            "description": "edit the flags of a message (only SUPPRESS_EMBEDS can currently be set/unset)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "message-object-message-flags",
              "fallback": {
                "array": false,
                "partial": false,
                "type": "value",
                "value": "integer"
              }
            }
          },
          {
            "name": "allowed_mentions",
            "description": "allowed mentions for the message",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "allowed-mentions-object"
            }
          },
          {
            "name": "components",
            "description": "the components to include with the message",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": true,
              "partial": false,
              "type": "reference",
              "link": "component-object"
            }
          },
          {
            "name": "files",
            "description": "the contents of the file being sent/edited",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "file"
            }
          },
          {
            "name": "payload_json",
            "description": "JSON encoded body of non-file params (multipart/form-data only)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "attachments",
            "description": "attached files to keep and possible descriptions for new files",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": true,
              "partial": false,
              "type": "reference",
              "link": "attachment-object"
            }
          }
        ]
      }
    },
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "message-object"
    }
  },
  {
    "tree": [],
    "name": "Delete Message",
    "description": "Delete multiple messages in a single request. This endpoint can only be used on guild channels and requires the MANAGE_MESSAGES permission. Returns a 204 empty response on success. Fires a Message Delete Bulk Gateway event.",
    "method": "DELETE",
    "path": "/channels/{channel.id}/messages/{message.id}",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      },
      {
        "name": "message.id",
        "link": "DOCS_RESOURCES_CHANNEL/message-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Bulk Delete Messages",
    "description": "Any message IDs given that do not exist or are invalid will count towards the minimum and maximum message count (currently 2 and 100 respectively).",
    "method": "POST",
    "path": "/channels/{channel.id}/messages/bulk-delete",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": false,
        "type": "structure",
        "props": [
          {
            "name": "messages",
            "description": " message ids to delete (2-100)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "snowflake"
            }
          }
        ]
      }
    }
  },
  {
    "tree": [],
    "name": "Edit Channel Permissions",
    "description": "Returns a list of invite objects (with invite metadata) for the channel. Only usable for guild channels. Requires the MANAGE_CHANNELS permission.",
    "method": "PUT",
    "path": "/channels/{channel.id}/permissions/{overwrite.id}",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      },
      {
        "name": "overwrite.id",
        "link": "DOCS_RESOURCES_CHANNEL/overwrite-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": false,
        "type": "structure",
        "props": [
          {
            "name": "allow",
            "description": "the bitwise value of all allowed permissions (default \"0\")",
            "optional": true,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "deny",
            "description": "the bitwise value of all disallowed permissions (default \"0\")",
            "optional": true,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "type",
            "description": "0 for a role or 1 for a member",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "integer"
            }
          }
        ]
      }
    },
    "response": {
      "array": true,
      "partial": false,
      "type": "reference",
      "link": "invite-object"
    }
  },
  {
    "tree": [],
    "name": "Get Channel Invites",
    "description": "Create a new invite object for the channel. Only usable for guild channels. Requires the CREATE_INSTANT_INVITE permission. All JSON parameters for this route are optional, however the request body is not. If you are not sending any fields, you still have to send an empty JSON object ({}). Returns an invite object. Fires an Invite Create Gateway event.",
    "method": "GET",
    "path": "/channels/{channel.id}/invites",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "invite-object"
    }
  },
  {
    "tree": [],
    "name": "Create Channel Invite",
    "description": "Delete a channel permission overwrite for a user or role in a channel. Only usable for guild channels. Requires the MANAGE_ROLES permission. Returns a 204 empty response on success. For more information about permissions, see permissions",
    "method": "POST",
    "path": "/channels/{channel.id}/invites",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": false,
        "type": "structure",
        "props": [
          {
            "name": "max_age",
            "description": "duration of invite in seconds before expiry, or 0 for never. between 0 and 604800 (7 days)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "integer"
            }
          },
          {
            "name": "max_uses",
            "description": "max number of uses or 0 for unlimited. between 0 and 100",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "integer"
            }
          },
          {
            "name": "temporary",
            "description": "whether this invite only grants temporary membership",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "boolean"
            }
          },
          {
            "name": "unique",
            "description": "if true, don't try to reuse a similar invite (useful for creating many unique one time use invites)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "boolean"
            }
          },
          {
            "name": "target_type",
            "description": "the type of target for this voice channel invite",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "invite-object-invite-target-types",
              "fallback": {
                "array": false,
                "partial": false,
                "type": "value",
                "value": "integer"
              }
            }
          },
          {
            "name": "target_user_id",
            "description": "the id of the user whose stream to display for this invite, required if target_type is 1, the user must be streaming in the channel",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "snowflake"
            }
          },
          {
            "name": "target_application_id",
            "description": "the id of the embedded application to open for this invite, required if target_type is 2, the application must have the EMBEDDED flag",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "snowflake"
            }
          }
        ]
      }
    }
  },
  {
    "tree": [],
    "name": "Delete Channel Permission",
    "description": "Follow a News Channel to send messages to a target channel. Requires the MANAGE_WEBHOOKS permission in the target channel. Returns a followed channel object.",
    "method": "DELETE",
    "path": "/channels/{channel.id}/permissions/{overwrite.id}",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      },
      {
        "name": "overwrite.id",
        "link": "DOCS_RESOURCES_CHANNEL/overwrite-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "followed-channel-object"
    }
  },
  {
    "tree": [],
    "name": "Follow News Channel",
    "description": "Post a typing indicator for the specified channel. Generally bots should not implement this route. However, if a bot is responding to a command and expects the computation to take a few seconds, this endpoint may be called to let the user know that the bot is processing their message. Returns a 204 empty response on success. Fires a Typing Start Gateway event.",
    "method": "POST",
    "path": "/channels/{channel.id}/followers",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": false,
        "type": "structure",
        "props": [
          {
            "name": "webhook_channel_id",
            "description": "id of target channel",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "snowflake"
            }
          }
        ]
      }
    }
  },
  {
    "tree": [],
    "name": "Trigger Typing Indicator",
    "description": "Returns all pinned messages in the channel as an array of message objects.",
    "method": "POST",
    "path": "/channels/{channel.id}/typing",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      }
    ],
    "response": {
      "array": true,
      "partial": false,
      "type": "reference",
      "link": "message-object"
    }
  },
  {
    "tree": [],
    "name": "Get Pinned Messages",
    "description": "Pin a message in a channel. Requires the MANAGE_MESSAGES permission. Returns a 204 empty response on success.",
    "method": "GET",
    "path": "/channels/{channel.id}/pins",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Pin Message",
    "description": "Unpin a message in a channel. Requires the MANAGE_MESSAGES permission. Returns a 204 empty response on success.",
    "method": "PUT",
    "path": "/channels/{channel.id}/pins/{message.id}",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      },
      {
        "name": "message.id",
        "link": "DOCS_RESOURCES_CHANNEL/message-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Unpin Message",
    "description": "Adds a recipient to a Group DM using their access token.",
    "method": "DELETE",
    "path": "/channels/{channel.id}/pins/{message.id}",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      },
      {
        "name": "message.id",
        "link": "DOCS_RESOURCES_CHANNEL/message-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Group DM Add Recipient",
    "description": "Removes a recipient from a Group DM.",
    "method": "PUT",
    "path": "/channels/{channel.id}/recipients/{user.id}",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      },
      {
        "name": "user.id",
        "link": "DOCS_RESOURCES_USER/user-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": false,
        "type": "structure",
        "props": [
          {
            "name": "access_token",
            "description": "access token of a user that has granted your app the gdm.join scope",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "nick",
            "description": "nickname of the user being added",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          }
        ]
      }
    }
  },
  {
    "tree": [],
    "name": "Group DM Remove Recipient",
    "description": "Creates a new thread from an existing message. Returns a channel on success, and a 400 BAD REQUEST on invalid parameters. Fires a Thread Create Gateway event.",
    "method": "DELETE",
    "path": "/channels/{channel.id}/recipients/{user.id}",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      },
      {
        "name": "user.id",
        "link": "DOCS_RESOURCES_USER/user-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "channel-object"
    }
  },
  {
    "tree": [],
    "name": "Start Thread with Message",
    "description": "When called on a GUILD_TEXT channel, creates a GUILD_PUBLIC_THREAD. When called on a GUILD_NEWS channel, creates a GUILD_NEWS_THREAD. The id of the created thread will be the same as the id of the message, and as such a message can only have a single thread created from it.",
    "method": "POST",
    "path": "/channels/{channel.id}/messages/{message.id}/threads",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      },
      {
        "name": "message.id",
        "link": "DOCS_RESOURCES_CHANNEL/message-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": false,
        "type": "structure",
        "props": [
          {
            "name": "name",
            "description": "1-100 character channel name",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "auto_archive_duration",
            "description": "duration in minutes to automatically archive the thread after recent activity, can be set to: 60, 1440, 4320, 10080",
            "optional": true,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "integer"
            }
          },
          {
            "name": "rate_limit_per_user",
            "description": "amount of seconds a user has to wait before sending another message (0-21600)",
            "optional": true,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "integer"
            }
          }
        ]
      }
    },
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "channel-object"
    }
  },
  {
    "tree": [],
    "name": "Start Thread without Message",
    "description": "Creating a private thread requires the server to be boosted. The guild features will indicate if that is possible for the guild.",
    "method": "POST",
    "path": "/channels/{channel.id}/threads",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": false,
        "type": "structure",
        "props": [
          {
            "name": "name",
            "description": "1-100 character channel name",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "auto_archive_duration",
            "description": "duration in minutes to automatically archive the thread after recent activity, can be set to: 60, 1440, 4320, 10080",
            "optional": true,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "integer"
            }
          },
          {
            "name": "type",
            "description": "the type of thread to create",
            "optional": true,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "channel-object-channel-types",
              "fallback": {
                "array": false,
                "partial": false,
                "type": "value",
                "value": "integer"
              }
            }
          },
          {
            "name": "invitable",
            "description": "whether non-moderators can add other non-moderators to a thread; only available when creating a private thread",
            "optional": true,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "boolean"
            }
          },
          {
            "name": "rate_limit_per_user",
            "description": "amount of seconds a user has to wait before sending another message (0-21600)",
            "optional": true,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "integer"
            }
          }
        ]
      }
    }
  },
  {
    "tree": [],
    "name": "Join Thread",
    "description": "Adds another member to a thread. Requires the ability to send messages in the thread. Also requires the thread is not archived. Returns a 204 empty response if the member is successfully added or was already a member of the thread. Fires a Thread Members Update Gateway event.",
    "method": "PUT",
    "path": "/channels/{channel.id}/thread-members/@me",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Add Thread Member",
    "description": "Removes the current user from a thread. Also requires the thread is not archived. Returns a 204 empty response on success. Fires a Thread Members Update Gateway event.",
    "method": "PUT",
    "path": "/channels/{channel.id}/thread-members/{user.id}",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      },
      {
        "name": "user.id",
        "link": "DOCS_RESOURCES_USER/user-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Leave Thread",
    "description": "Removes another member from a thread. Requires the MANAGE_THREADS permission, or the creator of the thread if it is a GUILD_PRIVATE_THREAD. Also requires the thread is not archived. Returns a 204 empty response on success. Fires a Thread Members Update Gateway event.",
    "method": "DELETE",
    "path": "/channels/{channel.id}/thread-members/@me",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Remove Thread Member",
    "description": "Returns a thread member object for the specified user if they are a member of the thread, returns a 404 response otherwise.",
    "method": "DELETE",
    "path": "/channels/{channel.id}/thread-members/{user.id}",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      },
      {
        "name": "user.id",
        "link": "DOCS_RESOURCES_USER/user-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "thread-member-object"
    }
  },
  {
    "tree": [],
    "name": "Get Thread Member",
    "description": "Returns array of thread members objects that are members of the thread.",
    "method": "GET",
    "path": "/channels/{channel.id}/thread-members/{user.id}",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      },
      {
        "name": "user.id",
        "link": "DOCS_RESOURCES_USER/user-object"
      }
    ],
    "response": {
      "array": true,
      "partial": false,
      "type": "reference",
      "link": "thread-member-object"
    }
  },
  {
    "tree": [],
    "name": "List Thread Members",
    "description": "Returns all active threads in the channel, including public and private threads. Threads are ordered by their id, in descending order.",
    "method": "GET",
    "path": "/channels/{channel.id}/thread-members",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "List Active Threads",
    "description": "Returns archived threads in the channel that are public. When called on a GUILD_TEXT channel, returns threads of type GUILD_PUBLIC_THREAD. When called on a GUILD_NEWS channel returns threads of type GUILD_NEWS_THREAD. Threads are ordered by archive_timestamp, in descending order. Requires the READ_MESSAGE_HISTORY permission.",
    "method": "GET",
    "path": "/channels/{channel.id}/threads/active",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "channel-object-channel-types"
    }
  },
  {
    "tree": [],
    "name": "List Guild Emojis",
    "description": "Returns an emoji object for the given guild and emoji IDs.",
    "method": "GET",
    "path": "/guilds/{guild.id}/emojis",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "emoji-object"
    }
  },
  {
    "tree": [],
    "name": "Get Guild Emoji",
    "description": "Create a new emoji for the guild. Requires the MANAGE_EMOJIS_AND_STICKERS permission. Returns the new emoji object on success. Fires a Guild Emojis Update Gateway event.",
    "method": "GET",
    "path": "/guilds/{guild.id}/emojis/{emoji.id}",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      },
      {
        "name": "emoji.id",
        "link": "DOCS_RESOURCES_EMOJI/emoji-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "emoji-object"
    }
  },
  {
    "tree": [],
    "name": "Create Guild Emoji",
    "description": "Modify the given emoji. Requires the MANAGE_EMOJIS_AND_STICKERS permission. Returns the updated emoji object on success. Fires a Guild Emojis Update Gateway event.",
    "method": "POST",
    "path": "/guilds/{guild.id}/emojis",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": false,
        "type": "structure",
        "props": [
          {
            "name": "name",
            "description": "name of the emoji",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "image",
            "description": "the 128x128 emoji image",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "image-data"
            }
          },
          {
            "name": "roles",
            "description": "roles allowed to use this emoji",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "snowflake"
            }
          }
        ]
      }
    },
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "emoji-object"
    }
  },
  {
    "tree": [],
    "name": "Modify Guild Emoji",
    "description": "Delete the given emoji. Requires the MANAGE_EMOJIS_AND_STICKERS permission. Returns 204 No Content on success. Fires a Guild Emojis Update Gateway event.",
    "method": "PATCH",
    "path": "/guilds/{guild.id}/emojis/{emoji.id}",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      },
      {
        "name": "emoji.id",
        "link": "DOCS_RESOURCES_EMOJI/emoji-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": true,
        "type": "structure",
        "props": [
          {
            "name": "name",
            "description": "name of the emoji",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "roles",
            "description": "roles allowed to use this emoji",
            "optional": false,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "snowflake"
            }
          }
        ]
      }
    }
  },
  {
    "tree": [],
    "name": "Get Guild Preview",
    "description": "Modify a guild's settings. Requires the MANAGE_GUILD permission. Returns the updated guild object on success. Fires a Guild Update Gateway event.",
    "method": "GET",
    "path": "/guilds/{guild.id}/preview",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "guild-object"
    }
  },
  {
    "tree": [],
    "name": "Modify Guild",
    "description": "Delete a guild permanently. User must be owner. Returns 204 No Content on success. Fires a Guild Delete Gateway event.",
    "method": "PATCH",
    "path": "/guilds/{guild.id}",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": true,
        "type": "structure",
        "props": [
          {
            "name": "name",
            "description": "guild name",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "region",
            "description": "guild voice region id",
            "optional": false,
            "nullable": true,
            "deprecated": true,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "voice-region-object",
              "fallback": {
                "array": false,
                "partial": false,
                "type": "value",
                "value": "string"
              }
            }
          },
          {
            "name": "verification_level",
            "description": "verification level",
            "optional": false,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "guild-object-verification-level",
              "fallback": {
                "array": false,
                "partial": false,
                "type": "value",
                "value": "integer"
              }
            }
          },
          {
            "name": "default_message_notifications",
            "description": "default message notification level",
            "optional": false,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "guild-object-default-message-notification-level",
              "fallback": {
                "array": false,
                "partial": false,
                "type": "value",
                "value": "integer"
              }
            }
          },
          {
            "name": "explicit_content_filter",
            "description": "explicit content filter level",
            "optional": false,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "guild-object-explicit-content-filter-level",
              "fallback": {
                "array": false,
                "partial": false,
                "type": "value",
                "value": "integer"
              }
            }
          },
          {
            "name": "afk_channel_id",
            "description": "id for afk channel",
            "optional": false,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "snowflake"
            }
          },
          {
            "name": "afk_timeout",
            "description": "afk timeout in seconds",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "integer"
            }
          },
          {
            "name": "icon",
            "description": "base64 1024x1024 png/jpeg/gif image for the guild icon (can be animated gif when the server has the ANIMATED_ICON feature)",
            "optional": false,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "image-data"
            }
          },
          {
            "name": "owner_id",
            "description": "user id to transfer guild ownership to (must be owner)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "snowflake"
            }
          },
          {
            "name": "splash",
            "description": "base64 16:9 png/jpeg image for the guild splash (when the server has the INVITE_SPLASH feature)",
            "optional": false,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "image-data"
            }
          },
          {
            "name": "discovery_splash",
            "description": "base64 16:9 png/jpeg image for the guild discovery splash (when the server has the DISCOVERABLE feature)",
            "optional": false,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "image-data"
            }
          },
          {
            "name": "banner",
            "description": "base64 16:9 png/jpeg image for the guild banner (when the server has the BANNER feature)",
            "optional": false,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "image-data"
            }
          },
          {
            "name": "system_channel_id",
            "description": "the id of the channel where guild notices such as welcome messages and boost events are posted",
            "optional": false,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "snowflake"
            }
          },
          {
            "name": "system_channel_flags",
            "description": "system channel flags",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "guild-object-system-channel-flags",
              "fallback": {
                "array": false,
                "partial": false,
                "type": "value",
                "value": "integer"
              }
            }
          },
          {
            "name": "rules_channel_id",
            "description": "the id of the channel where Community guilds display rules and/or guidelines",
            "optional": false,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "snowflake"
            }
          },
          {
            "name": "public_updates_channel_id",
            "description": "the id of the channel where admins and moderators of Community guilds receive notices from Discord",
            "optional": false,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "snowflake"
            }
          },
          {
            "name": "preferred_locale",
            "description": "the preferred locale of a Community guild used in server discovery and notices from Discord; defaults to \"en-US",
            "optional": false,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "locales",
              "fallback": {
                "array": false,
                "partial": false,
                "type": "value",
                "value": "string"
              }
            }
          },
          {
            "name": "features",
            "description": "enabled guild features",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": true,
              "partial": false,
              "type": "reference",
              "link": "guild-object-guild-features"
            }
          },
          {
            "name": "description",
            "description": "the description for the guild, if the guild is discoverable",
            "optional": false,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "premium_progress_bar_enabled",
            "description": "whether the guild's boost progress bar should be enabled.",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "boolean"
            }
          }
        ]
      }
    }
  },
  {
    "tree": [],
    "name": "Delete Guild",
    "description": "Returns a list of guild channel objects. Does not include threads.",
    "method": "DELETE",
    "path": "/guilds/{guild.id}",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "response": {
      "array": true,
      "partial": false,
      "type": "reference",
      "link": "channel-object"
    }
  },
  {
    "tree": [],
    "name": "Get Guild Channels",
    "description": "Create a new channel object for the guild. Requires the MANAGE_CHANNELS permission. If setting permission overwrites, only permissions your bot has in the guild can be allowed/denied. Setting MANAGE_ROLES permission in channels is only possible for guild administrators. Returns the new channel object on success. Fires a Channel Create Gateway event.",
    "method": "GET",
    "path": "/guilds/{guild.id}/channels",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "channel-object"
    }
  },
  {
    "tree": [],
    "name": "Create Guild Channel",
    "description": "In each overwrite object, the allow and deny keys can be omitted or set to null, which both default to \"0\".",
    "method": "POST",
    "path": "/guilds/{guild.id}/channels",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": true,
        "type": "structure",
        "props": [
          {
            "name": "name",
            "description": "channel name (1-100 characters)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "type",
            "description": "the type of channel",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "channel-object-channel-types",
              "fallback": {
                "array": false,
                "partial": false,
                "type": "value",
                "value": "integer"
              }
            }
          },
          {
            "name": "topic",
            "description": "channel topic (0-1024 characters)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "bitrate",
            "description": "the bitrate (in bits) of the voice channel (voice only)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "integer"
            }
          },
          {
            "name": "user_limit",
            "description": "the user limit of the voice channel (voice only)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "integer"
            }
          },
          {
            "name": "rate_limit_per_user",
            "description": "amount of seconds a user has to wait before sending another message (0-21600); bots, as well as users with the permission manage_messages or manage_channel, are unaffected",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "integer"
            }
          },
          {
            "name": "position",
            "description": "sorting position of the channel",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "integer"
            }
          },
          {
            "name": "permission_overwrites",
            "description": "the channel's permission overwrites",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": true,
              "partial": true,
              "type": "reference",
              "link": "overwrite-object"
            }
          },
          {
            "name": "parent_id",
            "description": "id of the parent category for a channel",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "snowflake"
            }
          },
          {
            "name": "nsfw",
            "description": "whether the channel is nsfw",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "boolean"
            }
          }
        ]
      }
    }
  },
  {
    "tree": [],
    "name": "Modify Guild Channel Positions",
    "description": "This endpoint takes a JSON array of parameters in the following format:",
    "method": "PATCH",
    "path": "/guilds/{guild.id}/channels",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": false,
        "type": "structure",
        "props": [
          {
            "name": "id",
            "description": "channel id",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "snowflake"
            }
          },
          {
            "name": "position",
            "description": "sorting position of the channel",
            "optional": false,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "integer"
            }
          },
          {
            "name": "lock_permissions",
            "description": "syncs the permission overwrites with the new parent, if moving to a new category",
            "optional": false,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "boolean"
            }
          },
          {
            "name": "parent_id",
            "description": "the new parent ID for the channel that is moved",
            "optional": false,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "snowflake"
            }
          }
        ]
      }
    }
  },
  {
    "tree": [],
    "name": "List Active Threads",
    "description": "Returns a guild member object for the specified user.",
    "method": "GET",
    "path": "/guilds/{guild.id}/threads/active",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "guild-member-object"
    }
  },
  {
    "tree": [],
    "name": "Get Guild Member",
    "description": "Returns a list of guild member objects that are members of the guild.",
    "method": "GET",
    "path": "/guilds/{guild.id}/members/{user.id}",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      },
      {
        "name": "user.id",
        "link": "DOCS_RESOURCES_USER/user-object"
      }
    ],
    "response": {
      "array": true,
      "partial": false,
      "type": "reference",
      "link": "guild-member-object"
    }
  },
  {
    "tree": [],
    "name": "List Guild Members",
    "description": "Returns a list of guild member objects whose username or nickname starts with a provided string.",
    "method": "GET",
    "path": "/guilds/{guild.id}/members",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "query": {
      "array": false,
      "partial": false,
      "type": "structure",
      "props": [
        {
          "name": "limit",
          "description": "max number of members to return (1-1000)",
          "optional": false,
          "nullable": false,
          "deprecated": false,
          "type": {
            "array": false,
            "partial": false,
            "type": "value",
            "value": "integer"
          }
        },
        {
          "name": "after",
          "description": "the highest user id in the previous page",
          "optional": false,
          "nullable": false,
          "deprecated": false,
          "type": {
            "array": false,
            "partial": false,
            "type": "value",
            "value": "snowflake"
          }
        }
      ]
    },
    "response": {
      "array": true,
      "partial": false,
      "type": "reference",
      "link": "guild-member-object"
    }
  },
  {
    "tree": [],
    "name": "Search Guild Members",
    "description": "Adds a user to the guild, provided you have a valid oauth2 access token for the user with the guilds.join scope. Returns a 201 Created with the guild member as the body, or 204 No Content if the user is already a member of the guild. Fires a Guild Member Add Gateway event.",
    "method": "GET",
    "path": "/guilds/{guild.id}/members/search",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "query": {
      "array": false,
      "partial": false,
      "type": "structure",
      "props": [
        {
          "name": "query",
          "description": "Query string to match username(s) and nickname(s) against.",
          "optional": false,
          "nullable": false,
          "deprecated": false,
          "type": {
            "array": false,
            "partial": false,
            "type": "value",
            "value": "string"
          }
        },
        {
          "name": "limit",
          "description": "max number of members to return (1-1000)",
          "optional": false,
          "nullable": false,
          "deprecated": false,
          "type": {
            "array": false,
            "partial": false,
            "type": "value",
            "value": "integer"
          }
        }
      ]
    },
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "guild-member-object"
    }
  },
  {
    "tree": [],
    "name": "Add Guild Member",
    "description": "For guilds with Membership Screening enabled, this endpoint will default to adding new members as pending in the guild member object. Members that are pending will have to complete membership screening before they become full members that can talk.",
    "method": "PUT",
    "path": "/guilds/{guild.id}/members/{user.id}",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      },
      {
        "name": "user.id",
        "link": "DOCS_RESOURCES_USER/user-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": true,
        "type": "structure",
        "props": [
          {
            "name": "access_token",
            "description": "an oauth2 access token granted with the guilds.join to the bot's application for the user you want to add to the guild",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "nick",
            "description": "value to set user's nickname to",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "roles",
            "description": " role ids the member is assigned",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "snowflake"
            }
          },
          {
            "name": "mute",
            "description": "whether the user is muted in voice channels",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "boolean"
            }
          },
          {
            "name": "deaf",
            "description": "whether the user is deafened in voice channels",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "boolean"
            }
          }
        ]
      }
    },
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "guild-member-object"
    }
  },
  {
    "tree": [],
    "name": "Modify Guild Member",
    "description": "Modifies the current member in a guild. Returns a 200 with the updated member object on success. Fires a Guild Member Update Gateway event.",
    "method": "PATCH",
    "path": "/guilds/{guild.id}/members/{user.id}",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      },
      {
        "name": "user.id",
        "link": "DOCS_RESOURCES_USER/user-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": true,
        "type": "structure",
        "props": [
          {
            "name": "nick",
            "description": "value to set user's nickname to",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "roles",
            "description": " role ids the member is assigned",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "snowflake"
            }
          },
          {
            "name": "mute",
            "description": "whether the user is muted in voice channels. Will throw a 400 error if the user is not in a voice channel",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "boolean"
            }
          },
          {
            "name": "deaf",
            "description": "whether the user is deafened in voice channels. Will throw a 400 error if the user is not in a voice channel",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "boolean"
            }
          },
          {
            "name": "channel_id",
            "description": "id of channel to move user to (if they are connected to voice)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "snowflake"
            }
          },
          {
            "name": "communication_disabled_until",
            "description": "when the user's timeout will expire and the user will be able to communicate in the guild again (up to 28 days in the future), set to null to remove timeout. Will throw a 403 error if the user has the ADMINISTRATOR permission or is the owner of the guild",
            "optional": false,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "4413305239191-Time-Out-FAQ",
              "fallback": {
                "array": false,
                "partial": false,
                "type": "value",
                "value": "date"
              }
            }
          }
        ]
      }
    }
  },
  {
    "tree": [],
    "name": "Modify Current Member",
    "method": "PATCH",
    "path": "/guilds/{guild.id}/members/@me",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": false,
        "type": "structure",
        "props": [
          {
            "name": "nick",
            "description": "value to set user's nickname to",
            "optional": true,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          }
        ]
      }
    }
  },
  {
    "tree": [],
    "name": "Modify Current User Nick",
    "description": "Modifies the nickname of the current user in a guild. Returns a 200 with the nickname on success. Fires a Guild Member Update Gateway event.",
    "method": "PATCH",
    "path": "/guilds/{guild.id}/members/@me/nick",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": false,
        "type": "structure",
        "props": [
          {
            "name": "nick",
            "description": "value to set user's nickname to",
            "optional": true,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          }
        ]
      }
    }
  },
  {
    "tree": [],
    "name": "Add Guild Member Role",
    "description": "Removes a role from a guild member. Requires the MANAGE_ROLES permission. Returns a 204 empty response on success. Fires a Guild Member Update Gateway event.",
    "method": "PUT",
    "path": "/guilds/{guild.id}/members/{user.id}/roles/{role.id}",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      },
      {
        "name": "user.id",
        "link": "DOCS_RESOURCES_USER/user-object"
      },
      {
        "name": "role.id",
        "link": "DOCS_TOPICS_PERMISSIONS/role-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Remove Guild Member Role",
    "description": "Remove a member from a guild. Requires KICK_MEMBERS permission. Returns a 204 empty response on success. Fires a Guild Member Remove Gateway event.",
    "method": "DELETE",
    "path": "/guilds/{guild.id}/members/{user.id}/roles/{role.id}",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      },
      {
        "name": "user.id",
        "link": "DOCS_RESOURCES_USER/user-object"
      },
      {
        "name": "role.id",
        "link": "DOCS_TOPICS_PERMISSIONS/role-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Remove Guild Member",
    "description": "Returns a list of ban objects for the users banned from this guild. Requires the BAN_MEMBERS permission.",
    "method": "DELETE",
    "path": "/guilds/{guild.id}/members/{user.id}",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      },
      {
        "name": "user.id",
        "link": "DOCS_RESOURCES_USER/user-object"
      }
    ],
    "response": {
      "array": true,
      "partial": false,
      "type": "reference",
      "link": "ban-object"
    }
  },
  {
    "tree": [],
    "name": "Get Guild Bans",
    "description": "Returns a ban object for the given user or a 404 not found if the ban cannot be found. Requires the BAN_MEMBERS permission.",
    "method": "GET",
    "path": "/guilds/{guild.id}/bans",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "ban-object"
    }
  },
  {
    "tree": [],
    "name": "Get Guild Ban",
    "description": "Create a guild ban, and optionally delete previous messages sent by the banned user. Requires the BAN_MEMBERS permission. Returns a 204 empty response on success. Fires a Guild Ban Add Gateway event.",
    "method": "GET",
    "path": "/guilds/{guild.id}/bans/{user.id}",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      },
      {
        "name": "user.id",
        "link": "DOCS_RESOURCES_USER/user-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Create Guild Ban",
    "description": "Remove the ban for a user. Requires the BAN_MEMBERS permissions. Returns a 204 empty response on success. Fires a Guild Ban Remove Gateway event.",
    "method": "PUT",
    "path": "/guilds/{guild.id}/bans/{user.id}",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      },
      {
        "name": "user.id",
        "link": "DOCS_RESOURCES_USER/user-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": false,
        "type": "structure",
        "props": [
          {
            "name": "delete_message_days",
            "description": "number of days to delete messages for (0-7)",
            "optional": true,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "integer"
            }
          },
          {
            "name": "reason",
            "description": "reason for the ban",
            "optional": true,
            "nullable": false,
            "deprecated": true,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          }
        ]
      }
    }
  },
  {
    "tree": [],
    "name": "Remove Guild Ban",
    "description": "Returns a list of role objects for the guild.",
    "method": "DELETE",
    "path": "/guilds/{guild.id}/bans/{user.id}",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      },
      {
        "name": "user.id",
        "link": "DOCS_RESOURCES_USER/user-object"
      }
    ],
    "response": {
      "array": true,
      "partial": false,
      "type": "reference",
      "link": "role-object"
    }
  },
  {
    "tree": [],
    "name": "Get Guild Roles",
    "description": "Create a new role for the guild. Requires the MANAGE_ROLES permission. Returns the new role object on success. Fires a Guild Role Create Gateway event. All JSON params are optional.",
    "method": "GET",
    "path": "/guilds/{guild.id}/roles",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "role-object"
    }
  },
  {
    "tree": [],
    "name": "Create Guild Role",
    "description": "Modify the positions of a set of role objects for the guild. Requires the MANAGE_ROLES permission. Returns a list of all of the guild's role objects on success. Fires multiple Guild Role Update Gateway events.",
    "method": "POST",
    "path": "/guilds/{guild.id}/roles",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": false,
        "type": "structure",
        "props": [
          {
            "name": "name",
            "description": "name of the role",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "permissions",
            "description": "bitwise value of the enabled/disabled permissions",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "color",
            "description": "RGB color value",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "integer"
            }
          },
          {
            "name": "hoist",
            "description": "whether the role should be displayed separately in the sidebar",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "boolean"
            }
          },
          {
            "name": "icon",
            "description": "the role's icon image (if the guild has the ROLE_ICONS feature)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "image-data"
            }
          },
          {
            "name": "unicode_emoji",
            "description": "the role's unicode emoji as a standard emoji (if the guild has the ROLE_ICONS feature)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "message-formatting",
              "fallback": {
                "array": false,
                "partial": false,
                "type": "value",
                "value": "string"
              }
            }
          },
          {
            "name": "mentionable",
            "description": "whether the role should be mentionable",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "boolean"
            }
          }
        ]
      }
    },
    "response": {
      "array": true,
      "partial": false,
      "type": "reference",
      "link": "role-object"
    }
  },
  {
    "tree": [],
    "name": "Modify Guild Role Positions",
    "description": "This endpoint takes a JSON array of parameters in the following format:",
    "method": "PATCH",
    "path": "/guilds/{guild.id}/roles",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": false,
        "type": "structure",
        "props": [
          {
            "name": "id",
            "description": "role",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "snowflake"
            }
          },
          {
            "name": "position",
            "description": "sorting position of the role",
            "optional": true,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "integer"
            }
          }
        ]
      }
    },
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "role-object"
    }
  },
  {
    "tree": [],
    "name": "Modify Guild Role",
    "description": "Delete a guild role. Requires the MANAGE_ROLES permission. Returns a 204 empty response on success. Fires a Guild Role Delete Gateway event.",
    "method": "PATCH",
    "path": "/guilds/{guild.id}/roles/{role.id}",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      },
      {
        "name": "role.id",
        "link": "DOCS_TOPICS_PERMISSIONS/role-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": true,
        "type": "structure",
        "props": [
          {
            "name": "name",
            "description": "name of the role",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "permissions",
            "description": "bitwise value of the enabled/disabled permissions",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "color",
            "description": "RGB color value",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "integer"
            }
          },
          {
            "name": "hoist",
            "description": "whether the role should be displayed separately in the sidebar",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "boolean"
            }
          },
          {
            "name": "icon",
            "description": "the role's icon image (if the guild has the ROLE_ICONS feature)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "image-data"
            }
          },
          {
            "name": "unicode_emoji",
            "description": "the role's unicode emoji as a standard emoji (if the guild has the ROLE_ICONS feature)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "message-formatting",
              "fallback": {
                "array": false,
                "partial": false,
                "type": "value",
                "value": "string"
              }
            }
          },
          {
            "name": "mentionable",
            "description": "whether the role should be mentionable",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "boolean"
            }
          }
        ]
      }
    }
  },
  {
    "tree": [],
    "name": "Delete Guild Role",
    "description": "Returns an object with one 'pruned' key indicating the number of members that would be removed in a prune operation. Requires the KICK_MEMBERS permission.",
    "method": "DELETE",
    "path": "/guilds/{guild.id}/roles/{role.id}",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      },
      {
        "name": "role.id",
        "link": "DOCS_TOPICS_PERMISSIONS/role-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Get Guild Prune Count",
    "description": "By default, prune will not remove users with roles. You can optionally include specific roles in your prune by providing the include_roles parameter. Any inactive user that has a subset of the provided role(s) will be counted in the prune and users with additional roles will not.",
    "method": "GET",
    "path": "/guilds/{guild.id}/prune",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "query": {
      "array": false,
      "partial": false,
      "type": "structure",
      "props": [
        {
          "name": "days",
          "description": "number of days to count prune for (1-30)",
          "optional": false,
          "nullable": false,
          "deprecated": false,
          "type": {
            "array": false,
            "partial": false,
            "type": "value",
            "value": "integer"
          }
        },
        {
          "name": "include_roles",
          "description": "role(s) to include",
          "optional": false,
          "nullable": false,
          "deprecated": false,
          "type": {
            "array": false,
            "partial": false,
            "type": "value",
            "value": "string"
          }
        }
      ]
    }
  },
  {
    "tree": [],
    "name": "Begin Guild Prune",
    "description": "By default, prune will not remove users with roles. You can optionally include specific roles in your prune by providing the include_roles parameter. Any inactive user that has a subset of the provided role(s) will be included in the prune and users with additional roles will not.",
    "method": "POST",
    "path": "/guilds/{guild.id}/prune",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": true,
        "type": "structure",
        "props": [
          {
            "name": "days",
            "description": "number of days to prune (1-30)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "integer"
            }
          },
          {
            "name": "compute_prune_count",
            "description": "whether 'pruned' is returned, discouraged for large guilds",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "boolean"
            }
          },
          {
            "name": "include_roles",
            "description": "role(s) to include",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "snowflake"
            }
          },
          {
            "name": "reason",
            "description": "reason for the prune",
            "optional": true,
            "nullable": false,
            "deprecated": true,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          }
        ]
      }
    },
    "response": {
      "array": true,
      "partial": false,
      "type": "reference",
      "link": "voice-region-object"
    }
  },
  {
    "tree": [],
    "name": "Get Guild Voice Regions",
    "description": "Returns a list of invite objects (with invite metadata) for the guild. Requires the MANAGE_GUILD permission.",
    "method": "GET",
    "path": "/guilds/{guild.id}/regions",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "response": {
      "array": true,
      "partial": false,
      "type": "reference",
      "link": "invite-object"
    }
  },
  {
    "tree": [],
    "name": "Get Guild Invites",
    "description": "Returns a list of integration objects for the guild. Requires the MANAGE_GUILD permission.",
    "method": "GET",
    "path": "/guilds/{guild.id}/invites",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "response": {
      "array": true,
      "partial": false,
      "type": "reference",
      "link": "integration-object"
    }
  },
  {
    "tree": [],
    "name": "Get Guild Integrations",
    "description": "Delete the attached integration object for the guild. Deletes any associated webhooks and kicks the associated bot if there is one. Requires the MANAGE_GUILD permission. Returns a 204 empty response on success. Fires a Guild Integrations Update Gateway event.",
    "method": "GET",
    "path": "/guilds/{guild.id}/integrations",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Delete Guild Integration",
    "description": "Returns a guild widget settings object. Requires the MANAGE_GUILD permission.",
    "method": "DELETE",
    "path": "/guilds/{guild.id}/integrations/{integration.id}",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      },
      {
        "name": "integration.id",
        "link": "DOCS_RESOURCES_GUILD/integration-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "guild-widget-settings-object"
    }
  },
  {
    "tree": [],
    "name": "Get Guild Widget Settings",
    "description": "Modify a guild widget settings object for the guild. All attributes may be passed in with JSON and modified. Requires the MANAGE_GUILD permission. Returns the updated guild widget object.",
    "method": "GET",
    "path": "/guilds/{guild.id}/widget",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "guild-widget-settings-object"
    }
  },
  {
    "tree": [],
    "name": "Modify Guild Widget",
    "description": "Returns the widget for the guild.",
    "method": "PATCH",
    "path": "/guilds/{guild.id}/widget",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "get-guild-widget-object"
    }
  },
  {
    "tree": [],
    "name": "Get Guild Widget",
    "description": "Returns a partial invite object for guilds with that feature enabled. Requires the MANAGE_GUILD permission. code will be null if a vanity url for the guild is not set.",
    "method": "GET",
    "path": "/guilds/{guild.id}/widget.json",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "response": {
      "array": false,
      "partial": true,
      "type": "reference",
      "link": "invite-object"
    }
  },
  {
    "tree": [],
    "name": "Get Guild Vanity URL",
    "description": "Returns a PNG image widget for the guild. Requires no permissions or authentication.",
    "method": "GET",
    "path": "/guilds/{guild.id}/vanity-url",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Get Guild Welcome Screen",
    "description": "Modify the guild's Welcome Screen. Requires the MANAGE_GUILD permission. Returns the updated Welcome Screen object.",
    "method": "GET",
    "path": "/guilds/{guild.id}/welcome-screen",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "welcome-screen-object"
    }
  },
  {
    "tree": [],
    "name": "Modify Guild Welcome Screen",
    "description": "Updates the current user's voice state.",
    "method": "PATCH",
    "path": "/guilds/{guild.id}/welcome-screen",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": true,
        "type": "structure",
        "props": [
          {
            "name": "enabled",
            "description": "whether the welcome screen is enabled",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "boolean"
            }
          },
          {
            "name": "welcome_channels",
            "description": "channels linked in the welcome screen and their display options",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": true,
              "partial": false,
              "type": "reference",
              "link": "welcome-screen-object-welcome-screen-channel-structure"
            }
          },
          {
            "name": "description",
            "description": "the server description to show in the welcome screen",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          }
        ]
      }
    }
  },
  {
    "tree": [],
    "name": "Modify Current User Voice State",
    "description": "There are currently several caveats for this endpoint:",
    "method": "PATCH",
    "path": "/guilds/{guild.id}/voice-states/@me",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": false,
        "type": "structure",
        "props": [
          {
            "name": "channel_id",
            "description": "the id of the channel the user is currently in",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "snowflake"
            }
          },
          {
            "name": "suppress",
            "description": "toggles the user's suppress state",
            "optional": true,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "boolean"
            }
          },
          {
            "name": "request_to_speak_timestamp",
            "description": "sets the user's request to speak",
            "optional": true,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "date"
            }
          }
        ]
      }
    }
  },
  {
    "tree": [],
    "name": "Delete Guild Scheduled Event",
    "description": "Get a list of guild scheduled event users subscribed to a guild scheduled event. Returns a list of guild scheduled event user objects on success. Guild member data, if it exists, is included if the with_member query parameter is set.",
    "method": "DELETE",
    "path": "/guilds/{guild.id}/scheduled-events/{guild_scheduled_event.id}",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      },
      {
        "name": "guild_scheduled_event.id",
        "link": "DOCS_RESOURCES_GUILD_SCHEDULED_EVENT/guild-scheduled-event-object"
      }
    ],
    "response": {
      "array": true,
      "partial": false,
      "type": "reference",
      "link": "guild-scheduled-event-user-object"
    }
  },
  {
    "tree": [],
    "name": "Get Guild Template",
    "description": "Create a new guild based on a template. Returns a guild object on success. Fires a Guild Create Gateway event.",
    "method": "GET",
    "path": "/guilds/templates/{template.code}",
    "params": [
      {
        "name": "template.code",
        "link": "DOCS_RESOURCES_GUILD_TEMPLATE/guild-template-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "guild-object"
    }
  },
  {
    "tree": [],
    "name": "Create Guild from Guild Template",
    "description": "Returns an array of guild template objects. Requires the MANAGE_GUILD permission.",
    "method": "POST",
    "path": "/guilds/templates/{template.code}",
    "params": [
      {
        "name": "template.code",
        "link": "DOCS_RESOURCES_GUILD_TEMPLATE/guild-template-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": false,
        "type": "structure",
        "props": [
          {
            "name": "name",
            "description": "name of the guild (2-100 characters)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "icon",
            "description": "base64 128x128 image for the guild icon",
            "optional": true,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "image-data"
            }
          }
        ]
      }
    },
    "response": {
      "array": true,
      "partial": false,
      "type": "reference",
      "link": "guild-template-object"
    }
  },
  {
    "tree": [],
    "name": "Get Guild Templates",
    "description": "Creates a template for the guild. Requires the MANAGE_GUILD permission. Returns the created guild template object on success.",
    "method": "GET",
    "path": "/guilds/{guild.id}/templates",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "guild-template-object"
    }
  },
  {
    "tree": [],
    "name": "Create Guild Template",
    "description": "Syncs the template to the guild's current state. Requires the MANAGE_GUILD permission. Returns the guild template object on success.",
    "method": "POST",
    "path": "/guilds/{guild.id}/templates",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": false,
        "type": "structure",
        "props": [
          {
            "name": "name",
            "description": "name of the template (1-100 characters)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "description",
            "description": "description for the template (0-120 characters)",
            "optional": true,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          }
        ]
      }
    },
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "guild-template-object"
    }
  },
  {
    "tree": [],
    "name": "Sync Guild Template",
    "description": "Modifies the template's metadata. Requires the MANAGE_GUILD permission. Returns the guild template object on success.",
    "method": "PUT",
    "path": "/guilds/{guild.id}/templates/{template.code}",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      },
      {
        "name": "template.code",
        "link": "DOCS_RESOURCES_GUILD_TEMPLATE/guild-template-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "guild-template-object"
    }
  },
  {
    "tree": [],
    "name": "Modify Guild Template",
    "description": "Deletes the template. Requires the MANAGE_GUILD permission. Returns the deleted guild template object on success.",
    "method": "PATCH",
    "path": "/guilds/{guild.id}/templates/{template.code}",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      },
      {
        "name": "template.code",
        "link": "DOCS_RESOURCES_GUILD_TEMPLATE/guild-template-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": false,
        "type": "structure",
        "props": [
          {
            "name": "name",
            "description": "name of the template (1-100 characters)",
            "optional": true,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "description",
            "description": "description for the template (0-120 characters)",
            "optional": true,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          }
        ]
      }
    },
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "guild-template-object"
    }
  },
  {
    "tree": [],
    "name": "Get Stage Instance",
    "description": "Updates fields of an existing Stage instance.",
    "method": "GET",
    "path": "/stage-instances/{channel.id}",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Modify Stage Instance",
    "description": "Requires the user to be a moderator of the Stage channel.",
    "method": "PATCH",
    "path": "/stage-instances/{channel.id}",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": false,
        "type": "structure",
        "props": [
          {
            "name": "topic",
            "description": "The topic of the Stage instance (1-120 characters)",
            "optional": true,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "privacy_level",
            "description": "The privacy level of the Stage instance",
            "optional": true,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "stage-instance-object-privacy-level",
              "fallback": {
                "array": false,
                "partial": false,
                "type": "value",
                "value": "integer"
              }
            }
          }
        ]
      }
    }
  },
  {
    "tree": [],
    "name": "Get Sticker",
    "description": "Returns the list of sticker packs available to Nitro subscribers.",
    "method": "GET",
    "path": "/stickers/{sticker.id}",
    "params": [
      {
        "name": "sticker.id",
        "link": "DOCS_RESOURCES_STICKER/sticker-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "List Nitro Sticker Packs",
    "description": "Returns an array of sticker objects for the given guild. Includes user fields if the bot has the MANAGE_EMOJIS_AND_STICKERS permission.",
    "method": "GET",
    "path": "/sticker-packs",
    "params": [],
    "response": {
      "array": false,
      "partial": false,
      "type": "structure",
      "props": [
        {
          "name": "sticker_packs",
          "optional": false,
          "nullable": false,
          "deprecated": false,
          "type": {
            "array": true,
            "partial": false,
            "type": "reference",
            "link": "sticker-pack-object"
          }
        }
      ]
    }
  },
  {
    "tree": [],
    "name": "List Guild Stickers",
    "description": "Returns a sticker object for the given guild and sticker IDs. Includes the user field if the bot has the MANAGE_EMOJIS_AND_STICKERS permission.",
    "method": "GET",
    "path": "/guilds/{guild.id}/stickers",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "sticker-object"
    }
  },
  {
    "tree": [],
    "name": "Get Guild Sticker",
    "description": "Create a new sticker for the guild. Send a multipart/form-data body. Requires the MANAGE_EMOJIS_AND_STICKERS permission. Returns the new sticker object on success.",
    "method": "GET",
    "path": "/guilds/{guild.id}/stickers/{sticker.id}",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      },
      {
        "name": "sticker.id",
        "link": "DOCS_RESOURCES_STICKER/sticker-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "sticker-object"
    }
  },
  {
    "tree": [],
    "name": "Create Guild Sticker",
    "description": "Modify the given sticker. Requires the MANAGE_EMOJIS_AND_STICKERS permission. Returns the updated sticker object on success.",
    "method": "POST",
    "path": "/guilds/{guild.id}/stickers",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "request": {
      "json": false,
      "form": true,
      "type": {
        "array": false,
        "partial": false,
        "type": "structure",
        "props": [
          {
            "name": "name",
            "description": "name of the sticker (2-30 characters)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "description",
            "description": "description of the sticker (empty or 2-100 characters)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "tags",
            "description": "autocomplete/suggestion tags for the sticker (max 200 characters)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "file",
            "description": "the sticker file to upload, must be a PNG, APNG, or Lottie JSON file, max 500 KB",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "file"
            }
          }
        ]
      }
    },
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "sticker-object"
    }
  },
  {
    "tree": [],
    "name": "Modify Guild Sticker",
    "description": "Delete the given sticker. Requires the MANAGE_EMOJIS_AND_STICKERS permission. Returns 204 No Content on success.",
    "method": "PATCH",
    "path": "/guilds/{guild.id}/stickers/{sticker.id}",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      },
      {
        "name": "sticker.id",
        "link": "DOCS_RESOURCES_STICKER/sticker-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": true,
        "type": "structure",
        "props": [
          {
            "name": "name",
            "description": "name of the sticker (2-30 characters)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "description",
            "description": "description of the sticker (2-100 characters)",
            "optional": false,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "tags",
            "description": "autocomplete/suggestion tags for the sticker (max 200 characters)",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          }
        ]
      }
    }
  },
  {
    "tree": [],
    "name": "Get Current User",
    "description": "Returns a user object for a given user ID.",
    "method": "GET",
    "path": "/users/@me",
    "params": [],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "user-object"
    }
  },
  {
    "tree": [],
    "name": "Get User",
    "description": "Modify the requester's user account settings. Returns a user object on success.",
    "method": "GET",
    "path": "/users/{user.id}",
    "params": [
      {
        "name": "user.id",
        "link": "DOCS_RESOURCES_USER/user-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "user-object"
    }
  },
  {
    "tree": [],
    "name": "Modify Current User",
    "description": "Returns a list of partial guild objects the current user is a member of. Requires the guilds OAuth2 scope.",
    "method": "PATCH",
    "path": "/users/@me",
    "params": [],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": true,
        "type": "structure",
        "props": [
          {
            "name": "username",
            "description": "user's username, if changed may cause the user's discriminator to be randomized.",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "avatar",
            "description": "if passed, modifies the user's avatar",
            "optional": false,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "image-data"
            }
          }
        ]
      }
    },
    "response": {
      "array": true,
      "partial": true,
      "type": "reference",
      "link": "guild-object"
    }
  },
  {
    "tree": [],
    "name": "Get Current User Guild Member",
    "description": "Leave a guild. Returns a 204 empty response on success.",
    "method": "GET",
    "path": "/users/@me/guilds/{guild.id}/member",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Leave Guild",
    "description": "Create a new DM channel with a user. Returns a DM channel object.",
    "method": "DELETE",
    "path": "/users/@me/guilds/{guild.id}",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "channel-object"
    }
  },
  {
    "tree": [],
    "name": "Create DM",
    "description": "Create a new group DM channel with multiple users. Returns a DM channel object. This endpoint was intended to be used with the now-deprecated GameBridge SDK. DMs created with this endpoint will not be shown in the Discord client",
    "method": "POST",
    "path": "/users/@me/channels",
    "params": [],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": false,
        "type": "structure",
        "props": [
          {
            "name": "recipient_id",
            "description": "the recipient to open a DM channel with",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "snowflake"
            }
          }
        ]
      }
    },
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "channel-object"
    }
  },
  {
    "tree": [],
    "name": "Create Group DM",
    "description": "Returns a list of connection objects. Requires the connections OAuth2 scope.",
    "method": "POST",
    "path": "/users/@me/channels",
    "params": [],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": false,
        "type": "structure",
        "props": [
          {
            "name": "access_tokens",
            "description": "access tokens of users that have granted your app the gdm.join scope",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "nicks",
            "description": "a dictionary of user ids to their respective nicknames",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "object"
            }
          }
        ]
      }
    },
    "response": {
      "array": true,
      "partial": false,
      "type": "reference",
      "link": "connection-object"
    }
  },
  {
    "tree": [],
    "name": "Get Channel Webhooks",
    "description": "Returns a list of guild webhook objects. Requires the MANAGE_WEBHOOKS permission.",
    "method": "GET",
    "path": "/channels/{channel.id}/webhooks",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      }
    ],
    "response": {
      "array": true,
      "partial": false,
      "type": "reference",
      "link": "webhook-object"
    }
  },
  {
    "tree": [],
    "name": "Get Guild Webhooks",
    "description": "Returns the new webhook object for the given id.",
    "method": "GET",
    "path": "/guilds/{guild.id}/webhooks",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "webhook-object"
    }
  },
  {
    "tree": [],
    "name": "Get Webhook",
    "description": "Same as above, except this call does not require authentication and returns no user in the webhook object.",
    "method": "GET",
    "path": "/webhooks/{webhook.id}",
    "params": [
      {
        "name": "webhook.id",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Get Webhook with Token",
    "description": "Modify a webhook. Requires the MANAGE_WEBHOOKS permission. Returns the updated webhook object on success.",
    "method": "GET",
    "path": "/webhooks/{webhook.id}/{webhook.token}",
    "params": [
      {
        "name": "webhook.id",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      },
      {
        "name": "webhook.token",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      }
    ],
    "response": {
      "array": false,
      "partial": false,
      "type": "reference",
      "link": "webhook-object"
    }
  },
  {
    "tree": [],
    "name": "Modify Webhook",
    "description": "Same as above, except this call does not require authentication, does not accept a channel_id parameter in the body, and does not return a user in the webhook object.",
    "method": "PATCH",
    "path": "/webhooks/{webhook.id}",
    "params": [
      {
        "name": "webhook.id",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      }
    ],
    "request": {
      "json": true,
      "form": false,
      "type": {
        "array": false,
        "partial": true,
        "type": "structure",
        "props": [
          {
            "name": "name",
            "description": "the default name of the webhook",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "string"
            }
          },
          {
            "name": "avatar",
            "description": "image for the default webhook avatar",
            "optional": false,
            "nullable": true,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "reference",
              "link": "image-data"
            }
          },
          {
            "name": "channel_id",
            "description": "the new channel id this webhook should be moved to",
            "optional": false,
            "nullable": false,
            "deprecated": false,
            "type": {
              "array": false,
              "partial": false,
              "type": "value",
              "value": "snowflake"
            }
          }
        ]
      }
    }
  },
  {
    "tree": [],
    "name": "Modify Webhook with Token",
    "description": "Delete a webhook permanently. Requires the MANAGE_WEBHOOKS permission. Returns a 204 No Content response on success.",
    "method": "PATCH",
    "path": "/webhooks/{webhook.id}/{webhook.token}",
    "params": [
      {
        "name": "webhook.id",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      },
      {
        "name": "webhook.token",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Delete Webhook",
    "description": "Same as above, except this call does not require authentication.",
    "method": "DELETE",
    "path": "/webhooks/{webhook.id}",
    "params": [
      {
        "name": "webhook.id",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Delete Webhook with Token",
    "description": "Refer to Uploading Files for details on attachments and multipart/form-data requests.",
    "method": "DELETE",
    "path": "/webhooks/{webhook.id}/{webhook.token}",
    "params": [
      {
        "name": "webhook.id",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      },
      {
        "name": "webhook.token",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Get Gateway",
    "description": "Returns an object with a single valid WSS URL, which the client can use for Connecting. Clients should cache this value and only call this endpoint to retrieve a new URL if they are unable to properly establish a connection using the cached version of the URL.",
    "method": "GET",
    "path": "/gateway",
    "params": [],
    "response": {
      "array": false,
      "partial": false,
      "type": "structure",
      "props": [
        {
          "optional": false,
          "nullable": false,
          "deprecated": false,
          "name": "url",
          "type": {
            "array": false,
            "partial": false,
            "type": "value",
            "value": "string"
          }
        }
      ]
    }
  },
  {
    "tree": [],
    "name": "Get Current Bot Application Information",
    "description": "Returns info about the current authorization. Requires authentication with a bearer token.",
    "method": "GET",
    "path": "/oauth2/applications/@me",
    "params": []
  }
]