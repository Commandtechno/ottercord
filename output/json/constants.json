[
  {
    "tree": [],
    "name": "Example Application Object",
    "props": [
      {
        "name": "1 << 12",
        "value": "GATEWAY_PRESENCE"
      },
      {
        "name": "1 << 13",
        "value": "GATEWAY_PRESENCE_LIMITED"
      },
      {
        "name": "1 << 14",
        "value": "GATEWAY_GUILD_MEMBERS"
      },
      {
        "name": "1 << 15",
        "value": "GATEWAY_GUILD_MEMBERS_LIMITED"
      },
      {
        "name": "1 << 16",
        "value": "VERIFICATION_PENDING_GUILD_LIMIT"
      },
      {
        "name": "1 << 17",
        "value": "EMBEDDED"
      },
      {
        "name": "1 << 18",
        "value": "GATEWAY_MESSAGE_CONTENT"
      },
      {
        "name": "1 << 19",
        "value": "GATEWAY_MESSAGE_CONTENT_LIMITED"
      }
    ]
  },
  {
    "tree": [],
    "name": "Audit Log Entry Structure",
    "props": [
      {
        "name": "GUILD_UPDATE",
        "value": 1
      },
      {
        "name": "CHANNEL_CREATE",
        "value": 10
      },
      {
        "name": "CHANNEL_UPDATE",
        "value": 11
      },
      {
        "name": "CHANNEL_DELETE",
        "value": 12
      },
      {
        "name": "CHANNEL_OVERWRITE_CREATE",
        "value": 13
      },
      {
        "name": "CHANNEL_OVERWRITE_UPDATE",
        "value": 14
      },
      {
        "name": "CHANNEL_OVERWRITE_DELETE",
        "value": 15
      },
      {
        "name": "MEMBER_KICK",
        "value": 20
      },
      {
        "name": "MEMBER_PRUNE",
        "value": 21
      },
      {
        "name": "MEMBER_BAN_ADD",
        "value": 22
      },
      {
        "name": "MEMBER_BAN_REMOVE",
        "value": 23
      },
      {
        "name": "MEMBER_UPDATE",
        "value": 24
      },
      {
        "name": "MEMBER_ROLE_UPDATE",
        "value": 25
      },
      {
        "name": "MEMBER_MOVE",
        "value": 26
      },
      {
        "name": "MEMBER_DISCONNECT",
        "value": 27
      },
      {
        "name": "BOT_ADD",
        "value": 28
      },
      {
        "name": "ROLE_CREATE",
        "value": 30
      },
      {
        "name": "ROLE_UPDATE",
        "value": 31
      },
      {
        "name": "ROLE_DELETE",
        "value": 32
      },
      {
        "name": "INVITE_CREATE",
        "value": 40
      },
      {
        "name": "INVITE_UPDATE",
        "value": 41
      },
      {
        "name": "INVITE_DELETE",
        "value": 42
      },
      {
        "name": "WEBHOOK_CREATE",
        "value": 50
      },
      {
        "name": "WEBHOOK_UPDATE",
        "value": 51
      },
      {
        "name": "WEBHOOK_DELETE",
        "value": 52
      },
      {
        "name": "EMOJI_CREATE",
        "value": 60
      },
      {
        "name": "EMOJI_UPDATE",
        "value": 61
      },
      {
        "name": "EMOJI_DELETE",
        "value": 62
      },
      {
        "name": "MESSAGE_DELETE",
        "value": 72
      },
      {
        "name": "MESSAGE_BULK_DELETE",
        "value": 73
      },
      {
        "name": "MESSAGE_PIN",
        "value": 74
      },
      {
        "name": "MESSAGE_UNPIN",
        "value": 75
      },
      {
        "name": "INTEGRATION_CREATE",
        "value": 80
      },
      {
        "name": "INTEGRATION_UPDATE",
        "value": 81
      },
      {
        "name": "INTEGRATION_DELETE",
        "value": 82
      },
      {
        "name": "STAGE_INSTANCE_CREATE",
        "value": 83
      },
      {
        "name": "STAGE_INSTANCE_UPDATE",
        "value": 84
      },
      {
        "name": "STAGE_INSTANCE_DELETE",
        "value": 85
      },
      {
        "name": "STICKER_CREATE",
        "value": 90
      },
      {
        "name": "STICKER_UPDATE",
        "value": 91
      },
      {
        "name": "STICKER_DELETE",
        "value": 92
      },
      {
        "name": "GUILD_SCHEDULED_EVENT_CREATE",
        "value": 100
      },
      {
        "name": "GUILD_SCHEDULED_EVENT_UPDATE",
        "value": 101
      },
      {
        "name": "GUILD_SCHEDULED_EVENT_DELETE",
        "value": 102
      },
      {
        "name": "THREAD_CREATE",
        "value": 110
      },
      {
        "name": "THREAD_UPDATE",
        "value": 111
      },
      {
        "name": "THREAD_DELETE",
        "value": 112
      }
    ]
  },
  {
    "tree": [],
    "name": "Audit Log Events",
    "props": [
      {
        "name": "channel_id",
        "description": "channel in which the entities were targeted",
        "value": "snowflake"
      },
      {
        "name": "count",
        "description": "number of entities that were targeted",
        "value": "string"
      },
      {
        "name": "delete_member_days",
        "description": "number of days after which inactive members were kicked",
        "value": "string"
      },
      {
        "name": "id",
        "description": "id of the overwritten entity",
        "value": "snowflake"
      },
      {
        "name": "members_removed",
        "description": "number of members removed by the prune",
        "value": "string"
      },
      {
        "name": "message_id",
        "description": "id of the message that was targeted",
        "value": "snowflake"
      },
      {
        "name": "role_name",
        "description": "name of the role if type is \"0\" (not present if type is \"1\")",
        "value": "string"
      },
      {
        "name": "type",
        "description": "type of overwritten entity - \"0\" for \"role\" or \"1\" for \"member",
        "value": "string"
      }
    ]
  },
  {
    "tree": [],
    "name": "Channel Types",
    "props": [
      {
        "name": "AUTO",
        "description": "Discord chooses the quality for optimal performance",
        "value": 1
      },
      {
        "name": "FULL",
        "description": "720p",
        "value": 2
      }
    ]
  },
  {
    "tree": [],
    "name": "Message Activity Structure",
    "props": [
      {
        "name": "JOIN",
        "value": 1
      },
      {
        "name": "SPECTATE",
        "value": 2
      },
      {
        "name": "LISTEN",
        "value": 3
      },
      {
        "name": "JOIN_REQUEST",
        "value": 5
      }
    ]
  },
  {
    "tree": [],
    "name": "Message Activity Types",
    "props": [
      {
        "name": "CROSSPOSTED",
        "description": "this message has been published to subscribed channels (via Channel Following)",
        "value": 1
      },
      {
        "name": "IS_CROSSPOST",
        "description": "this message originated from a message in another channel (via Channel Following)",
        "value": 2
      },
      {
        "name": "SUPPRESS_EMBEDS",
        "description": "do not include any embeds when serializing this message",
        "value": 4
      },
      {
        "name": "SOURCE_MESSAGE_DELETED",
        "description": "the source message for this crosspost has been deleted (via Channel Following)",
        "value": 8
      },
      {
        "name": "URGENT",
        "description": "this message came from the urgent message system",
        "value": 16
      },
      {
        "name": "HAS_THREAD",
        "description": "this message has an associated thread, with the same id as the message",
        "value": 32
      },
      {
        "name": "EPHEMERAL",
        "description": "this message is only visible to the user who invoked the Interaction",
        "value": 64
      },
      {
        "name": "LOADING",
        "description": "this message is an Interaction Response and the bot is \"thinking",
        "value": 128
      },
      {
        "name": "FAILED_TO_MENTION_SOME_ROLES_IN_THREAD",
        "description": "this message failed to mention some roles and add their members to the thread",
        "value": 256
      }
    ]
  },
  {
    "tree": [],
    "name": "Channel Mention Structure",
    "description": "The allowed mention field allows for more granular control over mentions without various hacks to the message content. This will always validate against message content to avoid phantom pings (e.g. to ping everyone, you must still have @everyone in the message content), and check against user/bot permissions.",
    "props": [
      {
        "name": "Role Mentions",
        "description": "Controls role mentions",
        "value": "roles"
      },
      {
        "name": "User Mentions",
        "description": "Controls user mentions",
        "value": "users"
      },
      {
        "name": "Everyone Mentions",
        "description": "Controls @everyone and @here mentions",
        "value": "everyone"
      }
    ]
  },
  {
    "tree": [],
    "name": "Allowed Mention Types",
    "props": [
      {
        "name": "parse",
        "description": "An array of allowed mention types to parse from the content.",
        "value": "array of allowed mention types"
      },
      {
        "name": "roles",
        "description": "Array of role_ids to mention (Max size of 100)",
        "value": "list of snowflakes"
      },
      {
        "name": "users",
        "description": "Array of user_ids to mention (Max size of 100)",
        "value": "list of snowflakes"
      },
      {
        "name": "replied_user",
        "description": "For replies, whether to mention the author of the message being replied to (default false)",
        "value": "boolean"
      }
    ]
  },
  {
    "tree": [],
    "name": "Guild Structure",
    "description": "This field is deprecated and is replaced by channel.rtc_region",
    "props": [
      {
        "name": "ALL_MESSAGES",
        "description": "members will receive notifications for all messages by default",
        "value": 0
      },
      {
        "name": "ONLY_MENTIONS",
        "description": "members will receive notifications only for messages that @mention them by default",
        "value": 1
      }
    ]
  },
  {
    "tree": [],
    "name": "Default Message Notification Level",
    "props": [
      {
        "name": "DISABLED",
        "description": "media content will not be scanned",
        "value": 0
      },
      {
        "name": "MEMBERS_WITHOUT_ROLES",
        "description": "media content sent by members without roles will be scanned",
        "value": 1
      },
      {
        "name": "ALL_MEMBERS",
        "description": "media content sent by all members will be scanned",
        "value": 2
      }
    ]
  },
  {
    "tree": [],
    "name": "Explicit Content Filter Level",
    "props": [
      {
        "name": "NONE",
        "description": "guild has no MFA/2FA requirement for moderation actions",
        "value": 0
      },
      {
        "name": "ELEVATED",
        "description": "guild has a 2FA requirement for moderation actions",
        "value": 1
      }
    ]
  },
  {
    "tree": [],
    "name": "MFA Level",
    "props": [
      {
        "name": "NONE",
        "description": "unrestricted",
        "value": 0
      },
      {
        "name": "LOW",
        "description": "must have verified email on account",
        "value": 1
      },
      {
        "name": "MEDIUM",
        "description": "must be registered on Discord for longer than 5 minutes",
        "value": 2
      },
      {
        "name": "HIGH",
        "description": "must be a member of the server for longer than 10 minutes",
        "value": 3
      },
      {
        "name": "VERY_HIGH",
        "description": "must have a verified phone number",
        "value": 4
      }
    ]
  },
  {
    "tree": [],
    "name": "Verification Level",
    "props": [
      {
        "name": "DEFAULT",
        "value": 0
      },
      {
        "name": "EXPLICIT",
        "value": 1
      },
      {
        "name": "SAFE",
        "value": 2
      },
      {
        "name": "AGE_RESTRICTED",
        "value": 3
      }
    ]
  },
  {
    "tree": [],
    "name": "Guild NSFW Level",
    "props": [
      {
        "name": "NONE",
        "description": "guild has not unlocked any Server Boost perks",
        "value": 0
      },
      {
        "name": "TIER_1",
        "description": "guild has unlocked Server Boost level 1 perks",
        "value": 1
      },
      {
        "name": "TIER_2",
        "description": "guild has unlocked Server Boost level 2 perks",
        "value": 2
      },
      {
        "name": "TIER_3",
        "description": "guild has unlocked Server Boost level 3 perks",
        "value": 3
      }
    ]
  },
  {
    "tree": [],
    "name": "Premium Tier",
    "props": [
      {
        "name": "SUPPRESS_JOIN_NOTIFICATIONS",
        "description": "Suppress member join notifications",
        "value": 1
      },
      {
        "name": "SUPPRESS_PREMIUM_SUBSCRIPTIONS",
        "description": "Suppress server boost notifications",
        "value": 2
      },
      {
        "name": "SUPPRESS_GUILD_REMINDER_NOTIFICATIONS",
        "description": "Suppress server setup tips",
        "value": 4
      },
      {
        "name": "SUPPRESS_JOIN_NOTIFICATION_REPLIES",
        "description": "Hide member join sticker reply buttons",
        "value": 8
      }
    ]
  },
  {
    "tree": [],
    "name": "System Channel Flags",
    "props": [
      {
        "name": "ANIMATED_ICON",
        "description": "guild has access to set an animated guild icon",
        "value": "ANIMATED_ICON"
      },
      {
        "name": "BANNER",
        "description": "guild has access to set a guild banner image",
        "value": "BANNER"
      },
      {
        "name": "COMMERCE",
        "description": "guild has access to use commerce features (i.e. create store channels)",
        "value": "COMMERCE"
      },
      {
        "name": "COMMUNITY",
        "description": "guild can enable welcome screen, Membership Screening, stage channels and discovery, and receives community updates",
        "value": "COMMUNITY"
      },
      {
        "name": "DISCOVERABLE",
        "description": "guild is able to be discovered in the directory",
        "value": "DISCOVERABLE"
      },
      {
        "name": "FEATURABLE",
        "description": "guild is able to be featured in the directory",
        "value": "FEATURABLE"
      },
      {
        "name": "INVITE_SPLASH",
        "description": "guild has access to set an invite splash background",
        "value": "INVITE_SPLASH"
      },
      {
        "name": "MEMBER_VERIFICATION_GATE_ENABLED",
        "description": "guild has enabled Membership Screening",
        "value": "MEMBER_VERIFICATION_GATE_ENABLED"
      },
      {
        "name": "MONETIZATION_ENABLED",
        "description": "guild has enabled monetization",
        "value": "MONETIZATION_ENABLED"
      },
      {
        "name": "MORE_STICKERS",
        "description": "guild has increased custom sticker slots",
        "value": "MORE_STICKERS"
      },
      {
        "name": "NEWS",
        "description": "guild has access to create news channels",
        "value": "NEWS"
      },
      {
        "name": "PARTNERED",
        "description": "guild is partnered",
        "value": "PARTNERED"
      },
      {
        "name": "PREVIEW_ENABLED",
        "description": "guild can be previewed before joining via Membership Screening or the directory",
        "value": "PREVIEW_ENABLED"
      },
      {
        "name": "PRIVATE_THREADS",
        "description": "guild has access to create private threads",
        "value": "PRIVATE_THREADS"
      },
      {
        "name": "ROLE_ICONS",
        "description": "guild is able to set role icons",
        "value": "ROLE_ICONS"
      },
      {
        "name": "SEVEN_DAY_THREAD_ARCHIVE",
        "description": "guild has access to the seven day archive time for threads",
        "value": "SEVEN_DAY_THREAD_ARCHIVE"
      },
      {
        "name": "THREE_DAY_THREAD_ARCHIVE",
        "description": "guild has access to the three day archive time for threads",
        "value": "THREE_DAY_THREAD_ARCHIVE"
      },
      {
        "name": "TICKETED_EVENTS_ENABLED",
        "description": "guild has enabled ticketed events",
        "value": "TICKETED_EVENTS_ENABLED"
      },
      {
        "name": "VANITY_URL",
        "description": "guild has access to set a vanity URL",
        "value": "VANITY_URL"
      },
      {
        "name": "VERIFIED",
        "description": "guild is verified",
        "value": "VERIFIED"
      },
      {
        "name": "VIP_REGIONS",
        "description": "guild has access to set 384kbps bitrate in voice (previously VIP voice servers)",
        "value": "VIP_REGIONS"
      },
      {
        "name": "WELCOME_SCREEN_ENABLED",
        "description": "guild has enabled the welcome screen",
        "value": "WELCOME_SCREEN_ENABLED"
      }
    ]
  },
  {
    "tree": [],
    "name": "Integration Structure",
    "description": "These fields are not provided for discord bot integrations.",
    "props": [
      {
        "name": "Remove role",
        "value": 0
      },
      {
        "name": "Kick",
        "value": 1
      }
    ]
  },
  {
    "tree": [],
    "name": "Integration Expire Behaviors",
    "props": [
      {
        "name": "id",
        "description": "id of the account",
        "value": "string"
      },
      {
        "name": "name",
        "description": "name of the account",
        "value": "string"
      }
    ]
  },
  {
    "tree": [],
    "name": "Integration Account Structure",
    "props": [
      {
        "name": "id",
        "description": "the id of the app",
        "value": "snowflake"
      },
      {
        "name": "name",
        "description": "the name of the app",
        "value": "string"
      },
      {
        "name": "icon",
        "description": "the icon hash of the app",
        "value": "?string"
      },
      {
        "name": "description",
        "description": "the description of the app",
        "value": "string"
      },
      {
        "name": "summary",
        "description": "the summary of the app",
        "value": "string"
      },
      {
        "name": "bot?",
        "description": "the bot associated with this application",
        "value": "user object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Integration Application Structure",
    "props": [
      {
        "name": "reason",
        "description": "the reason for the ban",
        "value": "?string"
      },
      {
        "name": "user",
        "description": "the banned user",
        "value": "user object"
      }
    ]
  },
  {
    "tree": [],
    "name": "Query String Params",
    "props": [
      {
        "name": "shield",
        "description": "shield style widget with Discord icon and guild members online count",
        "value": "Example"
      },
      {
        "name": "banner1",
        "description": "large image with guild icon, name and online count. \"POWERED BY DISCORD\" as the footer of the widget",
        "value": "Example"
      },
      {
        "name": "banner2",
        "description": "smaller widget style with guild icon, name and online count. Split on the right with Discord logo",
        "value": "Example"
      },
      {
        "name": "banner3",
        "description": "large image with guild icon, name and online count. In the footer, Discord logo on the left and \"Chat Now\" on the right",
        "value": "Example"
      },
      {
        "name": "banner4",
        "description": "large Discord logo at the top of the widget. Guild icon, name and online count in the middle portion of the widget and a \"JOIN MY SERVER\" button at the bottom",
        "value": "Example"
      }
    ]
  },
  {
    "tree": [],
    "name": "Guild Scheduled Event Structure",
    "description": "See field requirements by entity type to understand the relationship between entity_type and the following fields: channel_id, entity_metadata, and scheduled_end_time",
    "props": [
      {
        "name": "GUILD_ONLY",
        "description": "the scheduled event is only accessible to guild members",
        "value": 2
      }
    ]
  },
  {
    "tree": [],
    "name": "Guild Scheduled Event Privacy Level",
    "props": [
      {
        "name": "STAGE_INSTANCE",
        "value": 1
      },
      {
        "name": "VOICE",
        "value": 2
      },
      {
        "name": "EXTERNAL",
        "value": 3
      }
    ]
  },
  {
    "tree": [],
    "name": "Field Requirements By Entity Type",
    "description": "entity_metadata with a non-null location must be provided",
    "props": [
      {
        "name": "SCHEDULED",
        "value": 1
      },
      {
        "name": "ACTIVE",
        "value": 2
      },
      {
        "name": "COMPLETED",
        "value": 3
      },
      {
        "name": "CANCELED",
        "value": 4
      }
    ]
  },
  {
    "tree": [],
    "name": "Invite Structure",
    "props": [
      {
        "name": "STREAM",
        "value": 1
      },
      {
        "name": "EMBEDDED_APPLICATION",
        "value": 2
      }
    ]
  },
  {
    "tree": [],
    "name": "Stage Instance Structure",
    "props": [
      {
        "name": "PUBLIC",
        "description": "The Stage instance is visible publicly. (deprecated)",
        "value": 1
      },
      {
        "name": "GUILD_ONLY",
        "description": "The Stage instance is visible to only guild members.",
        "value": 2
      }
    ]
  },
  {
    "tree": [],
    "name": "Sticker Structure",
    "description": "A comma separated list of keywords is the format used in this field by standard stickers, but this is just a convention. Incidentally the client will always use a name generated from an emoji as the value of this field when creating or modifying a guild sticker.",
    "props": [
      {
        "name": "STANDARD",
        "description": "an official sticker in a pack, part of Nitro or in a removed purchasable pack",
        "value": 1
      },
      {
        "name": "GUILD",
        "description": "a sticker uploaded to a Boosted guild for the guild's members",
        "value": 2
      }
    ]
  },
  {
    "tree": [],
    "name": "Sticker Types",
    "props": [
      {
        "name": "PNG",
        "value": 1
      },
      {
        "name": "APNG",
        "value": 2
      },
      {
        "name": "LOTTIE",
        "value": 3
      }
    ]
  },
  {
    "tree": [],
    "name": "Example User",
    "props": [
      {
        "name": "None",
        "description": "None",
        "value": 0
      },
      {
        "name": "STAFF",
        "description": "Discord Employee",
        "value": 1
      },
      {
        "name": "PARTNER",
        "description": "Partnered Server Owner",
        "value": 2
      },
      {
        "name": "HYPESQUAD",
        "description": "HypeSquad Events Coordinator",
        "value": 4
      },
      {
        "name": "BUG_HUNTER_LEVEL_1",
        "description": "Bug Hunter Level 1",
        "value": 8
      },
      {
        "name": "HYPESQUAD_ONLINE_HOUSE_1",
        "description": "House Bravery Member",
        "value": 64
      },
      {
        "name": "HYPESQUAD_ONLINE_HOUSE_2",
        "description": "House Brilliance Member",
        "value": 128
      },
      {
        "name": "HYPESQUAD_ONLINE_HOUSE_3",
        "description": "House Balance Member",
        "value": 256
      },
      {
        "name": "PREMIUM_EARLY_SUPPORTER",
        "description": "Early Nitro Supporter",
        "value": 512
      },
      {
        "name": "TEAM_PSEUDO_USER",
        "description": "User is a team",
        "value": 1024
      },
      {
        "name": "BUG_HUNTER_LEVEL_2",
        "description": "Bug Hunter Level 2",
        "value": 16384
      },
      {
        "name": "VERIFIED_BOT",
        "description": "Verified Bot",
        "value": 65536
      },
      {
        "name": "VERIFIED_DEVELOPER",
        "description": "Early Verified Bot Developer",
        "value": 131072
      },
      {
        "name": "CERTIFIED_MODERATOR",
        "description": "Discord Certified Moderator",
        "value": 262144
      },
      {
        "name": "BOT_HTTP_INTERACTIONS",
        "description": "Bot uses only HTTP interactions and is shown in the online member list",
        "value": 524288
      }
    ]
  },
  {
    "tree": [],
    "name": "Connection Structure",
    "props": [
      {
        "name": "None",
        "description": "invisible to everyone except the user themselves",
        "value": 0
      },
      {
        "name": "Everyone",
        "description": "visible to everyone",
        "value": 1
      }
    ]
  },
  {
    "tree": [],
    "name": "Webhook Structure",
    "props": [
      {
        "name": "Incoming",
        "description": "Incoming Webhooks can post messages to channels with a generated token",
        "value": 1
      },
      {
        "name": "Channel Follower",
        "description": "Channel Follower Webhooks are internal webhooks used with Channel Following to post new messages into channels",
        "value": 2
      },
      {
        "name": "Application",
        "description": "Application webhooks are webhooks used with Interactions",
        "value": 3
      }
    ]
  },
  {
    "tree": [],
    "name": "Model Object",
    "props": [
      {
        "name": "AUDIO_INPUT",
        "value": "audioinput"
      },
      {
        "name": "AUDIO_OUTPUT",
        "value": "audiooutput"
      },
      {
        "name": "VIDEO_INPUT",
        "value": "videoinput"
      }
    ]
  },
  {
    "tree": [],
    "name": "Gateway Commands",
    "description": "Events are payloads sent over the socket to a client that correspond to events in Discord.",
    "props": [
      {
        "name": "Hello",
        "description": "defines the heartbeat interval",
        "value": "Hello"
      },
      {
        "name": "Ready",
        "description": "contains the initial state information",
        "value": "Ready"
      },
      {
        "name": "Resumed",
        "description": "response to Resume",
        "value": "Resumed"
      },
      {
        "name": "Reconnect",
        "description": "server is going away, client should reconnect to gateway and resume",
        "value": "Reconnect"
      },
      {
        "name": "Invalid Session",
        "description": "failure response to Identify or Resume or invalid active session",
        "value": "Invalid Session"
      },
      {
        "name": "Channel Create",
        "description": "new guild channel created",
        "value": "Channel Create"
      },
      {
        "name": "Channel Update",
        "description": "channel was updated",
        "value": "Channel Update"
      },
      {
        "name": "Channel Delete",
        "description": "channel was deleted",
        "value": "Channel Delete"
      },
      {
        "name": "Channel Pins Update",
        "description": "message was pinned or unpinned",
        "value": "Channel Pins Update"
      },
      {
        "name": "Thread Create",
        "description": "thread created, also sent when being added to a private thread",
        "value": "Thread Create"
      },
      {
        "name": "Thread Update",
        "description": "thread was updated",
        "value": "Thread Update"
      },
      {
        "name": "Thread Delete",
        "description": "thread was deleted",
        "value": "Thread Delete"
      },
      {
        "name": "Thread List Sync",
        "description": "sent when gaining access to a channel, contains all active threads in that channel",
        "value": "Thread List Sync"
      },
      {
        "name": "Thread Member Update",
        "description": "thread member for the current user was updated",
        "value": "Thread Member Update"
      },
      {
        "name": "Thread Members Update",
        "description": "some user(s) were added to or removed from a thread",
        "value": "Thread Members Update"
      },
      {
        "name": "Guild Create",
        "description": "lazy-load for unavailable guild, guild became available, or user joined a new guild",
        "value": "Guild Create"
      },
      {
        "name": "Guild Update",
        "description": "guild was updated",
        "value": "Guild Update"
      },
      {
        "name": "Guild Delete",
        "description": "guild became unavailable, or user left/was removed from a guild",
        "value": "Guild Delete"
      },
      {
        "name": "Guild Ban Add",
        "description": "user was banned from a guild",
        "value": "Guild Ban Add"
      },
      {
        "name": "Guild Ban Remove",
        "description": "user was unbanned from a guild",
        "value": "Guild Ban Remove"
      },
      {
        "name": "Guild Emojis Update",
        "description": "guild emojis were updated",
        "value": "Guild Emojis Update"
      },
      {
        "name": "Guild Stickers Update",
        "description": "guild stickers were updated",
        "value": "Guild Stickers Update"
      },
      {
        "name": "Guild Integrations Update",
        "description": "guild integration was updated",
        "value": "Guild Integrations Update"
      },
      {
        "name": "Guild Member Add",
        "description": "new user joined a guild",
        "value": "Guild Member Add"
      },
      {
        "name": "Guild Member Remove",
        "description": "user was removed from a guild",
        "value": "Guild Member Remove"
      },
      {
        "name": "Guild Member Update",
        "description": "guild member was updated",
        "value": "Guild Member Update"
      },
      {
        "name": "Guild Members Chunk",
        "description": "response to Request Guild Members",
        "value": "Guild Members Chunk"
      },
      {
        "name": "Guild Role Create",
        "description": "guild role was created",
        "value": "Guild Role Create"
      },
      {
        "name": "Guild Role Update",
        "description": "guild role was updated",
        "value": "Guild Role Update"
      },
      {
        "name": "Guild Role Delete",
        "description": "guild role was deleted",
        "value": "Guild Role Delete"
      },
      {
        "name": "Guild Scheduled Event Create",
        "description": "guild scheduled event was created",
        "value": "Guild Scheduled Event Create"
      },
      {
        "name": "Guild Scheduled Event Update",
        "description": "guild scheduled event was updated",
        "value": "Guild Scheduled Event Update"
      },
      {
        "name": "Guild Scheduled Event Delete",
        "description": "guild scheduled event was deleted",
        "value": "Guild Scheduled Event Delete"
      },
      {
        "name": "Guild Scheduled Event User Add",
        "description": "user subscribed to a guild scheduled event",
        "value": "Guild Scheduled Event User Add"
      },
      {
        "name": "Guild Scheduled Event User Remove",
        "description": "user unsubscribed from a guild scheduled event",
        "value": "Guild Scheduled Event User Remove"
      },
      {
        "name": "Integration Create",
        "description": "guild integration was created",
        "value": "Integration Create"
      },
      {
        "name": "Integration Update",
        "description": "guild integration was updated",
        "value": "Integration Update"
      },
      {
        "name": "Integration Delete",
        "description": "guild integration was deleted",
        "value": "Integration Delete"
      },
      {
        "name": "Interaction Create",
        "description": "user used an interaction, such as an Application Command",
        "value": "Interaction Create"
      },
      {
        "name": "Invite Create",
        "description": "invite to a channel was created",
        "value": "Invite Create"
      },
      {
        "name": "Invite Delete",
        "description": "invite to a channel was deleted",
        "value": "Invite Delete"
      },
      {
        "name": "Message Create",
        "description": "message was created",
        "value": "Message Create"
      },
      {
        "name": "Message Update",
        "description": "message was edited",
        "value": "Message Update"
      },
      {
        "name": "Message Delete",
        "description": "message was deleted",
        "value": "Message Delete"
      },
      {
        "name": "Message Delete Bulk",
        "description": "multiple messages were deleted at once",
        "value": "Message Delete Bulk"
      },
      {
        "name": "Message Reaction Add",
        "description": "user reacted to a message",
        "value": "Message Reaction Add"
      },
      {
        "name": "Message Reaction Remove",
        "description": "user removed a reaction from a message",
        "value": "Message Reaction Remove"
      },
      {
        "name": "Message Reaction Remove All",
        "description": "all reactions were explicitly removed from a message",
        "value": "Message Reaction Remove All"
      },
      {
        "name": "Message Reaction Remove Emoji",
        "description": "all reactions for a given emoji were explicitly removed from a message",
        "value": "Message Reaction Remove Emoji"
      },
      {
        "name": "Presence Update",
        "description": "user was updated",
        "value": "Presence Update"
      },
      {
        "name": "Stage Instance Create",
        "description": "stage instance was created",
        "value": "Stage Instance Create"
      },
      {
        "name": "Stage Instance Delete",
        "description": "stage instance was deleted or closed",
        "value": "Stage Instance Delete"
      },
      {
        "name": "Stage Instance Update",
        "description": "stage instance was updated",
        "value": "Stage Instance Update"
      },
      {
        "name": "Typing Start",
        "description": "user started typing in a channel",
        "value": "Typing Start"
      },
      {
        "name": "User Update",
        "description": "properties about the user changed",
        "value": "User Update"
      },
      {
        "name": "Voice State Update",
        "description": "someone joined, left, or moved a voice channel",
        "value": "Voice State Update"
      },
      {
        "name": "Voice Server Update",
        "description": "guild's voice server was updated",
        "value": "Voice Server Update"
      },
      {
        "name": "Webhooks Update",
        "description": "guild channel webhook was created, update, or deleted",
        "value": "Webhooks Update"
      }
    ]
  },
  {
    "tree": [],
    "name": "Gateway Presence Update Structure",
    "props": [
      {
        "name": "online",
        "description": "Online",
        "value": "online"
      },
      {
        "name": "dnd",
        "description": "Do Not Disturb",
        "value": "dnd"
      },
      {
        "name": "idle",
        "description": "AFK",
        "value": "idle"
      },
      {
        "name": "invisible",
        "description": "Invisible and shown as offline",
        "value": "invisible"
      },
      {
        "name": "offline",
        "description": "Offline",
        "value": "offline"
      }
    ]
  },
  {
    "tree": [],
    "name": "Activity Structure",
    "props": [
      {
        "name": "Game",
        "value": 0
      },
      {
        "name": "Streaming",
        "value": 1
      },
      {
        "name": "Listening",
        "value": 2
      },
      {
        "name": "Watching",
        "value": 3
      },
      {
        "name": "Custom",
        "value": 4
      },
      {
        "name": "Competing",
        "value": 5
      }
    ]
  },
  {
    "tree": [],
    "name": "Activity Types",
    "props": [
      {
        "name": "start?",
        "description": "unix time (in milliseconds) of when the activity started",
        "value": "integer"
      },
      {
        "name": "end?",
        "description": "unix time (in milliseconds) of when the activity ends",
        "value": "integer"
      }
    ]
  },
  {
    "tree": [],
    "name": "Activity Timestamps",
    "props": [
      {
        "name": "name",
        "description": "the name of the emoji",
        "value": "string"
      },
      {
        "name": "id?",
        "description": "the id of the emoji",
        "value": "snowflake"
      },
      {
        "name": "animated?",
        "description": "whether this emoji is animated",
        "value": "boolean"
      }
    ]
  },
  {
    "tree": [],
    "name": "Activity Emoji",
    "props": [
      {
        "name": "id?",
        "description": "the id of the party",
        "value": "string"
      },
      {
        "name": "size?",
        "description": "used to show the party's current and maximum size",
        "value": "array of two integers"
      }
    ]
  },
  {
    "tree": [],
    "name": "Activity Party",
    "props": [
      {
        "name": "large_image?",
        "description": "see Activity Asset Image",
        "value": "string"
      },
      {
        "name": "large_text?",
        "description": "text displayed when hovering over the large image of the activity",
        "value": "string"
      },
      {
        "name": "small_image?",
        "description": "see Activity Asset Image",
        "value": "string"
      },
      {
        "name": "small_text?",
        "description": "text displayed when hovering over the small image of the activity",
        "value": "string"
      }
    ]
  },
  {
    "tree": [],
    "name": "Activity Secrets",
    "props": [
      {
        "name": "INSTANCE",
        "value": 1
      },
      {
        "name": "JOIN",
        "value": 2
      },
      {
        "name": "SPECTATE",
        "value": 4
      },
      {
        "name": "JOIN_REQUEST",
        "value": 8
      },
      {
        "name": "SYNC",
        "value": 16
      },
      {
        "name": "PLAY",
        "value": 32
      },
      {
        "name": "PARTY_PRIVACY_FRIENDS",
        "value": 64
      },
      {
        "name": "PARTY_PRIVACY_VOICE_CHANNEL",
        "value": 128
      },
      {
        "name": "EMBEDDED",
        "value": 256
      }
    ]
  },
  {
    "tree": [],
    "name": "Client Credentials Access Token Response",
    "description": "Bot authorization is a special server-less and callback-less OAuth2 flow that makes it easy for users to add bots to guilds. The URL you create looks similar to what we use for full stack implementation:",
    "props": [
      {
        "name": "client_id",
        "description": "your app's client id",
        "value": "client_id"
      },
      {
        "name": "scope",
        "description": "needs to include bot for the bot flow",
        "value": "scope"
      },
      {
        "name": "permissions",
        "description": "the permissions you're requesting",
        "value": "permissions"
      },
      {
        "name": "guild_id",
        "description": "pre-fills the dropdown picker with a guild for the user",
        "value": "guild_id"
      },
      {
        "name": "disable_guild_select",
        "description": "true or false—disallows the user from changing the guild dropdown",
        "value": "disable_guild_select"
      }
    ]
  },
  {
    "tree": [],
    "name": "Gateway Close Event Codes",
    "description": "Our voice gateways have their own set of opcodes and close codes.",
    "props": [
      {
        "name": "Identify",
        "description": "Begin a voice websocket connection.",
        "value": 0
      },
      {
        "name": "Select Protocol",
        "description": "Select the voice protocol.",
        "value": 1
      },
      {
        "name": "Ready",
        "description": "Complete the websocket handshake.",
        "value": 2
      },
      {
        "name": "Heartbeat",
        "description": "Keep the websocket connection alive.",
        "value": 3
      },
      {
        "name": "Session Description",
        "description": "Describe the session.",
        "value": 4
      },
      {
        "name": "Speaking",
        "description": "Indicate which users are speaking.",
        "value": 5
      },
      {
        "name": "Heartbeat ACK",
        "description": "Sent to acknowledge a received client heartbeat.",
        "value": 6
      },
      {
        "name": "Resume",
        "description": "Resume a connection.",
        "value": 7
      },
      {
        "name": "Hello",
        "description": "Time to wait between sending heartbeats in milliseconds.",
        "value": 8
      },
      {
        "name": "Resumed",
        "description": "Acknowledge a successful session resume.",
        "value": 9
      },
      {
        "name": "Client Disconnect",
        "description": "A client has disconnected from the voice channel",
        "value": 13
      }
    ]
  },
  {
    "tree": [],
    "name": "Voice Opcodes",
    "props": [
      {
        "name": "4001",
        "description": "You sent an invalid opcode.",
        "value": "Unknown opcode"
      },
      {
        "name": "4002",
        "description": "You sent a invalid payload in your identifying to the Gateway.",
        "value": "Failed to decode payload"
      },
      {
        "name": "4003",
        "description": "You sent a payload before identifying with the Gateway.",
        "value": "Not authenticated"
      },
      {
        "name": "4004",
        "description": "The token you sent in your identify payload is incorrect.",
        "value": "Authentication failed"
      },
      {
        "name": "4005",
        "description": "You sent more than one identify payload. Stahp.",
        "value": "Already authenticated"
      },
      {
        "name": "4006",
        "description": "Your session is no longer valid.",
        "value": "Session no longer valid"
      },
      {
        "name": "4009",
        "description": "Your session has timed out.",
        "value": "Session timeout"
      },
      {
        "name": "4011",
        "description": "We can't find the server you're trying to connect to.",
        "value": "Server not found"
      },
      {
        "name": "4012",
        "description": "We didn't recognize the protocol you sent.",
        "value": "Unknown protocol"
      },
      {
        "name": "4014",
        "description": "Channel was deleted, you were kicked, voice server changed, or the main gateway session was dropped. Should not reconnect.",
        "value": "Disconnected"
      },
      {
        "name": "4015",
        "description": "The server crashed. Our bad! Try resuming.",
        "value": "Voice server crashed"
      },
      {
        "name": "4016",
        "description": "We didn't recognize your encryption.",
        "value": "Unknown encryption mode"
      }
    ]
  },
  {
    "tree": [],
    "name": "Voice Close Event Codes",
    "description": "Our API will return semantically valid HTTP response codes based on the success of your request. The following table can be used as a reference for response codes it will return.",
    "props": [
      {
        "name": "200",
        "value": "The request completed successfully."
      },
      {
        "name": "201",
        "value": "The entity was created successfully."
      },
      {
        "name": "204",
        "value": "The request completed successfully but returned no content."
      },
      {
        "name": "304",
        "value": "The entity was not modified."
      },
      {
        "name": "400",
        "value": "The request was improperly formatted, or the server couldn't understand it."
      },
      {
        "name": "401",
        "value": "The Authorization header was missing or invalid."
      },
      {
        "name": "403",
        "value": "The Authorization token you passed did not have permission to the resource."
      },
      {
        "name": "404",
        "value": "The resource at the location specified doesn't exist."
      },
      {
        "name": "405",
        "value": "The HTTP method used is not valid for the location specified."
      },
      {
        "name": "429",
        "value": "You are being rate limited, see Rate Limits."
      },
      {
        "name": "502",
        "value": "There was not a gateway available to process your request. Wait a bit and retry."
      },
      {
        "name": "5xx",
        "value": "The server had an error processing your request."
      }
    ]
  },
  {
    "tree": [],
    "name": "HTTP Response Codes",
    "description": "Along with the HTTP error code, our API can also return more detailed error codes through a code key in the JSON error response. The response will also contain a message key containing a more friendly error string. Some of these errors may include additional details in the form of Error Messages provided by an errors object.",
    "props": [
      {
        "name": "0",
        "value": "General error"
      },
      {
        "name": "10001",
        "value": "Unknown account"
      },
      {
        "name": "10002",
        "value": "Unknown application"
      },
      {
        "name": "10003",
        "value": "Unknown channel"
      },
      {
        "name": "10004",
        "value": "Unknown guild"
      },
      {
        "name": "10005",
        "value": "Unknown integration"
      },
      {
        "name": "10006",
        "value": "Unknown invite"
      },
      {
        "name": "10007",
        "value": "Unknown member"
      },
      {
        "name": "10008",
        "value": "Unknown message"
      },
      {
        "name": "10009",
        "value": "Unknown permission overwrite"
      },
      {
        "name": "10010",
        "value": "Unknown provider"
      },
      {
        "name": "10011",
        "value": "Unknown role"
      },
      {
        "name": "10012",
        "value": "Unknown token"
      },
      {
        "name": "10013",
        "value": "Unknown user"
      },
      {
        "name": "10014",
        "value": "Unknown emoji"
      },
      {
        "name": "10015",
        "value": "Unknown webhook"
      },
      {
        "name": "10016",
        "value": "Unknown webhook service"
      },
      {
        "name": "10020",
        "value": "Unknown session"
      },
      {
        "name": "10026",
        "value": "Unknown ban"
      },
      {
        "name": "10027",
        "value": "Unknown SKU"
      },
      {
        "name": "10028",
        "value": "Unknown Store Listing"
      },
      {
        "name": "10029",
        "value": "Unknown entitlement"
      },
      {
        "name": "10030",
        "value": "Unknown build"
      },
      {
        "name": "10031",
        "value": "Unknown lobby"
      },
      {
        "name": "10032",
        "value": "Unknown branch"
      },
      {
        "name": "10033",
        "value": "Unknown store directory layout"
      },
      {
        "name": "10036",
        "value": "Unknown redistributable"
      },
      {
        "name": "10038",
        "value": "Unknown gift code"
      },
      {
        "name": "10049",
        "value": "Unknown stream"
      },
      {
        "name": "10050",
        "value": "Unknown premium server subscribe cooldown"
      },
      {
        "name": "10057",
        "value": "Unknown guild template"
      },
      {
        "name": "10059",
        "value": "Unknown discoverable server category"
      },
      {
        "name": "10060",
        "value": "Unknown sticker"
      },
      {
        "name": "10062",
        "value": "Unknown interaction"
      },
      {
        "name": "10063",
        "value": "Unknown application command"
      },
      {
        "name": "10066",
        "value": "Unknown application command permissions"
      },
      {
        "name": "10067",
        "value": "Unknown Stage Instance"
      },
      {
        "name": "10068",
        "value": "Unknown Guild Member Verification Form"
      },
      {
        "name": "10069",
        "value": "Unknown Guild Welcome Screen"
      },
      {
        "name": "10070",
        "value": "Unknown Guild Scheduled Event"
      },
      {
        "name": "10071",
        "value": "Unknown Guild Scheduled Event User"
      },
      {
        "name": "20001",
        "value": "Bots cannot use this endpoint"
      },
      {
        "name": "20002",
        "value": "Only bots can use this endpoint"
      },
      {
        "name": "20009",
        "value": "Explicit content cannot be sent to the desired recipient"
      },
      {
        "name": "20012",
        "value": "You are not authorized to perform this action on this application"
      },
      {
        "name": "20016",
        "value": "This action cannot be performed due to slowmode rate limit"
      },
      {
        "name": "20018",
        "value": "Only the owner of this account can perform this action"
      },
      {
        "name": "20022",
        "value": "This message cannot be edited due to announcement rate limits"
      },
      {
        "name": "20028",
        "value": "The channel you are writing has hit the write rate limit"
      },
      {
        "name": "20029",
        "value": "The write action you are performing on the server has hit the write rate limit"
      },
      {
        "name": "20031",
        "value": "Your Stage topic, server name, server description, or channel names contain words that are not allowed"
      },
      {
        "name": "20035",
        "value": "Guild premium subscription level too low"
      },
      {
        "name": "30001",
        "value": "Maximum number of guilds reached"
      },
      {
        "name": "30002",
        "value": "Maximum number of friends reached"
      },
      {
        "name": "30003",
        "value": "Maximum number of pins reached for the channel"
      },
      {
        "name": "30004",
        "value": "Maximum number of recipients reached"
      },
      {
        "name": "30005",
        "value": "Maximum number of guild roles reached"
      },
      {
        "name": "30007",
        "value": "Maximum number of webhooks reached"
      },
      {
        "name": "30008",
        "value": "Maximum number of emojis reached"
      },
      {
        "name": "30010",
        "value": "Maximum number of reactions reached"
      },
      {
        "name": "30013",
        "value": "Maximum number of guild channels reached"
      },
      {
        "name": "30015",
        "value": "Maximum number of attachments in a message reached"
      },
      {
        "name": "30016",
        "value": "Maximum number of invites reached"
      },
      {
        "name": "30018",
        "value": "Maximum number of animated emojis reached"
      },
      {
        "name": "30019",
        "value": "Maximum number of server members reached"
      },
      {
        "name": "30030",
        "value": "Maximum number of server categories has been reached"
      },
      {
        "name": "30031",
        "value": "Guild already has a template"
      },
      {
        "name": "30033",
        "value": "Max number of thread participants has been reached"
      },
      {
        "name": "30035",
        "value": "Maximum number of bans for non-guild members have been exceeded"
      },
      {
        "name": "30037",
        "value": "Maximum number of bans fetches has been reached"
      },
      {
        "name": "30038",
        "value": "Maximum number of uncompleted guild scheduled events reached"
      },
      {
        "name": "30039",
        "value": "Maximum number of stickers reached"
      },
      {
        "name": "30040",
        "value": "Maximum number of prune requests has been reached. Try again later"
      },
      {
        "name": "30042",
        "value": "Maximum number of guild widget settings updates has been reached. Try again later"
      },
      {
        "name": "30046",
        "value": "Maximum number of edits to messages older than 1 hour reached. Try again later"
      },
      {
        "name": "40001",
        "value": "Unauthorized. Provide a valid token and try again"
      },
      {
        "name": "40002",
        "value": "You need to verify your account in order to perform this action"
      },
      {
        "name": "40003",
        "value": "You are opening direct messages too fast"
      },
      {
        "name": "40004",
        "value": "Send messages has been temporarily disabled"
      },
      {
        "name": "40005",
        "value": "Request entity too large. Try sending something smaller in size"
      },
      {
        "name": "40006",
        "value": "This feature has been temporarily disabled server-side"
      },
      {
        "name": "40007",
        "value": "The user is banned from this guild"
      },
      {
        "name": "40032",
        "value": "Target user is not connected to voice"
      },
      {
        "name": "40033",
        "value": "This message has already been crossposted"
      },
      {
        "name": "40041",
        "value": "An application command with that name already exists"
      },
      {
        "name": "40060",
        "value": "Interaction has already been acknowledged"
      },
      {
        "name": "50001",
        "value": "Missing access"
      },
      {
        "name": "50002",
        "value": "Invalid account type"
      },
      {
        "name": "50003",
        "value": "Cannot execute action on a DM channel"
      },
      {
        "name": "50004",
        "value": "Guild widget disabled"
      },
      {
        "name": "50005",
        "value": "Cannot edit a message authored by another user"
      },
      {
        "name": "50006",
        "value": "Cannot send an empty message"
      },
      {
        "name": "50007",
        "value": "Cannot send messages to this user"
      },
      {
        "name": "50008",
        "value": "Cannot send messages in a voice channel"
      },
      {
        "name": "50009",
        "value": "Channel verification level is too high for you to gain access"
      },
      {
        "name": "50010",
        "value": "OAuth2 application does not have a bot"
      },
      {
        "name": "50011",
        "value": "OAuth2 application limit reached"
      },
      {
        "name": "50012",
        "value": "Invalid OAuth2 state"
      },
      {
        "name": "50013",
        "value": "You lack permissions to perform that action"
      },
      {
        "name": "50014",
        "value": "Invalid authentication token provided"
      },
      {
        "name": "50015",
        "value": "Note was too long"
      },
      {
        "name": "50016",
        "value": "Provided too few or too many messages to delete. Must provide at least 2 and fewer than 100 messages to delete"
      },
      {
        "name": "50019",
        "value": "A message can only be pinned to the channel it was sent in"
      },
      {
        "name": "50020",
        "value": "Invite code was either invalid or taken"
      },
      {
        "name": "50021",
        "value": "Cannot execute action on a system message"
      },
      {
        "name": "50024",
        "value": "Cannot execute action on this channel type"
      },
      {
        "name": "50025",
        "value": "Invalid OAuth2 access token provided"
      },
      {
        "name": "50026",
        "value": "Missing required OAuth2 scope"
      },
      {
        "name": "50027",
        "value": "Invalid webhook token provided"
      },
      {
        "name": "50028",
        "value": "Invalid role"
      },
      {
        "name": "50033",
        "value": "Invalid Recipient"
      },
      {
        "name": "50034",
        "value": "A message provided was too old to bulk delete"
      },
      {
        "name": "50035",
        "value": "Invalid form body, or invalid Content-Type provided"
      },
      {
        "name": "50036",
        "value": "An invite was accepted to a guild the application's bot is not in"
      },
      {
        "name": "50041",
        "value": "Invalid API version provided"
      },
      {
        "name": "50045",
        "value": "File uploaded exceeds the maximum size"
      },
      {
        "name": "50046",
        "value": "Invalid file uploaded"
      },
      {
        "name": "50054",
        "value": "Cannot self-redeem this gift"
      },
      {
        "name": "50055",
        "value": "Invalid Guild"
      },
      {
        "name": "50068",
        "value": "Invalid message type"
      },
      {
        "name": "50070",
        "value": "Payment source required to redeem gift"
      },
      {
        "name": "50074",
        "value": "Cannot delete a channel required for Community guilds"
      },
      {
        "name": "50081",
        "value": "Invalid sticker sent"
      },
      {
        "name": "50083",
        "value": "Tried to perform an operation on an archived thread, such as editing a message or adding a user to the thread"
      },
      {
        "name": "50084",
        "value": "Invalid thread notification settings"
      },
      {
        "name": "50085",
        "value": "before value is earlier than the thread creation date"
      },
      {
        "name": "50086",
        "value": "Community server channels must be text channels"
      },
      {
        "name": "50095",
        "value": "This server is not available in your location"
      },
      {
        "name": "50097",
        "value": "This server needs monetization enabled in order to perform this action"
      },
      {
        "name": "50101",
        "value": "This server needs more boosts to perform this action"
      },
      {
        "name": "50109",
        "value": "The request body contains invalid JSON."
      },
      {
        "name": "60003",
        "value": "Two factor is required for this operation"
      },
      {
        "name": "80004",
        "value": "No users with DiscordTag exist"
      },
      {
        "name": "90001",
        "value": "Reaction was blocked"
      },
      {
        "name": "130000",
        "value": "API resource is currently overloaded. Try again a little later"
      },
      {
        "name": "150006",
        "value": "The Stage is already open"
      },
      {
        "name": "160002",
        "value": "Cannot reply without permission to read message history"
      },
      {
        "name": "160004",
        "value": "A thread has already been created for this message"
      },
      {
        "name": "160005",
        "value": "Thread is locked"
      },
      {
        "name": "160006",
        "value": "Maximum number of active threads reached"
      },
      {
        "name": "160007",
        "value": "Maximum number of active announcement threads reached"
      },
      {
        "name": "170001",
        "value": "Invalid JSON for uploaded Lottie file"
      },
      {
        "name": "170002",
        "value": "Uploaded Lotties cannot contain rasterized images such as PNG or JPEG"
      },
      {
        "name": "170003",
        "value": "Sticker maximum framerate exceeded"
      },
      {
        "name": "170004",
        "value": "Sticker frame count exceeds maximum of 1000 frames"
      },
      {
        "name": "170005",
        "value": "Lottie animation maximum dimensions exceeded"
      },
      {
        "name": "170006",
        "value": "Sticker frame rate is either too small or too large"
      },
      {
        "name": "170007",
        "value": "Sticker animation duration exceeds maximum of 5 seconds"
      },
      {
        "name": "180000",
        "value": "Cannot update a finished event"
      },
      {
        "name": "180002",
        "value": "Failed to create stage needed for stage event"
      }
    ]
  },
  {
    "tree": [],
    "name": "Example JSON Error Response",
    "description": "RPC is the local Discord server running on localhost. Access to the RPC server requires approval from Discord.",
    "props": [
      {
        "name": "Unknown error",
        "description": "An unknown error occurred.",
        "value": 1000
      },
      {
        "name": "Invalid payload",
        "description": "You sent an invalid payload.",
        "value": 4000
      },
      {
        "name": "Invalid command",
        "description": "Invalid command name specified.",
        "value": 4002
      },
      {
        "name": "Invalid guild",
        "description": "Invalid guild ID specified.",
        "value": 4003
      },
      {
        "name": "Invalid event",
        "description": "Invalid event name specified.",
        "value": 4004
      },
      {
        "name": "Invalid channel",
        "description": "Invalid channel ID specified.",
        "value": 4005
      },
      {
        "name": "Invalid permissions",
        "description": "You lack permissions to access the given resource.",
        "value": 4006
      },
      {
        "name": "Invalid client ID",
        "description": "An invalid OAuth2 application ID was used to authorize or authenticate with.",
        "value": 4007
      },
      {
        "name": "Invalid origin",
        "description": "An invalid OAuth2 application origin was used to authorize or authenticate with.",
        "value": 4008
      },
      {
        "name": "Invalid token",
        "description": "An invalid OAuth2 token was used to authorize or authenticate with.",
        "value": 4009
      },
      {
        "name": "Invalid user",
        "description": "The specified user ID was invalid.",
        "value": 4010
      },
      {
        "name": "OAuth2 error",
        "description": "A standard OAuth2 error occurred; check the data object for the OAuth2 error details.",
        "value": 5000
      },
      {
        "name": "Select channel timed out",
        "description": "An asynchronous SELECT_TEXT_CHANNEL/SELECT_VOICE_CHANNEL command timed out.",
        "value": 5001
      },
      {
        "name": "GET_GUILD timed out",
        "description": "An asynchronous GET_GUILD command timed out.",
        "value": 5002
      },
      {
        "name": "Select voice force required",
        "description": "You tried to join a user to a voice channel but the user was already in one.",
        "value": 5003
      },
      {
        "name": "Capture shortcut already listening",
        "description": "You tried to capture more than one shortcut key at once.",
        "value": 5004
      }
    ]
  },
  {
    "tree": [],
    "name": "RPC Error Codes",
    "props": [
      {
        "name": "Invalid client ID",
        "description": "You connected to the RPC server with an invalid client ID.",
        "value": 4000
      },
      {
        "name": "Invalid origin",
        "description": "You connected to the RPC server with an invalid origin.",
        "value": 4001
      },
      {
        "name": "Rate limited",
        "description": "You are being rate limited.",
        "value": 4002
      },
      {
        "name": "Token revoked",
        "description": "The OAuth2 token associated with a connection was revoked, get a new one!",
        "value": 4003
      },
      {
        "name": "Invalid version",
        "description": "The RPC Server version specified in the connection string was not valid.",
        "value": 4004
      },
      {
        "name": "Invalid encoding",
        "description": "The encoding specified in the connection string was not valid.",
        "value": 4005
      }
    ]
  },
  {
    "tree": [],
    "name": "RPC Authenticate Example",
    "description": "Commands are requests made to the RPC socket by a client.",
    "props": [
      {
        "name": "DISPATCH",
        "description": "event dispatch",
        "value": "DISPATCH"
      },
      {
        "name": "AUTHORIZE",
        "description": "used to authorize a new client with your app",
        "value": "AUTHORIZE"
      },
      {
        "name": "AUTHENTICATE",
        "description": "used to authenticate an existing client with your app",
        "value": "AUTHENTICATE"
      },
      {
        "name": "GET_GUILD",
        "description": "used to retrieve guild information from the client",
        "value": "GET_GUILD"
      },
      {
        "name": "GET_GUILDS",
        "description": "used to retrieve a list of guilds from the client",
        "value": "GET_GUILDS"
      },
      {
        "name": "GET_CHANNEL",
        "description": "used to retrieve channel information from the client",
        "value": "GET_CHANNEL"
      },
      {
        "name": "GET_CHANNELS",
        "description": "used to retrieve a list of channels for a guild from the client",
        "value": "GET_CHANNELS"
      },
      {
        "name": "SUBSCRIBE",
        "description": "used to subscribe to an RPC event",
        "value": "SUBSCRIBE"
      },
      {
        "name": "UNSUBSCRIBE",
        "description": "used to unsubscribe from an RPC event",
        "value": "UNSUBSCRIBE"
      },
      {
        "name": "SET_USER_VOICE_SETTINGS",
        "description": "used to change voice settings of users in voice channels",
        "value": "SET_USER_VOICE_SETTINGS"
      },
      {
        "name": "SELECT_VOICE_CHANNEL",
        "description": "used to join or leave a voice channel, group dm, or dm",
        "value": "SELECT_VOICE_CHANNEL"
      },
      {
        "name": "GET_SELECTED_VOICE_CHANNEL",
        "description": "used to get the current voice channel the client is in",
        "value": "GET_SELECTED_VOICE_CHANNEL"
      },
      {
        "name": "SELECT_TEXT_CHANNEL",
        "description": "used to join or leave a text channel, group dm, or dm",
        "value": "SELECT_TEXT_CHANNEL"
      },
      {
        "name": "GET_VOICE_SETTINGS",
        "description": "used to retrieve the client's voice settings",
        "value": "GET_VOICE_SETTINGS"
      },
      {
        "name": "SET_VOICE_SETTINGS",
        "description": "used to set the client's voice settings",
        "value": "SET_VOICE_SETTINGS"
      },
      {
        "name": "SET_CERTIFIED_DEVICES",
        "description": "used to send info about certified hardware devices",
        "value": "SET_CERTIFIED_DEVICES"
      },
      {
        "name": "SET_ACTIVITY",
        "description": "used to update a user's Rich Presence",
        "value": "SET_ACTIVITY"
      },
      {
        "name": "SEND_ACTIVITY_JOIN_INVITE",
        "description": "used to consent to a Rich Presence Ask to Join request",
        "value": "SEND_ACTIVITY_JOIN_INVITE"
      },
      {
        "name": "CLOSE_ACTIVITY_REQUEST",
        "description": "used to reject a Rich Presence Ask to Join request",
        "value": "CLOSE_ACTIVITY_REQUEST"
      }
    ]
  },
  {
    "tree": [],
    "name": "RPC Commands",
    "description": "Events are payloads sent over the socket to a client that correspond to events in Discord.",
    "props": [
      {
        "name": "READY",
        "description": "non-subscription event sent immediately after connecting, contains server information",
        "value": "READY"
      },
      {
        "name": "ERROR",
        "description": "non-subscription event sent when there is an error, including command responses",
        "value": "ERROR"
      },
      {
        "name": "GUILD_STATUS",
        "description": "sent when a subscribed server's state changes",
        "value": "GUILD_STATUS"
      },
      {
        "name": "GUILD_CREATE",
        "description": "sent when a guild is created/joined on the client",
        "value": "GUILD_CREATE"
      },
      {
        "name": "CHANNEL_CREATE",
        "description": "sent when a channel is created/joined on the client",
        "value": "CHANNEL_CREATE"
      },
      {
        "name": "VOICE_CHANNEL_SELECT",
        "description": "sent when the client joins a voice channel",
        "value": "VOICE_CHANNEL_SELECT"
      },
      {
        "name": "VOICE_STATE_CREATE",
        "description": "sent when a user joins a subscribed voice channel",
        "value": "VOICE_STATE_CREATE"
      },
      {
        "name": "VOICE_STATE_UPDATE",
        "description": "sent when a user's voice state changes in a subscribed voice channel (mute, volume, etc.)",
        "value": "VOICE_STATE_UPDATE"
      },
      {
        "name": "VOICE_STATE_DELETE",
        "description": "sent when a user parts a subscribed voice channel",
        "value": "VOICE_STATE_DELETE"
      },
      {
        "name": "VOICE_SETTINGS_UPDATE",
        "description": "sent when the client's voice settings update",
        "value": "VOICE_SETTINGS_UPDATE"
      },
      {
        "name": "VOICE_CONNECTION_STATUS",
        "description": "sent when the client's voice connection status changes",
        "value": "VOICE_CONNECTION_STATUS"
      },
      {
        "name": "SPEAKING_START",
        "description": "sent when a user in a subscribed voice channel speaks",
        "value": "SPEAKING_START"
      },
      {
        "name": "SPEAKING_STOP",
        "description": "sent when a user in a subscribed voice channel stops speaking",
        "value": "SPEAKING_STOP"
      },
      {
        "name": "MESSAGE_CREATE",
        "description": "sent when a message is created in a subscribed text channel",
        "value": "MESSAGE_CREATE"
      },
      {
        "name": "MESSAGE_UPDATE",
        "description": "sent when a message is updated in a subscribed text channel",
        "value": "MESSAGE_UPDATE"
      },
      {
        "name": "MESSAGE_DELETE",
        "description": "sent when a message is deleted in a subscribed text channel",
        "value": "MESSAGE_DELETE"
      },
      {
        "name": "NOTIFICATION_CREATE",
        "description": "sent when the client receives a notification (mention or new message in eligible channels)",
        "value": "NOTIFICATION_CREATE"
      },
      {
        "name": "ACTIVITY_JOIN",
        "description": "sent when the user clicks a Rich Presence join invite in chat to join a game",
        "value": "ACTIVITY_JOIN"
      },
      {
        "name": "ACTIVITY_SPECTATE",
        "description": "sent when the user clicks a Rich Presence spectate invite in chat to spectate a game",
        "value": "ACTIVITY_SPECTATE"
      },
      {
        "name": "ACTIVITY_JOIN_REQUEST",
        "description": "sent when the user receives a Rich Presence Ask to Join request",
        "value": "ACTIVITY_JOIN_REQUEST"
      }
    ]
  },
  {
    "tree": [],
    "name": "Shortcut Key Combo Object",
    "props": [
      {
        "name": "KEYBOARD_KEY",
        "value": 0
      },
      {
        "name": "MOUSE_BUTTON",
        "value": 1
      },
      {
        "name": "KEYBOARD_MODIFIER_KEY",
        "value": 2
      },
      {
        "name": "GAMEPAD_BUTTON",
        "value": 3
      }
    ]
  },
  {
    "tree": [],
    "name": "Model Object",
    "props": [
      {
        "name": "AUDIO_INPUT",
        "value": "audioinput"
      },
      {
        "name": "AUDIO_OUTPUT",
        "value": "audiooutput"
      },
      {
        "name": "VIDEO_INPUT",
        "value": "videoinput"
      }
    ]
  },
  {
    "tree": [],
    "name": "Voice Connection Status Dispatch Data Structure",
    "props": [
      {
        "name": "DISCONNECTED",
        "description": "TCP disconnected",
        "value": "DISCONNECTED"
      },
      {
        "name": "AWAITING_ENDPOINT",
        "description": "Waiting for voice endpoint",
        "value": "AWAITING_ENDPOINT"
      },
      {
        "name": "AUTHENTICATING",
        "description": "TCP authenticating",
        "value": "AUTHENTICATING"
      },
      {
        "name": "CONNECTING",
        "description": "TCP connecting",
        "value": "CONNECTING"
      },
      {
        "name": "CONNECTED",
        "description": "TCP connected",
        "value": "CONNECTED"
      },
      {
        "name": "VOICE_DISCONNECTED",
        "description": "TCP connected, Voice disconnected",
        "value": "VOICE_DISCONNECTED"
      },
      {
        "name": "VOICE_CONNECTING",
        "description": "TCP connected, Voice connecting",
        "value": "VOICE_CONNECTING"
      },
      {
        "name": "VOICE_CONNECTED",
        "description": "TCP connected, Voice connected",
        "value": "VOICE_CONNECTED"
      },
      {
        "name": "NO_ROUTE",
        "description": "No route to host",
        "value": "NO_ROUTE"
      },
      {
        "name": "ICE_CHECKING",
        "description": "WebRTC ice checking",
        "value": "ICE_CHECKING"
      }
    ]
  },
  {
    "tree": [],
    "name": "Team Member Object",
    "props": [
      {
        "name": "INVITED",
        "value": 1
      },
      {
        "name": "ACCEPTED",
        "value": 2
      }
    ]
  },
  {
    "tree": [],
    "name": "Example Select Protocol Payload",
    "props": [
      {
        "name": "Normal",
        "value": "xsalsa20_poly1305"
      },
      {
        "name": "Suffix",
        "value": "xsalsa20_poly1305_suffix"
      },
      {
        "name": "Lite",
        "value": "xsalsa20_poly1305_lite"
      }
    ]
  },
  {
    "tree": [],
    "name": "Voice Packet Structure",
    "description": "The following flags can be used as a bitwise mask. For example 5 would be priority and voice.",
    "props": [
      {
        "name": "Microphone",
        "value": 1
      },
      {
        "name": "Soundshare",
        "value": 2
      },
      {
        "name": "Priority",
        "value": 4
      }
    ]
  }
]