[
  {
    "name": "Create Webhook",
    "method": "POST",
    "path": "/channels/{channel.id}/webhooks",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      }
    ],
    "description": "Create a new webhook. Requires the MANAGE_WEBHOOKS permission. Returns a webhook object on success. Webhook names follow our naming restrictions that can be found in our Usernames and Nicknames documentation, with the following additional stipulations:",
    "response": {
      "array": false,
      "partial": false,
      "deprecated": false,
      "type": "reference",
      "link": "webhook-object"
    },
    "request": {
      "json": true,
      "form": false,
      "type": "structure",
      "properties": [
        {
          "name": "name",
          "description": "name of the webhook (1-80 characters)",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "value",
            "value": "string"
          },
          "optional": false,
          "nullable": false
        },
        {
          "name": "avatar",
          "description": "image for the default webhook avatar",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "reference",
            "link": "image-data"
          },
          "optional": true,
          "nullable": true
        }
      ]
    },
    "tree": [
      "webhook-object-example-channel-follower-webhook",
      "webhook-object-example-application-webhook",
      "create-webhook",
      "create-webhook-json-params",
      "get-channel-webhooks"
    ]
  },
  {
    "name": "Get Channel Webhooks",
    "method": "GET",
    "path": "/channels/{channel.id}/webhooks",
    "params": [
      {
        "name": "channel.id",
        "link": "DOCS_RESOURCES_CHANNEL/channel-object"
      }
    ],
    "description": "Returns a list of channel webhook objects. Requires the MANAGE_WEBHOOKS permission.",
    "response": {
      "array": true,
      "partial": false,
      "deprecated": false,
      "type": "reference",
      "link": "webhook-object"
    },
    "tree": [
      "get-guild-webhooks"
    ]
  },
  {
    "name": "Get Guild Webhooks",
    "method": "GET",
    "path": "/guilds/{guild.id}/webhooks",
    "params": [
      {
        "name": "guild.id",
        "link": "DOCS_RESOURCES_GUILD/guild-object"
      }
    ],
    "description": "Returns a list of guild webhook objects. Requires the MANAGE_WEBHOOKS permission.",
    "response": {
      "array": true,
      "partial": false,
      "deprecated": false,
      "type": "reference",
      "link": "webhook-object"
    },
    "tree": [
      "get-webhook"
    ]
  },
  {
    "name": "Get Webhook",
    "method": "GET",
    "path": "/webhooks/{webhook.id}",
    "params": [
      {
        "name": "webhook.id",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      }
    ],
    "description": "Returns the new webhook object for the given id.",
    "response": {
      "array": false,
      "partial": false,
      "deprecated": false,
      "type": "reference",
      "link": "webhook-object"
    },
    "tree": [
      "get-webhook-with-token"
    ]
  },
  {
    "name": "Get Webhook with Token",
    "method": "GET",
    "path": "/webhooks/{webhook.id}/{webhook.token}",
    "params": [
      {
        "name": "webhook.id",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      },
      {
        "name": "webhook.token",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      }
    ],
    "description": "Same as above, except this call does not require authentication and returns no user in the webhook object.",
    "tree": [
      "modify-webhook"
    ]
  },
  {
    "name": "Modify Webhook",
    "method": "PATCH",
    "path": "/webhooks/{webhook.id}",
    "params": [
      {
        "name": "webhook.id",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      }
    ],
    "description": "Modify a webhook. Requires the MANAGE_WEBHOOKS permission. Returns the updated webhook object on success.",
    "response": {
      "array": false,
      "partial": false,
      "deprecated": false,
      "type": "reference",
      "link": "webhook-object"
    },
    "request": {
      "json": true,
      "form": false,
      "type": "structure",
      "properties": [
        {
          "name": "name",
          "description": "the default name of the webhook",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "value",
            "value": "string"
          },
          "optional": false,
          "nullable": false
        },
        {
          "name": "avatar",
          "description": "image for the default webhook avatar",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "reference",
            "link": "image-data"
          },
          "optional": false,
          "nullable": true
        },
        {
          "name": "channel_id",
          "description": "the new channel id this webhook should be moved to",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "value",
            "value": "snowflake"
          },
          "optional": false,
          "nullable": false
        }
      ]
    },
    "tree": [
      "modify-webhook-json-params",
      "modify-webhook-with-token"
    ]
  },
  {
    "name": "Modify Webhook with Token",
    "method": "PATCH",
    "path": "/webhooks/{webhook.id}/{webhook.token}",
    "params": [
      {
        "name": "webhook.id",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      },
      {
        "name": "webhook.token",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      }
    ],
    "description": "Same as above, except this call does not require authentication, does not accept a channel_id parameter in the body, and does not return a user in the webhook object.",
    "tree": [
      "delete-webhook"
    ]
  },
  {
    "name": "Delete Webhook",
    "method": "DELETE",
    "path": "/webhooks/{webhook.id}",
    "params": [
      {
        "name": "webhook.id",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      }
    ],
    "description": "Delete a webhook permanently. Requires the MANAGE_WEBHOOKS permission. Returns a 204 No Content response on success.",
    "tree": [
      "delete-webhook-with-token"
    ]
  },
  {
    "name": "Delete Webhook with Token",
    "method": "DELETE",
    "path": "/webhooks/{webhook.id}/{webhook.token}",
    "params": [
      {
        "name": "webhook.id",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      },
      {
        "name": "webhook.token",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      }
    ],
    "description": "Same as above, except this call does not require authentication.",
    "tree": [
      "execute-webhook"
    ]
  },
  {
    "name": "Execute Webhook",
    "method": "POST",
    "path": "/webhooks/{webhook.id}/{webhook.token}",
    "params": [
      {
        "name": "webhook.id",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      },
      {
        "name": "webhook.token",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      }
    ],
    "description": "Refer to Uploading Files for details on attachments and multipart/form-data requests.",
    "query": {
      "type": "structure",
      "properties": [
        {
          "name": "wait",
          "description": "waits for server confirmation of message send before response, and returns the created message body (defaults to false ; when false a message that is not saved does not return an error)",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "value",
            "value": "boolean"
          },
          "optional": true,
          "nullable": false
        },
        {
          "name": "thread_id",
          "description": "Send a message to the specified thread within a webhook's channel. The thread will automatically be unarchived.",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "value",
            "value": "snowflake"
          },
          "optional": true,
          "nullable": false
        }
      ]
    },
    "request": {
      "json": true,
      "form": true,
      "type": "structure",
      "properties": [
        {
          "name": "content",
          "description": "the message contents (up to 2000 characters)",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "value",
            "value": "string"
          },
          "optional": true,
          "nullable": false
        },
        {
          "name": "username",
          "description": "override the default username of the webhook",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "value",
            "value": "string"
          },
          "optional": true,
          "nullable": false
        },
        {
          "name": "avatar_url",
          "description": "override the default avatar of the webhook",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "value",
            "value": "string"
          },
          "optional": true,
          "nullable": false
        },
        {
          "name": "tts",
          "description": "true if this is a TTS message",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "value",
            "value": "boolean"
          },
          "optional": true,
          "nullable": false
        },
        {
          "name": "embeds",
          "description": "embedded rich content",
          "type": {
            "array": true,
            "partial": false,
            "deprecated": false,
            "type": "reference",
            "link": "embed-object"
          },
          "optional": true,
          "nullable": false
        },
        {
          "name": "allowed_mentions",
          "description": "allowed mentions for the message",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "reference",
            "link": "allowed-mentions-object"
          },
          "optional": true,
          "nullable": false
        },
        {
          "name": "components",
          "description": "the components to include with the message",
          "type": {
            "array": true,
            "partial": false,
            "deprecated": false,
            "type": "reference",
            "link": "component-object"
          },
          "optional": true,
          "nullable": false
        },
        {
          "name": "files",
          "description": "the contents of the file being sent",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "value",
            "value": "any"
          },
          "optional": true,
          "nullable": false
        },
        {
          "name": "payload_json",
          "description": "JSON encoded body of non-file params",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "value",
            "value": "string"
          },
          "optional": true,
          "nullable": false
        },
        {
          "name": "attachments",
          "description": "attachment objects with filename and description",
          "type": {
            "array": true,
            "partial": true,
            "deprecated": false,
            "type": "reference",
            "link": "attachment-object"
          },
          "optional": true,
          "nullable": false
        },
        {
          "name": "flags",
          "description": "message flags combined as a bitfield (only SUPPRESS_EMBEDS can be set)",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "reference",
            "link": "message-object-message-flags"
          },
          "optional": true,
          "nullable": false
        }
      ]
    },
    "tree": [
      "execute-webhook-query-string-params",
      "execute-webhook-json/form-params",
      "execute-slack-compatible-webhook"
    ]
  },
  {
    "name": "Execute Slack-Compatible Webhook",
    "method": "POST",
    "path": "/webhooks/{webhook.id}/{webhook.token}/slack",
    "params": [
      {
        "name": "webhook.id",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      },
      {
        "name": "webhook.token",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      }
    ],
    "description": "Refer to Slack's documentation for more information. We do not support Slack's channel , icon_emoji , mrkdwn , or mrkdwn_in properties.",
    "query": {
      "type": "structure",
      "properties": [
        {
          "name": "thread_id",
          "description": "id of the thread to send the message in",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "value",
            "value": "snowflake"
          },
          "optional": true,
          "nullable": false
        },
        {
          "name": "wait",
          "description": "waits for server confirmation of message send before response (defaults to true ; when false a message that is not saved does not return an error)",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "value",
            "value": "boolean"
          },
          "optional": true,
          "nullable": false
        }
      ]
    },
    "tree": [
      "execute-slack-compatible-webhook-query-string-params",
      "execute-github-compatible-webhook"
    ]
  },
  {
    "name": "Execute GitHub-Compatible Webhook",
    "method": "POST",
    "path": "/webhooks/{webhook.id}/{webhook.token}/github",
    "params": [
      {
        "name": "webhook.id",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      },
      {
        "name": "webhook.token",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      }
    ],
    "description": "Add a new webhook to your GitHub repo (in the repo's settings), and use this endpoint as the \"Payload URL.\" You can choose what events your Discord channel receives by choosing the \"Let me select individual events\" option and selecting individual events for the new webhook you're configuring.",
    "query": {
      "type": "structure",
      "properties": [
        {
          "name": "thread_id",
          "description": "id of the thread to send the message in",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "value",
            "value": "snowflake"
          },
          "optional": true,
          "nullable": false
        },
        {
          "name": "wait",
          "description": "waits for server confirmation of message send before response (defaults to true ; when false a message that is not saved does not return an error)",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "value",
            "value": "boolean"
          },
          "optional": true,
          "nullable": false
        }
      ]
    },
    "tree": [
      "execute-github-compatible-webhook-query-string-params",
      "get-webhook-message"
    ]
  },
  {
    "name": "Get Webhook Message",
    "method": "GET",
    "path": "/webhooks/{webhook.id}/{webhook.token}/messages/{message.id}",
    "params": [
      {
        "name": "webhook.id",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      },
      {
        "name": "webhook.token",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      },
      {
        "name": "message.id",
        "link": "DOCS_RESOURCES_CHANNEL/message-object"
      }
    ],
    "description": "Returns a previously-sent webhook message from the same token. Returns a message object on success.",
    "query": {
      "type": "structure",
      "properties": [
        {
          "name": "thread_id",
          "description": "id of the thread the message is in",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "value",
            "value": "snowflake"
          },
          "optional": true,
          "nullable": false
        }
      ]
    },
    "tree": [
      "get-webhook-message-query-string-params",
      "edit-webhook-message"
    ]
  },
  {
    "name": "Edit Webhook Message",
    "method": "PATCH",
    "path": "/webhooks/{webhook.id}/{webhook.token}/messages/{message.id}",
    "params": [
      {
        "name": "webhook.id",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      },
      {
        "name": "webhook.token",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      },
      {
        "name": "message.id",
        "link": "DOCS_RESOURCES_CHANNEL/message-object"
      }
    ],
    "description": "Edits a previously-sent webhook message from the same token. Returns a message object on success.",
    "response": {
      "array": false,
      "partial": false,
      "deprecated": false,
      "type": "reference",
      "link": "message-object"
    },
    "query": {
      "type": "structure",
      "properties": [
        {
          "name": "thread_id",
          "description": "id of the thread the message is in",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "value",
            "value": "snowflake"
          },
          "optional": true,
          "nullable": false
        }
      ]
    },
    "request": {
      "json": true,
      "form": true,
      "type": "structure",
      "properties": [
        {
          "name": "content",
          "description": "the message contents (up to 2000 characters)",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "value",
            "value": "string"
          },
          "optional": false,
          "nullable": false
        },
        {
          "name": "embeds",
          "description": "embedded rich content",
          "type": {
            "array": true,
            "partial": false,
            "deprecated": false,
            "type": "reference",
            "link": "embed-object"
          },
          "optional": false,
          "nullable": false
        },
        {
          "name": "allowed_mentions",
          "description": "allowed mentions for the message",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "reference",
            "link": "allowed-mentions-object"
          },
          "optional": false,
          "nullable": false
        },
        {
          "name": "components",
          "description": "the components to include with the message",
          "type": {
            "array": true,
            "partial": false,
            "deprecated": false,
            "type": "reference",
            "link": "component-object"
          },
          "optional": false,
          "nullable": false
        },
        {
          "name": "files",
          "description": "the contents of the file being sent/edited",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "value",
            "value": "any"
          },
          "optional": false,
          "nullable": false
        },
        {
          "name": "payload_json",
          "description": "JSON encoded body of non-file params (multipart/form-data only)",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "value",
            "value": "string"
          },
          "optional": false,
          "nullable": false
        },
        {
          "name": "attachments",
          "description": "attached files to keep and possible descriptions for new files",
          "type": {
            "array": true,
            "partial": true,
            "deprecated": false,
            "type": "reference",
            "link": "attachment-object"
          },
          "optional": false,
          "nullable": false
        }
      ]
    },
    "tree": [
      "edit-webhook-message-query-string-params",
      "edit-webhook-message-json/form-params",
      "delete-webhook-message"
    ]
  },
  {
    "name": "Delete Webhook Message",
    "method": "DELETE",
    "path": "/webhooks/{webhook.id}/{webhook.token}/messages/{message.id}",
    "params": [
      {
        "name": "webhook.id",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      },
      {
        "name": "webhook.token",
        "link": "DOCS_RESOURCES_WEBHOOK/webhook-object"
      },
      {
        "name": "message.id",
        "link": "DOCS_RESOURCES_CHANNEL/message-object"
      }
    ],
    "description": "Deletes a message that was created by the webhook. Returns a 204 No Content response on success.",
    "query": {
      "type": "structure",
      "properties": [
        {
          "name": "thread_id",
          "description": "id of the thread the message is in",
          "type": {
            "array": false,
            "partial": false,
            "deprecated": false,
            "type": "value",
            "value": "snowflake"
          },
          "optional": true,
          "nullable": false
        }
      ]
    }
  }
]