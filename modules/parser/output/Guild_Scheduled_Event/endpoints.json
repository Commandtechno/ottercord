[
  {
    "name": "List Scheduled Events for Guild",
    "method": "GET",
    "path": "/guilds/{guild.id}/scheduled-events",
    "params": [
      {
        "name": "guild.id",
        "anchor": "guild-structure"
      }
    ],
    "query": [
      {
        "type": "boolean",
        "name": "with_user_count?",
        "description": "include number of users subscribed to each event",
        "required": false
      }
    ],
    "response": {
      "reference": true,
      "partial": false,
      "optional": false,
      "nullable": false,
      "array": true,
      "value": "guild-scheduled-event-structure"
    }
  },
  {
    "name": "Create Guild Scheduled Event",
    "method": "POST",
    "path": "/guilds/{guild.id}/scheduled-events",
    "params": [
      {
        "name": "guild.id",
        "anchor": "guild-structure"
      }
    ],
    "query": [],
    "response": {
      "reference": true,
      "partial": false,
      "optional": false,
      "nullable": false,
      "array": false,
      "value": "guild-scheduled-event-structure"
    },
    "description": "\\* Optional for events with `'entity_type': EXTERNAL`"
  },
  {
    "name": "Get Guild Scheduled Event",
    "method": "GET",
    "path": "/guilds/{guild.id}/scheduled-events/{guild_scheduled_event.id}",
    "params": [
      {
        "name": "guild.id",
        "anchor": "guild-structure"
      },
      {
        "name": "guild_scheduled_event.id",
        "anchor": "guild-scheduled-event-structure"
      }
    ],
    "query": [
      {
        "type": "boolean",
        "name": "with_user_count?",
        "description": "include number of users subscribed to this event",
        "required": false
      }
    ],
    "response": {
      "reference": true,
      "partial": false,
      "optional": false,
      "nullable": false,
      "array": false,
      "value": "guild-scheduled-event-structure"
    }
  },
  {
    "name": "Modify Guild Scheduled Event",
    "method": "PATCH",
    "path": "/guilds/{guild.id}/scheduled-events/{guild_scheduled_event.id}",
    "params": [
      {
        "name": "guild.id",
        "anchor": "guild-structure"
      },
      {
        "name": "guild_scheduled_event.id",
        "anchor": "guild-scheduled-event-structure"
      }
    ],
    "query": [],
    "response": {
      "reference": true,
      "partial": false,
      "optional": false,
      "nullable": false,
      "array": false,
      "value": "guild-scheduled-event-structure"
    },
    "description": "\\* If updating `entity_type` to `EXTERNAL`:"
  },
  {
    "name": "Delete Guild Scheduled Event",
    "method": "DELETE",
    "path": "/guilds/{guild.id}/scheduled-events/{guild_scheduled_event.id}",
    "params": [
      {
        "name": "guild.id",
        "anchor": "guild-structure"
      },
      {
        "name": "guild_scheduled_event.id",
        "anchor": "guild-scheduled-event-structure"
      }
    ],
    "query": [],
    "description": "Delete a guild scheduled event. Returns a `204` on success.",
    "response": [
      {
        "partial": false,
        "optional": true,
        "nullable": false,
        "array": false,
        "reference": false,
        "value": [
          "number"
        ],
        "name": "limit",
        "description": "number of users to return (up to maximum 100)"
      },
      {
        "partial": false,
        "optional": true,
        "nullable": false,
        "array": false,
        "reference": false,
        "value": [
          "boolean"
        ],
        "name": "with_member",
        "description": "include guild member data if it exists"
      },
      {
        "partial": false,
        "optional": false,
        "nullable": false,
        "array": false,
        "reference": false,
        "value": [
          "snowflake"
        ],
        "name": "before? *",
        "description": "consider only users before given user id"
      },
      {
        "partial": false,
        "optional": false,
        "nullable": false,
        "array": false,
        "reference": false,
        "value": [
          "snowflake"
        ],
        "name": "after? *",
        "description": "consider only users after given user id"
      }
    ]
  }
]